import { IFSFlagMetadata, primitive } from '../types';
import { HitAbstract, IHitAbstract } from './HitAbstract';
export declare const ERROR_MESSAGE = "variationGroupId and variationId are required";
export interface IActivate extends IHitAbstract {
    variationGroupId: string;
    variationId: string;
    flagKey: string;
    flagValue: unknown;
    flagDefaultValue: unknown;
    flagMetadata: IFSFlagMetadata;
    visitorContext: Record<string, primitive>;
}
export declare class Activate extends HitAbstract implements IActivate {
    private _variationGroupId;
    private _variationId;
    private _flagKey;
    private _flagValue;
    private _flagDefaultValue;
    private _flagMetadata;
    private _visitorContext;
    constructor(param: Omit<IActivate, 'type' | 'createdAt' | 'traffic'>);
    get variationGroupId(): string;
    set variationGroupId(v: string);
    get variationId(): string;
    set variationId(v: string);
    get flagKey(): string;
    set flagKey(v: string);
    get flagValue(): unknown;
    set flagValue(v: unknown);
    get flagDefaultValue(): unknown;
    set flagDefaultValue(v: unknown);
    get flagMetadata(): IFSFlagMetadata;
    set flagMetadata(v: IFSFlagMetadata);
    get visitorContext(): Record<string, primitive>;
    set visitorContext(v: Record<string, primitive>);
    isReady(checkParent?: boolean): boolean;
    toApiKeys(): Record<string, unknown>;
    toObject(): Record<string, unknown>;
    getErrorMessage(): string;
}
