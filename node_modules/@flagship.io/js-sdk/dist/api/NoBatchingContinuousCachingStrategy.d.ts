import { Activate } from '../hit/Activate';
import { HitAbstract } from '../hit/index';
import { BatchingCachingStrategyAbstract } from './BatchingCachingStrategyAbstract';
import { BatchingCachingStrategyConstruct, SendActivate } from './types';
export declare class NoBatchingContinuousCachingStrategy extends BatchingCachingStrategyAbstract {
    protected cacheHitKeys: Record<string, string>;
    constructor(param: BatchingCachingStrategyConstruct);
    activateFlag(hit: Activate): Promise<void>;
    addHit(hit: HitAbstract): Promise<void>;
    addHitInPoolQueue(_hit: HitAbstract): Promise<void>;
    sendHit(hit: HitAbstract): Promise<void>;
    notConsent(visitorId: string): Promise<void>;
    sendActivate({ activateHitsPool, currentActivate, batchTriggeredBy }: SendActivate): Promise<void>;
}
