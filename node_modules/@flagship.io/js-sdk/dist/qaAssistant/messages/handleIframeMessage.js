import { isBrowser } from '../../utils/utils';
import { MSG_NAME_FROM_IFRAME } from '../type';
import { onApplyForcedVariations, onQaAssistantClose, onQaAssistantReady, onResetForcedVariations, render } from './iframeMessageActions';
export function handleIframeMessage({ event, config, func }) {
    if (!config.isQAModeEnabled || !isBrowser()) {
        return;
    }
    switch (event.data.name) {
        case MSG_NAME_FROM_IFRAME.FsQaAssistantReady:
            onQaAssistantReady();
            break;
        case MSG_NAME_FROM_IFRAME.MinimizeQaAssistantClose:
        case MSG_NAME_FROM_IFRAME.QaAssistantClose:
            onQaAssistantClose({ config, func });
            break;
        case MSG_NAME_FROM_IFRAME.FsApplyForcedVariations:
            onApplyForcedVariations({ value: event.data.value });
            break;
        case MSG_NAME_FROM_IFRAME.FsResetForcedVariations:
            onResetForcedVariations();
            break;
        case MSG_NAME_FROM_IFRAME.FsTriggerRender:
            render(true);
            break;
    }
}
