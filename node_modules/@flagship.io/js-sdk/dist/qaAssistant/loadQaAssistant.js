import { FS_FORCED_VARIATIONS, FS_IS_QA_MODE_ENABLED, QA_ASSISTANT_PROD_URL } from '../enum/FlagshipConstant';
import { logInfoSprintf } from '../utils/utils';
import { appendScript } from './appendScript';
import { handleIframeMessage } from './messages/handleIframeMessage';
/**
 *
 * @param config
 * @returns
 */
export function loadQaAssistant(config, bundleUrl = null) {
    if (window?.frames?.ABTastyQaAssistant) {
        return;
    }
    let forcedVariations = {};
    const sessionForcedVariations = sessionStorage.getItem(FS_FORCED_VARIATIONS);
    try {
        forcedVariations = JSON.parse(sessionForcedVariations || '{}');
    }
    catch (error) {
        // eslint-disable-next-line no-console
        console.error('Error parsing sessionForcedVariations', error);
    }
    window.flagship = {
        ...window.flagship,
        envId: config.envId,
        forcedVariations
    };
    const eventListenerMessage = (event) => {
        handleIframeMessage({ event, config, func: eventListenerMessage });
    };
    window.addEventListener('message', eventListenerMessage);
    logInfoSprintf(config, 'QA assistant', 'Loading QA Assistant');
    appendScript(bundleUrl || QA_ASSISTANT_PROD_URL);
    config.isQAModeEnabled = true;
    sessionStorage.setItem(FS_IS_QA_MODE_ENABLED, 'true');
}
