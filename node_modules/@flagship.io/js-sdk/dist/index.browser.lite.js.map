{"version":3,"file":"index.browser.lite.js","mappings":"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AAK,YACtDA,EAAiBA,EAAiC,eAAI,GAAK,gBAC9D,CAPD,CAOGA,KAAqBA,GAAmB,CAAC,IWArC,MAAMgL,WAAmB9B,GAC5B+B,YACAlG,UACAmG,WACAvG,OACAwG,WACAC,OACAC,WACAC,WACAC,cACAC,iBACAC,oBACAC,WACAC,eACAC,2BACAC,6BACAC,yBACAC,kBACAC,sBACAC,wCACAC,8CACAC,2CACAC,gBACAC,mBACAC,oBACAC,iBACAC,iBACAC,oBACAC,qBACAC,kBACAC,eACAC,qBACAC,gBACAC,gBACAC,0BACAC,cACAC,wBACAC,SACAC,WACAC,aACAC,wBACAC,8BACAC,yBACAC,0BACAC,0BACAC,mBACAC,0BACAC,2BACAC,yBACAC,+BACAC,yBACAC,yBACAC,iBACAC,gBACAC,YACAC,gBACAC,6BACAC,wBACAC,kBACAC,0BACAC,UACAC,iCACAC,YACAC,cACAC,kBACAC,0BACAC,gCACAC,2BACAC,8BACAC,kCACAC,gCACAC,8BACAC,kCACAC,0BACAC,wCACAC,uBACAC,mBACIC,wBACA,OAAO5c,KAAK2c,kBAChB,CACIC,sBAAkBnR,GAClBzL,KAAK2c,mBAAqBlR,CAC9B,CACAoR,kBACAC,SACAC,oBACIC,cACA,OAAOhd,KAAK8c,QAChB,CACIE,YAAQvR,GACRzL,KAAK8c,SAAWrR,CACpB,CACIwR,yBACA,OAAOjd,KAAK+c,mBAChB,CACIE,uBAAmBxR,GACnBzL,KAAK+c,oBAAsBtR,CAC/B,CACIyR,uBACA,OAAOld,KAAK6c,iBAChB,CACIK,qBAAiBzR,GACjBzL,KAAK6c,kBAAoBpR,CAC7B,CACI0R,4BACA,OAAOnd,KAAK0c,sBAChB,CACIS,0BAAsB1R,GACtBzL,KAAK0c,uBAAyBjR,CAClC,CACI2R,6CACA,OAAOpd,KAAKyc,uCAChB,CACIW,2CAAuC3R,GACvCzL,KAAKyc,wCAA0ChR,CACnD,CACI4R,+BACA,OAAOrd,KAAKwc,yBAChB,CACIa,6BAAyB5R,GACzBzL,KAAKwc,0BAA4B/Q,CACrC,CACI6R,uCACA,OAAOtd,KAAKuc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","sources":["webpack://@flagship.io/js-sdk/webpack/universalModuleDefinition","webpack://@flagship.io/js-sdk/./node_modules/events/events.js","webpack://@flagship.io/js-sdk/webpack/bootstrap","webpack://@flagship.io/js-sdk/webpack/runtime/define property getters","webpack://@flagship.io/js-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://@flagship.io/js-sdk/webpack/runtime/make namespace object","webpack://@flagship.io/js-sdk/./src/sdkVersion.ts","webpack://@flagship.io/js-sdk/./src/enum/FlagshipConstant.ts","webpack://@flagship.io/js-sdk/./src/visitor/Visitor.ts","webpack://@flagship.io/js-sdk/./src/enum/FSSdkStatus.ts","webpack://@flagship.io/js-sdk/./src/config/DecisionMode.ts","webpack://@flagship.io/js-sdk/./src/enum/LogLevel.ts","webpack://@flagship.io/js-sdk/./src/enum/FSFetchReasons.ts","webpack://@flagship.io/js-sdk/./src/enum/CacheStrategy.ts","webpack://@flagship.io/js-sdk/./src/types.ts","webpack://@flagship.io/js-sdk/./src/enum/BatchTriggeredBy.ts","webpack://@flagship.io/js-sdk/./src/enum/HitType.ts","webpack://@flagship.io/js-sdk/./src/hit/Event.ts","webpack://@flagship.io/js-sdk/./src/qaAssistant/type.ts","webpack://@flagship.io/js-sdk/./src/utils/utils.ts","webpack://@flagship.io/js-sdk/./src/config/TrackingManagerConfig.ts","webpack://@flagship.io/js-sdk/./src/config/FlagshipConfig.ts","webpack://@flagship.io/js-sdk/./src/config/BucketingConfig.ts","webpack://@flagship.io/js-sdk/./src/config/DecisionApiConfig.ts","webpack://@flagship.io/js-sdk/./src/config/ConfigManager.ts","webpack://@flagship.io/js-sdk/./src/hit/HitAbstract.ts","webpack://@flagship.io/js-sdk/./src/hit/Diagnostic.ts","webpack://@flagship.io/js-sdk/./src/hit/Troubleshooting.ts","webpack://@flagship.io/js-sdk/./src/decision/DecisionManager.ts","webpack://@flagship.io/js-sdk/./src/decision/ApiManager.ts","webpack://@flagship.io/js-sdk/./src/hit/Item.ts","webpack://@flagship.io/js-sdk/./src/hit/Page.ts","webpack://@flagship.io/js-sdk/./src/hit/Screen.ts","webpack://@flagship.io/js-sdk/./src/hit/Transaction.ts","webpack://@flagship.io/js-sdk/./src/hit/Segment.ts","webpack://@flagship.io/js-sdk/./src/hit/ActivateBatch.ts","webpack://@flagship.io/js-sdk/./src/hit/Batch.ts","webpack://@flagship.io/js-sdk/./src/qaAssistant/messages/index.ts","webpack://@flagship.io/js-sdk/./src/api/BatchingCachingStrategyAbstract.ts","webpack://@flagship.io/js-sdk/./src/api/BatchingContinuousCachingStrategy.ts","webpack://@flagship.io/js-sdk/./src/api/BatchingPeriodicCachingStrategy.ts","webpack://@flagship.io/js-sdk/./src/api/NoBatchingContinuousCachingStrategy.ts","webpack://@flagship.io/js-sdk/./src/hit/Activate.ts","webpack://@flagship.io/js-sdk/./src/api/TrackingManagerAbstract.ts","webpack://@flagship.io/js-sdk/./src/api/TrackingManager.ts","webpack://@flagship.io/js-sdk/./src/utils/FlagshipLogManager.ts","webpack://@flagship.io/js-sdk/./src/hit/UsageHit.ts","webpack://@flagship.io/js-sdk/./src/cache/DefaultHitCache.ts","webpack://@flagship.io/js-sdk/./src/cache/DefaultVisitorCache.ts","webpack://@flagship.io/js-sdk/./src/visitor/StrategyAbstract.ts","webpack://@flagship.io/js-sdk/./src/enum/FlagshipContext.ts","webpack://@flagship.io/js-sdk/./src/flag/FSFlagMetadata.ts","webpack://@flagship.io/js-sdk/./src/enum/FSFetchStatus.ts","webpack://@flagship.io/js-sdk/./src/visitor/DefaultStrategy.ts","webpack://@flagship.io/js-sdk/./src/visitor/NotReadyStrategy.ts","webpack://@flagship.io/js-sdk/./src/visitor/PanicStrategy.ts","webpack://@flagship.io/js-sdk/./src/visitor/NoConsentStrategy.ts","webpack://@flagship.io/js-sdk/./src/visitor/VisitorCache.ts","webpack://@flagship.io/js-sdk/./src/utils/MurmurHash.ts","webpack://@flagship.io/js-sdk/./src/visitor/VisitorAbstract.ts","webpack://@flagship.io/js-sdk/./src/enum/FSFlagStatus.ts","webpack://@flagship.io/js-sdk/./src/flag/forceVariation.ts","webpack://@flagship.io/js-sdk/./src/flag/FsFlags.ts","webpack://@flagship.io/js-sdk/./src/flag/FSFlagCollection.ts","webpack://@flagship.io/js-sdk/./src/visitor/VisitorDelegate.ts","webpack://@flagship.io/js-sdk/./src/decision/BucketingManager.ts","webpack://@flagship.io/js-sdk/./src/utils/HttpError.ts","webpack://@flagship.io/js-sdk/./src/depsNode.native.ts","webpack://@flagship.io/js-sdk/./src/utils/HttpClient.ts","webpack://@flagship.io/js-sdk/./src/decision/EdgeManager.ts","webpack://@flagship.io/js-sdk/./src/config/EdgeConfig.ts","webpack://@flagship.io/js-sdk/./src/qaAssistant/appendScript.ts","webpack://@flagship.io/js-sdk/./src/qaAssistant/messages/iframeMessageActions.ts","webpack://@flagship.io/js-sdk/./src/qaAssistant/loadQaAssistant.ts","webpack://@flagship.io/js-sdk/./src/qaAssistant/messages/handleIframeMessage.ts","webpack://@flagship.io/js-sdk/./src/main/Flagship.ts","webpack://@flagship.io/js-sdk/./src/qaAssistant/index.ts","webpack://@flagship.io/js-sdk/./src/qaAssistant/listenForKeyboardQaAssistant.ts","webpack://@flagship.io/js-sdk/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Generated by genversion.\nexport const version = '4.0.4';\n","import { version } from '../sdkVersion';\n/**\n * SDK language\n */\nexport const SDK_INFO = {\n    name: 'TypeScript',\n    version\n};\n/**\n * Default request timeout in second\n */\nexport const REQUEST_TIME_OUT = 2;\nexport const FETCH_FLAG_BUFFERING_DEFAULT_TIME = 2;\nexport const DEFAULT_DEDUPLICATION_TIME = 2.5;\nexport const DEFAULT_POLLING_INTERVAL = 5;\nexport const DEFAULT_SERVER_TIME_INTERVAL = 10;\nexport const DEFAULT_SERVER_POOL_MAX_SIZE = 100;\nexport const DEFAULT_BROWSER_TIME_INTERVAL = 5;\nexport const DEFAULT_BROWSER_POOL_MAX_SIZE = 10;\nexport const BATCH_MAX_SIZE = 2500000;\nexport const ANALYTIC_HIT_ALLOCATION = 1;\n/**\n * Decision api base url\n */\nexport const BASE_API_URL = 'https://decision.flagship.io/v2/';\nexport const HIT_API_URL = 'https://ariane.abtasty.com';\nexport const HIT_EVENT_URL = 'https://events.flagship.io';\nexport const TROUBLESHOOTING_HIT_URL = 'https://events.flagship.io/troubleshooting';\nexport const USAGE_HIT_URL = 'https://events.flagship.io/analytics';\nexport const BUCKETING_API_URL = 'https://cdn.flagship.io/{0}/bucketing.json';\nexport const BUCKETING_API_CONTEXT_URL = 'https://decision.flagship.io/v2/{0}/events';\nexport const THIRD_PARTY_SEGMENT_URL = 'https://api-data-connector.flagship.io/accounts/{0}/segments/{1}';\nexport const HIT_CONSENT_URL = 'https://ariane.abtasty.com';\nexport const URL_CAMPAIGNS = '/campaigns';\nexport const URL_ACTIVATE_MODIFICATION = 'activate';\nexport const QA_ASSISTANT_PROD_URL = 'https://qa-assistant.flagship.io/bundle.js';\nexport const QA_ASSISTANT_STAGING_URL = 'https://staging-qa-assistant.flagship.io/bundle.js';\nexport const QA_ASSISTANT_LOCAL_URL = 'https://local-qa-assistant.flagship.io/bundle.js';\nexport const FS_QA_ASSISTANT = 'fs_qa_assistant';\nexport const FS_QA_ASSISTANT_STAGING = 'fs_qa_assistant_staging';\nexport const FS_QA_ASSISTANT_LOCAL = 'fs_qa_assistant_local';\nexport const TAG_QA_ASSISTANT = 'abtasty_qa_assistant';\nexport const TAG_QA_ASSISTANT_STAGING = 'abtasty_qa_assistant_staging';\nexport const TAG_QA_ASSISTANT_LOCAL = 'abtasty_qa_assistant_local';\nexport const TAG_QA_URL = 'qa-assistant.abtasty.com';\nexport const FS_QA_URL = 'qa-assistant.flagship.io';\nexport const EXPOSE_ALL_KEYS = 'exposeAllKeys';\nexport const SEND_CONTEXT_EVENT = 'sendContextEvent';\nexport const FS_CONSENT = 'fs_consent';\nexport const FS_IS_QA_MODE_ENABLED = 'FS_IS_QA_MODE_ENABLED';\nexport const FS_FORCED_VARIATIONS = 'FS_FORCED_VARIATIONS';\nexport const FS_QA_ASSISTANT_SCRIPT_TAG_ID = 'FS_QA_ASSISTANT_SCRIPT_TAG_ID';\n/**\n * SDK version\n */\nexport const SDK_VERSION = version;\nexport const VISITOR_CACHE_VERSION = 1;\nexport const HIT_CACHE_VERSION = 1;\nexport const DEFAULT_HIT_CACHE_TIME_MS = 14400000;\n/**\n * Message Info\n */\nexport const SDK_STARTED_INFO = 'Flagship SDK (version: {0}) {1}';\nexport const FLAGSHIP_SDK = 'Flagship SDK';\nexport const EMIT_READY = 'ready';\nexport const EMIT_STATUS = 'status';\nexport const NO_BATCHING_WITH_CONTINUOUS_CACHING_STRATEGY = 3;\nexport const JS_DOC_URL = 'https://docs.developers.flagship.io/docs/js-v3';\nexport const PANIC_MODE_DOC_URL = 'https://docs.developers.flagship.io/docs/glossary#panic-mode';\n/**\n * Message Error\n */\nexport const INITIALIZATION_PARAM_ERROR = `Params 'envId' and 'apiKey' must not be null or empty.\n  Learn more: ${JS_DOC_URL}#initialization`;\nexport const ERROR = 'error';\nexport const CONTEXT_NULL_ERROR = 'Context must not to be null';\nexport const CONTEXT_PARAM_ERROR = \"params {0} must be a non null String, and 'value' must be one of the following types , Number, Boolean\";\nexport const GET_MODIFICATION_CAST_ERROR = 'Modification for key {0} has a different type. Default value is returned.';\nexport const GET_MODIFICATION_MISSING_ERROR = 'No modification for key {0}. Default value is returned.';\nexport const GET_MODIFICATION_KEY_ERROR = 'Key {0} must not be null. Default value is returned.';\nexport const ACTIVATE_MODIFICATION_KEY_ERROR = 'Key {0} must not be null, no activate will be sent.';\nexport const GET_MODIFICATION_ERROR = 'No modification for key {0}.';\nexport const GET_FLAG_ERROR = 'No flag for key {0}.';\nexport const ACTIVATE_MODIFICATION_ERROR = 'No modification for key {0}, no activate will be sent.';\nexport const DECISION_MANAGER_MISSING_ERROR = 'decisionManager must not be null.';\nexport const TRACKER_MANAGER_MISSING_ERROR = 'trackerManager must not be null.';\nexport const CURL_LIBRARY_IS_NOT_LOADED = 'curl library is not loaded';\nexport const TYPE_ERROR = '{0} must be a {1}';\nexport const TYPE_INTEGER_ERROR = 'value of {0} is not an {1}, it will be truncated to {1}';\nexport const VISITOR_ID_ERROR = 'visitorId must not be null or empty';\nexport const PANIC_MODE_ERROR = '{0} deactivated while panic mode is on.';\nexport const METHOD_DEACTIVATED_CONSENT_ERROR = 'Method {0} is deactivated for visitor {1} : visitor did not consent.';\nexport const METHOD_DEACTIVATED_ERROR = 'Visitor {0}, method {1} is deactivated while SDK status is: {2}.';\nexport const METHOD_DEACTIVATED_SEND_CONSENT_ERROR = 'Send consent hit is deactivated while SDK status is: {1}.';\nexport const TROUBLESHOOTING_HIT_ADDED_IN_QUEUE = 'The TROUBLESHOOTING HIT has been added to the pool queue : {0}';\nexport const ANALYTICS_HIT_ADDED_IN_QUEUE = 'The USAGE HIT has been added to the pool queue : {0}';\nexport const ACTIVATE_ADDED_IN_QUEUE = 'The ACTIVATE has been added to the pool queue : {0}';\nexport const HIT_ADDED_IN_QUEUE = 'The HIT has been added into the pool queue : {0}';\nexport const ADD_HIT = 'ADD HIT';\nexport const ADD_TROUBLESHOOTING_HIT = 'ADD TROUBLESHOOTING HIT';\nexport const ADD_USAGE_HIT = 'ADD USAGE HIT';\nexport const ADD_ACTIVATE = 'ADD ACTIVATE';\nexport const BATCH_SENT_SUCCESS = 'Batch hit has been sent : {0}';\nexport const TROUBLESHOOTING_SENT_SUCCESS = 'Troubleshooting hit has been sent : {0}';\nexport const ANALYTICS_HIT_SENT_SUCCESS = 'Usage hit has been sent : {0}';\nexport const ACTIVATE_SENT_SUCCESS = 'Activate hit has been sent : {0}';\nexport const SEND_BATCH = 'SEND BATCH';\nexport const SEND_TROUBLESHOOTING = 'SEND TROUBLESHOOTING';\nexport const SEND_USAGE_HIT = 'SEND USAGE HIT';\nexport const SEND_ACTIVATE = 'SEND ACTIVATE';\nexport const SEND_SEGMENT_HIT = 'SEND SEGMENT HIT';\nexport const SEND_HIT = 'SEND HIT';\nexport const EVENT_SUFFIX = 'events';\nexport const FETCH_FLAGS_BUFFERING_MESSAGE = 'Visitor {0}, fetchFlags has been ignored and will continue to be ignored for the next {1}ms, this delay can be changed with `fetchFlagsBufferingTime` option in the SDK config';\nexport const VISITOR_SYNC_FLAGS_MESSAGE = 'without calling `fetchFlags` method afterwards. So, the value of the flag `{1}` might be outdated';\nexport const NEW_VISITOR_NOT_READY = `You can't create a new visitor without first calling the \"Flagship.start\" method.\nLearn more: ${JS_DOC_URL}#initialization\n`;\nexport const LOOKUP_HITS_JSON_OBJECT_ERROR = 'JSON DATA must fit the type HitCacheDTO';\nexport const ACTIVATE_BATCH_LENGTH = 5;\n// Process\nexport const PROCESS = 'process';\nexport const PROCESS_INITIALIZATION = 'INITIALIZATION';\nexport const PROCESS_UPDATE_CONTEXT = 'UPDATE CONTEXT';\nexport const PROCESS_GET_MODIFICATION = 'GET MODIFICATION';\nexport const PROCESS_GET_MODIFICATION_INFO = 'GET MODIFICATION INFO';\nexport const PROCESS_NEW_VISITOR = 'NEW VISITOR';\nexport const PROCESS_ACTIVE_MODIFICATION = 'ACTIVE MODIFICATION';\nexport const PROCESS_SYNCHRONIZED_MODIFICATION = 'SYNCHRONIZED MODIFICATION';\nexport const PROCESS_SEND_HIT = 'ADD HIT';\nexport const PROCESS_SEND_ACTIVATE = 'SEND ACTIVATE';\nexport const PROCESS_GET_CAMPAIGNS = 'GET CAMPAIGNS';\nexport const PROCESS_GET_ALL_MODIFICATION = 'GET ALL MODIFICATIONS';\nexport const PROCESS_MODIFICATIONS_FOR_CAMPAIGN = 'GET MODIFICATION FOR CAMPAIGN';\nexport const PROCESS_CACHE_HIT = 'CACHE HIT';\nexport const PROCESS_FLUSH_HIT = 'FLUSH HIT';\nexport const PROCESS_LOOKUP_HIT = 'LOOKUP HIT';\n// Api items\nexport const BATCH = 'batch';\nexport const CUSTOMER_ENV_ID_API_ITEM = 'cid';\nexport const CUSTOMER_ENV_ID_API_ACTIVATE = 'cid';\nexport const CUSTOMER_UID = 'cuid';\nexport const ANONYMOUS_ID = 'aid';\nexport const VISITOR_ID_API_ITEM = 'vid';\nexport const VARIATION_GROUP_ID_API_ITEM = 'caid';\nexport const VARIATION_GROUP_ID_API_ITEM_ACTIVATE = 'caid';\nexport const VISITOR_CONSENT = 'vc';\nexport const CAMPAIGN_ID = 'caid';\nexport const VARIATION_ID_API_ITEM = 'vaid';\nexport const DS_API_ITEM = 'ds';\nexport const T_API_ITEM = 't';\nexport const QT_API_ITEM = 'qt';\nexport const QA_MODE_API_ITEM = 'qa';\nexport const DL_API_ITEM = 'dl';\nexport const SL_ITEM = 'sl';\nexport const SDK_APP = 'APP';\nexport const TID_API_ITEM = 'tid';\nexport const TA_API_ITEM = 'ta';\nexport const TT_API_ITEM = 'tt';\nexport const TC_API_ITEM = 'tc';\nexport const TCC_API_ITEM = 'tcc';\nexport const ICN_API_ITEM = 'icn';\nexport const SM_API_ITEM = 'sm';\nexport const PM_API_ITEM = 'pm';\nexport const TR_API_ITEM = 'tr';\nexport const TS_API_ITEM = 'ts';\nexport const IN_API_ITEM = 'in';\nexport const IC_API_ITEM = 'ic';\nexport const IP_API_ITEM = 'ip';\nexport const IQ_API_ITEM = 'iq';\nexport const IV_API_ITEM = 'iv';\nexport const S_API_ITEM = 's';\nexport const EVENT_CATEGORY_API_ITEM = 'ec';\nexport const EVENT_ACTION_API_ITEM = 'ea';\nexport const EVENT_LABEL_API_ITEM = 'el';\nexport const EVENT_VALUE_API_ITEM = 'ev';\nexport const USER_IP_API_ITEM = 'uip';\nexport const SCREEN_RESOLUTION_API_ITEM = 'sr';\nexport const USER_LANGUAGE = 'ul';\nexport const SESSION_NUMBER = 'sn';\nexport const HEADER_X_API_KEY = 'x-api-key';\nexport const HEADER_X_ENV_ID = 'x-env-id';\nexport const HEADER_CONTENT_TYPE = 'Content-Type';\nexport const HEADER_X_SDK_CLIENT = 'x-sdk-client';\nexport const HEADER_X_SDK_VERSION = 'x-sdk-version';\nexport const HEADER_APPLICATION_JSON = 'application/json';\n// Log\nexport const INITIALIZATION_STARTING = 'Flagship SDK version {0} is starting in {1} mode with config {2}';\nexport const BUCKETING_POOLING_STARTED = 'Bucketing polling process has been started';\nexport const BUCKETING_POOLING_STOPPED = 'Bucketing polling process has been stopped';\nexport const PROCESS_BUCKETING = 'BUCKETING';\nexport const POLLING_EVENT_200 = 'Polling event with code status 200 : {0}';\nexport const POLLING_EVENT_300 = 'Polling event with code status 304';\nexport const POLLING_EVENT_FAILED = 'Polling event failed with error';\nexport const PROCESS_SDK_STATUS = 'SDK STATUS';\nexport const SDK_STATUS_CHANGED = 'SDK status has changed:  {0}';\nexport const SAVE_VISITOR_INSTANCE = 'Visitor {0} has been saved in SDK instance';\nexport const VISITOR_CREATED = 'Visitor {0} has been created with context {1}, isAuthenticated:{2} and hasConsented {3}';\nexport const VISITOR_PROFILE_LOADED = 'Visitor profile has been loaded {0}';\nexport const VISITOR_ID_GENERATED = 'Visitor identifier is empty. A UUID {0} has been generated.';\nexport const PREDEFINED_CONTEXT_LOADED = 'Predefined Context have been loaded {0}';\nexport const CONTEXT_KEY_ERROR = `Visitor {0}, the key '{1}' must be a non null String.\nLearn more: ${JS_DOC_URL}#updating-the-visitor-context`;\nexport const CONTEXT_VALUE_ERROR = `Visitor {0}, 'value' for key '{1}[], must be one of the following types : String, Number, Boolean\nLearn more: ${JS_DOC_URL}#updating-the-visitor-context`;\nexport const PREDEFINED_CONTEXT_TYPE_ERROR = `visitor {0}, Predefined Context {0} must be of type {1}\nLearn more: ${JS_DOC_URL}#predefined-user-context-keys-`;\nexport const CONTEXT_KEY_VALUE_UPDATE = 'visitor `{0}`, context have been updated: key {1}, value {2}, Context {3}';\nexport const CONTEXT_OBJET_PARAM_UPDATE = 'visitor `{0}`, context have been updated: key/value {1}, Context {2}';\nexport const CLEAR_CONTEXT = 'visitor `{0}`, context has been cleared cleared `{1}`';\nexport const PROCESS_CLEAR_CONTEXT = 'CLEAR_CONTEXT';\nexport const CONSENT_CHANGED = 'Visitor `{0}` consent has been changed : {1}';\nexport const PROCESS_SET_CONSENT = 'SET_CONSENT';\nexport const FETCH_CAMPAIGNS_SUCCESS = 'Visitor {0}, anonymousId {1} with context {2} has just fetched campaigns {3} in {4} ms';\nexport const FETCH_CAMPAIGNS_FROM_CACHE = 'Visitor {0}, anonymousId {1} with context {2} has just fetched campaigns from cache {3} in {4} ms';\nexport const FETCH_FLAGS_FROM_CAMPAIGNS = 'Visitor {0}, anonymousId {1} with context {2} has just fetched flags {3} from Campaigns';\nexport const FETCH_FLAGS_STARTED = 'visitor `{0}` fetchFlags process is started';\nexport const FETCH_FLAGS_PANIC_MODE = 'Panic mode is enabled : all feature are disabled except fetchFlags.';\nexport const PROCESS_FETCHING_FLAGS = 'FETCH_FLAGS';\nexport const GET_FLAG_MISSING_ERROR = 'For the visitor \"{0}\", no flags were found with the key \"{1}\". Therefore, the default value \"{2}\" has been returned.';\nexport const GET_FLAG_NOT_FOUND = 'For the visitor \"{0}\", no flags were found with the key \"{1}\". Therefore, an empty flag has been returned.';\nexport const FETCH_FLAGS_MISSING = 'Visitor {0} has {1} without calling fetchFlags method, ';\nexport const FLAG_VALUE = 'FLAG_VALUE';\nexport const GET_FLAG = 'GET_FLAG';\nexport const GET_FLAG_CAST_ERROR = 'For the visitor \"{0}\", the flag with key \"{1}\" has a different type compared to the default value. Therefore, the default value \"{2}\" has been returned.';\nexport const GET_FLAG_VALUE = 'Visitor {0}, Flag for key {1} returns value {2}';\nexport const USER_EXPOSED_FLAG_ERROR = 'For the visitor \"{0}\", no flags were found with the key \"{1}\". As a result, user exposure will not be sent.';\nexport const VISITOR_EXPOSED_VALUE_NOT_CALLED = 'Visitor \"{0}\", the flag with the key \"{1}\" has been exposed without calling the `getValue` method first.';\nexport const FLAG_VISITOR_EXPOSED = 'FLAG_VISITOR_EXPOSED';\nexport const USER_EXPOSED_CAST_ERROR = 'For the visitor \"{0}\", the flag with key \"{1}\" has been exposed despite having a different type compared to the default value';\nexport const GET_METADATA_CAST_ERROR = 'Visitor {0}, Flag for key {1} has a different type with default value: Empty metadata object is returned {2}';\nexport const FLAG_METADATA = 'FLAG_METADATA';\nexport const NO_FLAG_METADATA = 'Visitor {0}, No Flags found for key {1}:  Empty metadata object is returned';\nexport const METADATA_SDK_NOT_READY = `Visitor {0}, Flag for key {1} Method Flag.metadata is deactivated while SDK status is NOT_READY: Empty metadata object is returned {2}\nLearn more: ${JS_DOC_URL}#getting-flags-campaigns-metadata`;\nexport const METADATA_PANIC_MODE = `Visitor {0}, Flag for key {1} Method Flag.metadata is deactivated while SDK status is PANIC: Empty metadata object is returned {2}\nLearn more: ${PANIC_MODE_DOC_URL}`;\nexport const AUTHENTICATE = 'AUTHENTICATE';\nexport const VISITOR_AUTHENTICATE = 'The visitor is authenticated with new visitor ID {0} anonymous ID {1}';\nexport const VISITOR_ALREADY_AUTHENTICATE = 'The visitor is already authenticated with visitor ID {0}';\nexport const METHOD_DEACTIVATED_BUCKETING_ERROR = 'Visitor {0}, Method {1} is deactivated on Bucketing mode';\nexport const VISITOR_AUTHENTICATE_VISITOR_ID_ERROR = `Visitor {0}, visitorId must not be null or empty\nLearn more: ${JS_DOC_URL}#authenticate`;\nexport const VISITOR_UNAUTHENTICATE = 'The visitor is unauthenticated with visitor ID {0}';\nexport const UNAUTHENTICATE = 'UNAUTHENTICATE';\nexport const FLAGSHIP_VISITOR_NOT_AUTHENTICATE = 'Visitor {0} is not authenticated yet';\nexport const ALLOCATION = 'ALLOCATION';\nexport const BUCKETING_VARIATION_CACHE = 'Visitor {0}, Variation {1} selected from cache.';\nexport const BUCKETING_NEW_ALLOCATION = 'Visitor {0}, Variation {1} selected with allocation {2}.';\nexport const LOOKUP_VISITOR_JSON_OBJECT_ERROR = `lookupVisitor method has loaded a bad format version ({0}) for visitor {1}.\nLearn more: ${JS_DOC_URL}#managing-visitor-cache`;\nexport const PROCESS_CACHE = 'CACHE';\nexport const VISITOR_CACHE_ERROR = 'visitor {0}. {1} threw an exception {2}';\nexport const HIT_CACHE_ERROR = '{0} threw an exception {1}';\nexport const VISITOR_CACHE_LOADED = 'Visitor {0}, visitor cache has been loaded from database: {1}';\nexport const VISITOR_CACHE_SAVED = 'Visitor {0}, visitor cache has been saved into database : {0}';\nexport const VISITOR_CACHE_FLUSHED = 'Visitor {0}, visitor cache has been flushed from database.';\nexport const HIT_CACHE_LOADED = 'Hits cache has been loaded from database: {0}';\nexport const HIT_CACHE_SAVED = 'Hit cache has been saved into database : {0}';\nexport const HIT_DATA_FLUSHED = 'The following hit keys have been flushed from database : {0}';\nexport const ALL_HITS_FLUSHED = 'All hits cache has been flushed from database';\nexport const BATCH_LOOP_STARTED = 'The Batch Loop has been started with a time interval of {0} ms';\nexport const TRACKING_MANAGER = 'TRACKING_MANAGER';\nexport const BATCH_LOOP_STOPPED = 'The Batch Loop has been stopped';\nexport const TRACKING_MANAGER_ERROR = '{0} Unexpected Error occurred {1}';\nexport const HIT_SENT_SUCCESS = '{0} has been sent : {1}';\nexport const ACTIVATE_HIT = 'ACTIVATE HIT';\nexport const BATCH_HIT = 'BATCH HIT';\nexport const DIRECT_HIT = 'HIT';\nexport const GET_THIRD_PARTY_SEGMENT = 'GET_THIRD_PARTY_SEGMENT';\nexport const CONSENT_NOT_SPECIFY_WARNING = 'Consent has not been specified. By default, consent is set to false, which may result in some features being deactivated.';\n","import { EventEmitter } from '../depsNode.native';\nimport { EMIT_READY } from '../enum/index';\n/**\n * The `Visitor` class represents a unique user within your application. It aids in\n * managing the visitor's data and fetching the corresponding flags for the visitor\n * from the [Flagship platform](https://app.flagship.io/login) .\n */\nexport class Visitor extends EventEmitter {\n    visitorDelegate;\n    constructor(visitorDelegate) {\n        super();\n        this.visitorDelegate = visitorDelegate;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.visitorDelegate.on(EMIT_READY, (err) => {\n            this.emit(EMIT_READY, err);\n        });\n    }\n    /**\n     * @inheritdoc\n     */\n    get visitorId() {\n        return this.visitorDelegate.visitorId;\n    }\n    /**\n     * @inheritdoc\n     */\n    set visitorId(v) {\n        this.visitorDelegate.visitorId = v;\n    }\n    /**\n     * @inheritdoc\n     */\n    get anonymousId() {\n        return this.visitorDelegate.anonymousId;\n    }\n    /**\n     * @inheritdoc\n     */\n    get config() {\n        return this.visitorDelegate.config;\n    }\n    /**\n     * @inheritdoc\n     */\n    get context() {\n        return this.visitorDelegate.context;\n    }\n    /**\n     * @inheritdoc\n     */\n    get fetchStatus() {\n        return this.visitorDelegate.fetchStatus;\n    }\n    /**\n     * @inheritdoc\n     */\n    get hasConsented() {\n        return this.visitorDelegate.hasConsented;\n    }\n    /**\n     * @inheritdoc\n     */\n    setConsent(hasConsented) {\n        this.visitorDelegate.setConsent(hasConsented);\n    }\n    updateContext(context, value) {\n        this.visitorDelegate.updateContext(context, value);\n    }\n    /**\n     * @inheritdoc\n     */\n    clearContext() {\n        this.visitorDelegate.clearContext();\n    }\n    /**\n     * @inheritdoc\n     */\n    getFlag(key) {\n        return this.visitorDelegate.getFlag(key);\n    }\n    /**\n     * @inheritdoc\n     */\n    getFlags() {\n        return this.visitorDelegate.getFlags();\n    }\n    /**\n     * @inheritdoc\n     */\n    fetchFlags() {\n        return this.visitorDelegate.fetchFlags();\n    }\n    sendHit(hit) {\n        return this.visitorDelegate.sendHit(hit);\n    }\n    sendHits(hits) {\n        return this.visitorDelegate.sendHits(hits);\n    }\n    /**\n     * @inheritdoc\n     */\n    authenticate(visitorId) {\n        this.visitorDelegate.authenticate(visitorId);\n    }\n    /**\n     * @inheritdoc\n     */\n    unauthenticate() {\n        this.visitorDelegate.unauthenticate();\n    }\n}\n","/**\n * Enum representing the status of the Flagship SDK.\n */\nexport var FSSdkStatus;\n(function (FSSdkStatus) {\n    /**\n     * It is the default initial status. This status remains until the sdk has been initialized successfully.\n     */\n    FSSdkStatus[FSSdkStatus[\"SDK_NOT_INITIALIZED\"] = 0] = \"SDK_NOT_INITIALIZED\";\n    /**\n     * The SDK is currently initializing.\n     */\n    FSSdkStatus[FSSdkStatus[\"SDK_INITIALIZING\"] = 1] = \"SDK_INITIALIZING\";\n    /**\n     * Flagship SDK is ready but is running in Panic mode: All features are disabled except the one which refresh this status.\n     */\n    FSSdkStatus[FSSdkStatus[\"SDK_PANIC\"] = 2] = \"SDK_PANIC\";\n    /**\n     * The Initialization is done, and Flagship SDK is ready to use.\n     */\n    FSSdkStatus[FSSdkStatus[\"SDK_INITIALIZED\"] = 3] = \"SDK_INITIALIZED\";\n})(FSSdkStatus || (FSSdkStatus = {}));\n","export var DecisionMode;\n(function (DecisionMode) {\n    /**\n     *   /**\n     * Flagship SDK mode decision api\n     */\n    DecisionMode[\"DECISION_API\"] = \"DECISION-API\";\n    /**\n     * Flagship SDK mode bucketing\n     */\n    DecisionMode[\"BUCKETING\"] = \"BUCKETING\";\n    DecisionMode[\"BUCKETING_EDGE\"] = \"BUCKETING_EDGE\";\n})(DecisionMode || (DecisionMode = {}));\n","export var LogLevel;\n(function (LogLevel) {\n    /**\n       * NONE = 0: Logging will be disabled.\n       */\n    LogLevel[LogLevel[\"NONE\"] = 0] = \"NONE\";\n    /**\n       * EMERGENCY = 1: Only emergencies will be logged.\n       */\n    LogLevel[LogLevel[\"EMERGENCY\"] = 1] = \"EMERGENCY\";\n    /**\n       * ALERT = 2: Only alerts and above will be logged.\n       */\n    LogLevel[LogLevel[\"ALERT\"] = 2] = \"ALERT\";\n    /**\n       * CRITICAL = 3: Only critical and above will be logged.\n       */\n    LogLevel[LogLevel[\"CRITICAL\"] = 3] = \"CRITICAL\";\n    /**\n       * ERROR = 4: Only errors and above will be logged.\n       */\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    /**\n       * WARNING = 5: Only warnings and above will be logged.\n       */\n    LogLevel[LogLevel[\"WARNING\"] = 5] = \"WARNING\";\n    /**\n       * NOTICE = 6: Only notices and above will be logged.\n       */\n    LogLevel[LogLevel[\"NOTICE\"] = 6] = \"NOTICE\";\n    /**\n       * INFO = 7: Only info logs and above will be logged.\n       */\n    LogLevel[LogLevel[\"INFO\"] = 7] = \"INFO\";\n    /**\n       * DEBUG = 8: Only debug logs and above will be logged.\n       */\n    LogLevel[LogLevel[\"DEBUG\"] = 8] = \"DEBUG\";\n    /**\n       * ALL = 9: All logs will be logged.\n       */\n    LogLevel[LogLevel[\"ALL\"] = 9] = \"ALL\";\n})(LogLevel || (LogLevel = {}));\n","/**\n * Enum representing the reasons for fetching Flags.\n */\nexport var FSFetchReasons;\n(function (FSFetchReasons) {\n    /**\n     * Indicates that a context has been updated or changed.\n     */\n    FSFetchReasons[\"UPDATE_CONTEXT\"] = \"UPDATE_CONTEXT\";\n    /**\n     * Indicates that the XPC method 'authenticate' has been called.\n     */\n    FSFetchReasons[\"AUTHENTICATE\"] = \"AUTHENTICATE\";\n    /**\n     * Indicates that the XPC method 'unauthenticate' has been called.\n     */\n    FSFetchReasons[\"UNAUTHENTICATE\"] = \"UNAUTHENTICATE\";\n    /**\n     * Indicates that fetching flags has failed.\n     */\n    FSFetchReasons[\"FETCH_ERROR\"] = \"FETCH_ERROR\";\n    /**\n     * Indicates that flags have been fetched from the cache.\n     */\n    FSFetchReasons[\"READ_FROM_CACHE\"] = \"READ_FROM_CACHE\";\n    /**\n     * Indicates that the visitor has been created.\n     */\n    FSFetchReasons[\"VISITOR_CREATED\"] = \"VISITOR_CREATED\";\n    /**\n     * Indicates that there is no specific reason for fetching flags.\n     */\n    FSFetchReasons[\"NONE\"] = \"NONE\";\n})(FSFetchReasons || (FSFetchReasons = {}));\n","/**\n * Define the strategy that will be used for hit caching\n */\nexport var CacheStrategy;\n(function (CacheStrategy) {\n    /**\n     * When a hit is emitted, it will be first cached in database using IHitCacheImplementation and added into the pool, then after batching and sending, it will also be flushed from database using IHitCacheImplementation.\n     *\n     * Note: the SDK has a default cache implementation for browser using localStorage\n     */\n    CacheStrategy[CacheStrategy[\"CONTINUOUS_CACHING\"] = 0] = \"CONTINUOUS_CACHING\";\n    /**\n     * When a hit is emitted, it will be added into the pool, then after batching and sending, all database hits will be flushed, then the entire pool will be cached using IHitCacheImplementation for both actions.\n     */\n    CacheStrategy[CacheStrategy[\"PERIODIC_CACHING\"] = 1] = \"PERIODIC_CACHING\";\n})(CacheStrategy || (CacheStrategy = {}));\n","export var TroubleshootingLabel;\n(function (TroubleshootingLabel) {\n    TroubleshootingLabel[\"VISITOR_SEND_HIT\"] = \"VISITOR_SEND_HIT\";\n    TroubleshootingLabel[\"VISITOR_FETCH_CAMPAIGNS_ERROR\"] = \"VISITOR_FETCH_CAMPAIGNS_ERROR\";\n    TroubleshootingLabel[\"VISITOR_FETCH_CAMPAIGNS\"] = \"VISITOR_FETCH_CAMPAIGNS\";\n    TroubleshootingLabel[\"VISITOR_AUTHENTICATE\"] = \"VISITOR_AUTHENTICATE\";\n    TroubleshootingLabel[\"VISITOR_UNAUTHENTICATE\"] = \"VISITOR_UNAUTHENTICATE\";\n    TroubleshootingLabel[\"VISITOR_EXPOSED_FLAG_NOT_FOUND\"] = \"VISITOR_EXPOSED_FLAG_NOT_FOUND\";\n    TroubleshootingLabel[\"FLAG_VALUE_NOT_CALLED\"] = \"FLAG_VALUE_NOT_CALLED\";\n    TroubleshootingLabel[\"GET_FLAG_VALUE_FLAG_NOT_FOUND\"] = \"GET_FLAG_VALUE_FLAG_NOT_FOUND\";\n    TroubleshootingLabel[\"GET_FLAG_METADATA_TYPE_WARNING\"] = \"GET_FLAG_METADATA_TYPE_WARNING\";\n    TroubleshootingLabel[\"GET_FLAG_VALUE_TYPE_WARNING\"] = \"GET_FLAG_VALUE_TYPE_WARNING\";\n    TroubleshootingLabel[\"VISITOR_EXPOSED_TYPE_WARNING\"] = \"VISITOR_EXPOSED_TYPE_WARNING\";\n    TroubleshootingLabel[\"VISITOR_SEND_ACTIVATE\"] = \"VISITOR_SEND_ACTIVATE\";\n    TroubleshootingLabel[\"GET_CAMPAIGNS_ROUTE_RESPONSE_ERROR\"] = \"GET_CAMPAIGNS_ROUTE_RESPONSE_ERROR\";\n    TroubleshootingLabel[\"GET_CAMPAIGNS_ROUTE_RESPONSE\"] = \"GET_CAMPAIGNS_ROUTE_RESPONSE\";\n    TroubleshootingLabel[\"SDK_BUCKETING_FILE\"] = \"SDK_BUCKETING_FILE\";\n    TroubleshootingLabel[\"SEND_ACTIVATE_HIT_ROUTE_ERROR\"] = \"SEND_ACTIVATE_HIT_ROUTE_ERROR\";\n    TroubleshootingLabel[\"SEND_BATCH_HIT_ROUTE_RESPONSE_ERROR\"] = \"SEND_BATCH_HIT_ROUTE_RESPONSE_ERROR\";\n    TroubleshootingLabel[\"SEND_HIT_ROUTE_ERROR\"] = \"SEND_HIT_ROUTE_ERROR\";\n    TroubleshootingLabel[\"SDK_BUCKETING_FILE_ERROR\"] = \"SDK_BUCKETING_FILE_ERROR\";\n    TroubleshootingLabel[\"SDK_CONFIG\"] = \"SDK_CONFIG\";\n})(TroubleshootingLabel || (TroubleshootingLabel = {}));\nexport var VisitorCacheStatus;\n(function (VisitorCacheStatus) {\n    VisitorCacheStatus[\"NONE\"] = \"NONE\";\n    VisitorCacheStatus[\"ANONYMOUS_ID_CACHE\"] = \"ANONYMOUS_ID_CACHE\";\n    VisitorCacheStatus[\"VISITOR_ID_CACHE\"] = \"VISITOR_ID_CACHE\";\n    VisitorCacheStatus[\"VISITOR_ID_CACHE_NOT_ANONYMOUS_ID_CACHE\"] = \"VISITOR_ID_CACHE_NOT_ANONYMOUS_ID_CACHE\";\n})(VisitorCacheStatus || (VisitorCacheStatus = {}));\n","export var BatchTriggeredBy;\n(function (BatchTriggeredBy) {\n    BatchTriggeredBy[BatchTriggeredBy[\"Timer\"] = 0] = \"Timer\";\n    BatchTriggeredBy[BatchTriggeredBy[\"BatchLength\"] = 1] = \"BatchLength\";\n    BatchTriggeredBy[BatchTriggeredBy[\"Flush\"] = 2] = \"Flush\";\n    BatchTriggeredBy[BatchTriggeredBy[\"ActivateLength\"] = 3] = \"ActivateLength\";\n    BatchTriggeredBy[BatchTriggeredBy[\"DirectHit\"] = 4] = \"DirectHit\";\n    BatchTriggeredBy[BatchTriggeredBy[\"DirectActivate\"] = 5] = \"DirectActivate\";\n})(BatchTriggeredBy || (BatchTriggeredBy = {}));\n","export var HitType;\n(function (HitType) {\n    /**\n     * User has seen a URL\n     *\n     */\n    HitType[\"PAGE_VIEW\"] = \"PAGEVIEW\";\n    /**\n     * User has seen a URL\n     *\n     */\n    HitType[\"PAGE\"] = \"PAGEVIEW\";\n    /**\n     * User has seen a screen.\n     *\n     */\n    HitType[\"SCREEN_VIEW\"] = \"SCREENVIEW\";\n    /**\n     * User has seen a screen.\n     *\n     */\n    HitType[\"SCREEN\"] = \"SCREENVIEW\";\n    /**\n     * User has made a transaction.\n     *\n     */\n    HitType[\"TRANSACTION\"] = \"TRANSACTION\";\n    /**\n     * Item bought in a transaction.\n     *\n     */\n    HitType[\"ITEM\"] = \"ITEM\";\n    /**\n     * User has made a specific action.\n     *\n     */\n    HitType[\"EVENT\"] = \"EVENT\";\n})(HitType || (HitType = {}));\n","import { EVENT_ACTION_API_ITEM, EVENT_CATEGORY_API_ITEM, EVENT_LABEL_API_ITEM, EVENT_VALUE_API_ITEM } from '../enum/FlagshipConstant';\nimport { HitType } from '../enum/HitType';\nimport { logError } from '../utils/utils';\nimport { HitAbstract } from './HitAbstract';\nexport const ERROR_MESSAGE = 'event category and event action are required';\nexport const CATEGORY_ERROR = 'The category value must be either EventCategory::ACTION_TRACKING or EventCategory::ACTION_TRACKING';\nexport const VALUE_FIELD_ERROR = 'value must be an integer and be >= 0';\nexport var EventCategory;\n(function (EventCategory) {\n    EventCategory[\"ACTION_TRACKING\"] = \"Action Tracking\";\n    EventCategory[\"USER_ENGAGEMENT\"] = \"User Engagement\";\n})(EventCategory || (EventCategory = {}));\nexport class Event extends HitAbstract {\n    _category;\n    _action;\n    _label;\n    _value;\n    get category() {\n        return this._category;\n    }\n    /**\n     * Specify Action Tracking or User Engagement.\n     */\n    set category(v) {\n        if (!(Object.values(EventCategory).includes(v))) {\n            logError(this.config, CATEGORY_ERROR, 'category');\n            return;\n        }\n        this._category = v;\n    }\n    get action() {\n        return this._action;\n    }\n    /**\n     * Specify Event name that will also serve as the KPI\n     * that you will have inside your reporting\n     */\n    set action(v) {\n        if (!this.isNotEmptyString(v, 'action')) {\n            return;\n        }\n        this._action = v;\n    }\n    get label() {\n        return this._label;\n    }\n    /**\n     * Specify additional description of event.\n     */\n    set label(v) {\n        if (!this.isNotEmptyString(v, 'label')) {\n            return;\n        }\n        this._label = v;\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Specify the monetary value associated with an event\n     * (e.g. you earn 10 to 100 euros depending on the quality of lead generated).\n     *\n     * <br/> NOTE: this value must be non-negative.\n     */\n    set value(v) {\n        if (!Number.isInteger(v) || v < 0) {\n            logError(this.config, VALUE_FIELD_ERROR, 'value');\n            return;\n        }\n        this._value = v;\n    }\n    constructor(param) {\n        super({\n            type: HitType.EVENT,\n            userIp: param.userIp,\n            screenResolution: param.screenResolution,\n            locale: param.locale,\n            sessionNumber: param.sessionNumber,\n            visitorId: param.visitorId,\n            anonymousId: param.anonymousId,\n            qaMode: param.qaMode\n        });\n        const { category, action, label, value } = param;\n        this.category = category;\n        this.action = action;\n        if (label) {\n            this.label = label;\n        }\n        if (value) {\n            this.value = value;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toApiKeys() {\n        const apiKeys = super.toApiKeys();\n        apiKeys[EVENT_CATEGORY_API_ITEM] = this.category;\n        apiKeys[EVENT_ACTION_API_ITEM] = this.action;\n        if (this.label) {\n            apiKeys[EVENT_LABEL_API_ITEM] = this.label;\n        }\n        if (this.value) {\n            apiKeys[EVENT_VALUE_API_ITEM] = this.value;\n        }\n        return apiKeys;\n    }\n    toObject() {\n        return {\n            ...super.toObject(),\n            category: this.category,\n            action: this.action,\n            label: this.label,\n            value: this.value\n        };\n    }\n    isReady(checkParent = true) {\n        return !!((!checkParent || super.isReady()) && this.category && this.action);\n    }\n    getErrorMessage() {\n        return ERROR_MESSAGE;\n    }\n}\n","/**\n * All events posted from iframe\n */\nexport var MSG_NAME_FROM_IFRAME;\n(function (MSG_NAME_FROM_IFRAME) {\n    MSG_NAME_FROM_IFRAME[\"QaAssistantClose\"] = \"ABTASTY_QA_ASSISTANT_CLOSE\";\n    MSG_NAME_FROM_IFRAME[\"FsApplyForcedVariations\"] = \"FS_APPLY_FORCED_VARIATIONS\";\n    MSG_NAME_FROM_IFRAME[\"FsResetForcedVariations\"] = \"FS_RESET_FORCED_VARIATIONS\";\n    MSG_NAME_FROM_IFRAME[\"FsQaAssistantReady\"] = \"FS_QA_ASSISTANT_READY\";\n    MSG_NAME_FROM_IFRAME[\"MinimizeQaAssistantClose\"] = \"ABTASTY_QA_MINIMIZE_QA_ASSISTANT_CLOSE\";\n    MSG_NAME_FROM_IFRAME[\"FsTriggerRender\"] = \"FS_TRIGGER_RENDER\";\n})(MSG_NAME_FROM_IFRAME || (MSG_NAME_FROM_IFRAME = {}));\n/**\n * All events posted to iframe\n */\nexport var MSG_NAME_TO_IFRAME;\n(function (MSG_NAME_TO_IFRAME) {\n    MSG_NAME_TO_IFRAME[\"FsUpdateVisitorAllocatedVariation\"] = \"FS_UPDATE_VISITOR_ALLOCATED_VARIATION\";\n    MSG_NAME_TO_IFRAME[\"FsVisitorExposedVariation\"] = \"FS_VISITOR_EXPOSED_VARIATION\";\n    MSG_NAME_TO_IFRAME[\"FsHIT\"] = \"FS_HIT\";\n})(MSG_NAME_TO_IFRAME || (MSG_NAME_TO_IFRAME = {}));\nexport var INTERNAL_EVENTS;\n(function (INTERNAL_EVENTS) {\n    INTERNAL_EVENTS[\"FsTriggerRendering\"] = \"FS_TRIGGER_RENDERING\";\n})(INTERNAL_EVENTS || (INTERNAL_EVENTS = {}));\n","import { FSFetchReasons } from '../enum/FSFetchReasons';\nimport { LogLevel, VISITOR_SYNC_FLAGS_MESSAGE } from '../enum/index';\n/**\n * Return a formatted string\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function sprintf(format, ...value) {\n    let formatted = format;\n    for (let i = 0; i < value.length; i++) {\n        const item = value[i];\n        const element = typeof item === 'string' ? item : JSON.stringify(item instanceof Map ? Array.from(item.values()) : item);\n        formatted = formatted.replace(new RegExp(`\\\\{${i}\\\\}`, 'g'), element);\n    }\n    return formatted;\n}\nexport function logErrorSprintf(config, tag, message, ...arg) {\n    if (!config || !config.logLevel || config.logLevel < LogLevel.ERROR) {\n        return;\n    }\n    const customMessage = sprintf(message, ...arg);\n    logError(config, customMessage, tag);\n}\nexport function logError(config, message, tag) {\n    if (!config || !config.logLevel || config.logLevel < LogLevel.ERROR) {\n        return;\n    }\n    if (typeof config.onLog === 'function') {\n        config.onLog(LogLevel.ERROR, tag, message);\n    }\n    if (config.logManager && typeof config.logManager.error === 'function') {\n        config.logManager.error(message, tag);\n    }\n}\nexport function logWarningSprintf(config, tag, message, ...arg) {\n    if (!config || !config.logLevel || config.logLevel < LogLevel.WARNING) {\n        return;\n    }\n    const customMessage = sprintf(message, ...arg);\n    logWarning(config, customMessage, tag);\n}\nexport function logWarning(config, message, tag) {\n    if (!config || !config.logLevel || config.logLevel < LogLevel.WARNING) {\n        return;\n    }\n    if (typeof config.onLog === 'function') {\n        config.onLog(LogLevel.WARNING, tag, message);\n    }\n    if (config.logManager && typeof config.logManager.warning === 'function') {\n        config.logManager.warning(message, tag);\n    }\n}\nexport function logInfoSprintf(config, tag, message, ...arg) {\n    if (!config || !config.logLevel || config.logLevel < LogLevel.INFO) {\n        return;\n    }\n    const customMessage = sprintf(message, ...arg);\n    logInfo(config, customMessage, tag);\n}\nexport function logInfo(config, message, tag) {\n    if (!config || !config.logLevel || config.logLevel < LogLevel.INFO) {\n        return;\n    }\n    if (typeof config.onLog === 'function') {\n        config.onLog(LogLevel.INFO, tag, message);\n    }\n    if (config.logManager && typeof config.logManager.info === 'function') {\n        config.logManager.info(message, tag);\n    }\n}\nexport function logDebugSprintf(config, tag, message, ...arg) {\n    if (!config || !config.logLevel || config.logLevel < LogLevel.DEBUG) {\n        return;\n    }\n    const customMessage = sprintf(message, ...arg);\n    logDebug(config, customMessage, tag);\n}\nexport function logDebug(config, message, tag) {\n    if (!config || !config.logLevel || config.logLevel < LogLevel.DEBUG) {\n        return;\n    }\n    if (typeof config.onLog === 'function') {\n        config.onLog(LogLevel.DEBUG, tag, message);\n    }\n    if (config.logManager && typeof config.logManager.debug === 'function') {\n        config.logManager.debug(message, tag);\n    }\n}\nexport function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport function isBrowser() {\n    return typeof window !== 'undefined' && typeof window.document !== 'undefined';\n}\nexport function hasSameType(flagValue, defaultValue) {\n    if (typeof flagValue !== typeof defaultValue) {\n        return false;\n    }\n    if (typeof flagValue === 'object' && typeof defaultValue === 'object' &&\n        Array.isArray(flagValue) !== Array.isArray(defaultValue)) {\n        return false;\n    }\n    return true;\n}\nexport function uuidV4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (char) {\n        const rand = Math.random() * 16 | 0;\n        const value = char === 'x' ? rand : (rand & 0x3 | 0x8);\n        return value.toString(16);\n    });\n}\nexport function errorFormat(message, errorData) {\n    return JSON.stringify({\n        message,\n        data: errorData\n    });\n}\nexport function visitorFlagSyncStatusMessage(reason) {\n    let message = '';\n    switch (reason) {\n        case FSFetchReasons.VISITOR_CREATED:\n            message = `Visitor \\`{0}\\` has been created ${VISITOR_SYNC_FLAGS_MESSAGE}`;\n            break;\n        case FSFetchReasons.UPDATE_CONTEXT:\n            message = `Visitor context for visitor \\`{0}\\` has been updated ${VISITOR_SYNC_FLAGS_MESSAGE}`;\n            break;\n        case FSFetchReasons.AUTHENTICATE:\n            message = `Visitor \\`{0}\\` has been authenticated ${VISITOR_SYNC_FLAGS_MESSAGE}`;\n            break;\n        case FSFetchReasons.UNAUTHENTICATE:\n            message = `Visitor \\`{0}\\` has been unauthenticated ${VISITOR_SYNC_FLAGS_MESSAGE}`;\n            break;\n        case FSFetchReasons.FETCH_ERROR:\n            message = 'There was an error while fetching flags for visitor `{0}`. So the value of the flag `{1}` may be outdated\"';\n            break;\n        case FSFetchReasons.READ_FROM_CACHE:\n            message = 'Flags for visitor `{0}` have been fetched from cache';\n            break;\n        default:\n            break;\n    }\n    return message;\n}\nexport function valueToHex(value) {\n    const jsonString = JSON.stringify(value);\n    const hex = Array.from(jsonString, char => char.charCodeAt(0).toString(16)).join('');\n    return hex;\n}\nexport function hexToValue(hex, config) {\n    if (typeof hex !== 'string') {\n        logErrorSprintf(config, 'hexToValue', 'Invalid hex string: {0}', hex);\n        return null;\n    }\n    let jsonString = '';\n    for (let i = 0; i < hex.length; i += 2) {\n        const hexChar = hex.slice(i, i + 2);\n        const charCode = parseInt(hexChar, 16);\n        if (isNaN(charCode)) {\n            logErrorSprintf(config, 'hexToValue', 'Invalid hex character: {0}', hexChar);\n            return null;\n        }\n        jsonString += String.fromCharCode(charCode);\n    }\n    try {\n        const value = JSON.parse(jsonString);\n        return value;\n    }\n    catch (error) {\n        logErrorSprintf(config, 'hexToValue', 'Error while parsing JSON: {0}', error);\n        return null;\n    }\n}\n","import { CacheStrategy, DEFAULT_SERVER_TIME_INTERVAL, DEFAULT_BROWSER_TIME_INTERVAL, DEFAULT_BROWSER_POOL_MAX_SIZE, DEFAULT_SERVER_POOL_MAX_SIZE } from '../enum/index';\nimport { isBrowser } from '../utils/utils';\nexport class TrackingManagerConfig {\n    _batchIntervals;\n    _poolMaxSize;\n    _batchStrategy;\n    constructor(param) {\n        this.batchIntervals = param?.batchIntervals;\n        this.poolMaxSize = param?.poolMaxSize;\n        this._batchStrategy = this.getCacheStrategy(param?.cacheStrategy);\n    }\n    getCacheStrategy(cacheStrategy) {\n        if (typeof cacheStrategy === 'number') {\n            return cacheStrategy;\n        }\n        return (isBrowser() ? CacheStrategy.CONTINUOUS_CACHING : CacheStrategy.PERIODIC_CACHING);\n    }\n    get batchIntervals() {\n        return this._batchIntervals;\n    }\n    set batchIntervals(v) {\n        if (typeof v !== 'number' || v < 1 || v > 10800) {\n            v = isBrowser() ? DEFAULT_BROWSER_TIME_INTERVAL : DEFAULT_SERVER_TIME_INTERVAL;\n        }\n        this._batchIntervals = v;\n    }\n    get poolMaxSize() {\n        return this._poolMaxSize;\n    }\n    set poolMaxSize(v) {\n        if (typeof v !== 'number' || v < 5) {\n            v = isBrowser() ? DEFAULT_BROWSER_POOL_MAX_SIZE : DEFAULT_SERVER_POOL_MAX_SIZE;\n        }\n        this._poolMaxSize = v;\n    }\n    get cacheStrategy() {\n        return this._batchStrategy;\n    }\n}\n","import { BASE_API_URL, DEFAULT_DEDUPLICATION_TIME, FS_IS_QA_MODE_ENABLED, FETCH_FLAG_BUFFERING_DEFAULT_TIME, LogLevel, REQUEST_TIME_OUT, SDK_INFO, TYPE_ERROR } from '../enum/index';\nimport { errorFormat, isBrowser, logError, sprintf } from '../utils/utils';\nimport { TrackingManagerConfig } from './TrackingManagerConfig';\nimport { version as SDK_VERSION } from '../sdkVersion';\nimport { DecisionMode } from './DecisionMode';\nexport const statusChangeError = 'statusChangedCallback must be a function';\nexport class FlagshipConfig {\n    _envId;\n    _apiKey;\n    _decisionMode;\n    _timeout;\n    _logLevel;\n    _onSdkStatusChanged;\n    _logManager;\n    _fetchNow;\n    _pollingInterval;\n    _onBucketingFail;\n    _onBucketingSuccess;\n    _onBucketingUpdated;\n    _reuseVisitorIds;\n    _initialBucketing;\n    _decisionApiUrl;\n    _hitDeduplicationTime;\n    _visitorCacheImplementation;\n    _hitCacheImplementation;\n    _disableCache;\n    _trackingManagerConfig;\n    _onVisitorExposed;\n    _fetchThirdPartyData;\n    _nextFetchConfig;\n    _fetchFlagsBufferingTime;\n    _disableDeveloperUsageTracking;\n    _onLog;\n    _isQAModeEnabled;\n    get isQAModeEnabled() {\n        return this._isQAModeEnabled;\n    }\n    set isQAModeEnabled(v) {\n        this._isQAModeEnabled = v;\n    }\n    _enableAnalytics;\n    get disableDeveloperUsageTracking() {\n        return this._disableDeveloperUsageTracking;\n    }\n    set disableDeveloperUsageTracking(v) {\n        this._disableDeveloperUsageTracking = v;\n    }\n    get fetchFlagsBufferingTime() {\n        return this._fetchFlagsBufferingTime;\n    }\n    set fetchFlagsBufferingTime(v) {\n        this._fetchFlagsBufferingTime = v;\n    }\n    get nextFetchConfig() {\n        return this._nextFetchConfig;\n    }\n    set nextFetchConfig(v) {\n        this._nextFetchConfig = v;\n    }\n    get fetchThirdPartyData() {\n        return this._fetchThirdPartyData;\n    }\n    set fetchThirdPartyData(v) {\n        this._fetchThirdPartyData = v;\n    }\n    get trackingManagerConfig() {\n        return this._trackingManagerConfig;\n    }\n    get onLog() {\n        return this._onLog;\n    }\n    set onLog(v) {\n        this._onLog = v;\n    }\n    get onVisitorExposed() {\n        return this._onVisitorExposed;\n    }\n    constructor(param) {\n        const { envId, apiKey, timeout, logLevel, logManager, onSdkStatusChanged, fetchNow, decisionMode, reuseVisitorIds, initialBucketing, decisionApiUrl, hitDeduplicationTime, visitorCacheImplementation, hitCacheImplementation, disableCache, language, sdkVersion, trackingManagerConfig, onLog, onVisitorExposed, nextFetchConfig, fetchFlagsBufferingTime, disableDeveloperUsageTracking } = param;\n        this.initQaMode();\n        this.initSDKInfo(language, sdkVersion);\n        if (logManager) {\n            this.logManager = logManager;\n        }\n        this.fetchFlagsBufferingTime = fetchFlagsBufferingTime ?? FETCH_FLAG_BUFFERING_DEFAULT_TIME;\n        this.nextFetchConfig = nextFetchConfig || { revalidate: 20 };\n        this._trackingManagerConfig = new TrackingManagerConfig(trackingManagerConfig || {});\n        this.onLog = onLog;\n        this.decisionApiUrl = decisionApiUrl || BASE_API_URL;\n        this._envId = envId;\n        this._apiKey = apiKey;\n        this.logLevel = logLevel ?? LogLevel.ALL;\n        this.timeout = timeout || REQUEST_TIME_OUT;\n        this.fetchNow = typeof fetchNow === 'undefined' || fetchNow;\n        this.reuseVisitorIds = typeof reuseVisitorIds === 'undefined' || reuseVisitorIds;\n        this._decisionMode = decisionMode || DecisionMode.DECISION_API;\n        this._initialBucketing = initialBucketing;\n        this.hitDeduplicationTime = hitDeduplicationTime ?? DEFAULT_DEDUPLICATION_TIME;\n        this.disableCache = !!disableCache;\n        this.disableDeveloperUsageTracking = disableDeveloperUsageTracking || false;\n        if (visitorCacheImplementation) {\n            this.visitorCacheImplementation = visitorCacheImplementation;\n        }\n        if (hitCacheImplementation) {\n            this.hitCacheImplementation = hitCacheImplementation;\n        }\n        this.onSdkStatusChanged = onSdkStatusChanged;\n        this._onVisitorExposed = onVisitorExposed;\n    }\n    initQaMode() {\n        if (!isBrowser()) {\n            return;\n        }\n        try {\n            const isQAModeEnabled = sessionStorage.getItem(FS_IS_QA_MODE_ENABLED);\n            this.isQAModeEnabled = isQAModeEnabled ? JSON.parse(isQAModeEnabled) : undefined;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logError(this, errorFormat(error.message || error), 'initQaMode');\n            this.isQAModeEnabled = false;\n        }\n    }\n    initSDKInfo(language, sdkVersion) {\n        switch (language) {\n            case 1:\n                SDK_INFO.name = 'ReactJS';\n                SDK_INFO.version = sdkVersion ?? SDK_VERSION;\n                break;\n            case 2:\n                SDK_INFO.name = 'React-Native';\n                SDK_INFO.version = sdkVersion ?? SDK_VERSION;\n                break;\n            default:\n                SDK_INFO.name = (typeof window !== 'undefined' && 'Deno' in window) ? 'Deno' : 'TypeScript';\n                SDK_INFO.version = SDK_VERSION;\n                break;\n        }\n    }\n    get initialBucketing() {\n        return this._initialBucketing;\n    }\n    set initialBucketing(v) {\n        this._initialBucketing = v;\n    }\n    get reuseVisitorIds() {\n        return this._reuseVisitorIds;\n    }\n    set reuseVisitorIds(v) {\n        this._reuseVisitorIds = v;\n    }\n    get onBucketingSuccess() {\n        return this._onBucketingSuccess;\n    }\n    set onBucketingSuccess(v) {\n        this._onBucketingSuccess = v;\n    }\n    get onBucketingFail() {\n        return this._onBucketingFail;\n    }\n    set onBucketingFail(v) {\n        this._onBucketingFail = v;\n    }\n    get onBucketingUpdated() {\n        return this._onBucketingUpdated;\n    }\n    set onBucketingUpdated(v) {\n        this._onBucketingUpdated = v;\n    }\n    set envId(value) {\n        this._envId = value;\n    }\n    get envId() {\n        return this._envId;\n    }\n    set apiKey(value) {\n        this._apiKey = value;\n    }\n    get apiKey() {\n        return this._apiKey;\n    }\n    get decisionMode() {\n        return this._decisionMode;\n    }\n    get timeout() {\n        return this._timeout;\n    }\n    set timeout(value) {\n        this._timeout = value;\n    }\n    get logLevel() {\n        return this._logLevel;\n    }\n    set logLevel(value) {\n        this._logLevel = value;\n    }\n    get fetchNow() {\n        return this._fetchNow;\n    }\n    set fetchNow(v) {\n        this._fetchNow = v;\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(v) {\n        this._pollingInterval = v;\n    }\n    get hitDeduplicationTime() {\n        return this._hitDeduplicationTime;\n    }\n    set hitDeduplicationTime(v) {\n        if (typeof v !== 'number') {\n            logError(this, sprintf(TYPE_ERROR, 'hitDeduplicationTime', 'number'), 'hitDeduplicationTime');\n            return;\n        }\n        this._hitDeduplicationTime = v;\n    }\n    get visitorCacheImplementation() {\n        return this._visitorCacheImplementation;\n    }\n    set visitorCacheImplementation(v) {\n        this._visitorCacheImplementation = v;\n    }\n    get hitCacheImplementation() {\n        return this._hitCacheImplementation;\n    }\n    set hitCacheImplementation(v) {\n        this._hitCacheImplementation = v;\n    }\n    get disableCache() {\n        return this._disableCache;\n    }\n    set disableCache(v) {\n        this._disableCache = v;\n    }\n    get onSdkStatusChanged() {\n        return this._onSdkStatusChanged;\n    }\n    set onSdkStatusChanged(fn) {\n        if (fn && typeof fn !== 'function') {\n            logError(this, statusChangeError, 'onSdkStatusChanged');\n            return;\n        }\n        this._onSdkStatusChanged = fn;\n    }\n    get logManager() {\n        return this._logManager;\n    }\n    set logManager(value) {\n        this._logManager = value;\n    }\n    get decisionApiUrl() {\n        return this._decisionApiUrl;\n    }\n    set decisionApiUrl(v) {\n        if (typeof v !== 'string') {\n            logError(this, sprintf(TYPE_ERROR, 'decisionApiUrl', 'string'), 'decisionApiUrl');\n            return;\n        }\n        this._decisionApiUrl = v;\n    }\n}\n","import { DEFAULT_POLLING_INTERVAL } from '../enum/index';\nimport { DecisionMode } from './DecisionMode';\nimport { FlagshipConfig } from './FlagshipConfig';\nexport class BucketingConfig extends FlagshipConfig {\n    constructor(param) {\n        super({ ...param, decisionMode: DecisionMode.BUCKETING });\n        this.pollingInterval = param?.pollingInterval ?? DEFAULT_POLLING_INTERVAL;\n        this.onBucketingFail = param?.onBucketingFail;\n        this.onBucketingSuccess = param?.onBucketingSuccess;\n        this.onBucketingUpdated = param?.onBucketingUpdated;\n        this.fetchThirdPartyData = param?.fetchThirdPartyData;\n    }\n}\n","import { DecisionMode } from './DecisionMode';\nimport { FlagshipConfig } from './FlagshipConfig';\nexport class DecisionApiConfig extends FlagshipConfig {\n    constructor(param) {\n        super({ ...param, decisionMode: DecisionMode.DECISION_API });\n    }\n}\n","export class ConfigManager {\n    _config;\n    _decisionManager;\n    _trackingManager;\n    constructor(config, decisionManager, trackingManager) {\n        this._config = config;\n        this._decisionManager = decisionManager;\n        this._trackingManager = trackingManager;\n    }\n    get config() {\n        return this._config;\n    }\n    set config(value) {\n        this._config = value;\n    }\n    get decisionManager() {\n        return this._decisionManager;\n    }\n    set decisionManager(value) {\n        this._decisionManager = value;\n    }\n    get trackingManager() {\n        return this._trackingManager;\n    }\n    set trackingManager(value) {\n        this._trackingManager = value;\n    }\n}\n","import { CUSTOMER_ENV_ID_API_ITEM, DS_API_ITEM, T_API_ITEM, TYPE_ERROR, VISITOR_ID_API_ITEM, CUSTOMER_UID, USER_IP_API_ITEM, SCREEN_RESOLUTION_API_ITEM, SESSION_NUMBER, USER_LANGUAGE, QT_API_ITEM, SDK_APP, QA_MODE_API_ITEM } from '../enum/FlagshipConstant';\nimport { logError, sprintf } from '../utils/utils';\nexport class HitAbstract {\n    _visitorId;\n    _config;\n    _type;\n    _ds;\n    _anonymousId;\n    _userIp;\n    _screenResolution;\n    _locale;\n    _sessionNumber;\n    _key;\n    _createdAt;\n    _qaMode;\n    get key() {\n        return this._key;\n    }\n    set key(v) {\n        this._key = v;\n    }\n    get sessionNumber() {\n        return this._sessionNumber;\n    }\n    set sessionNumber(v) {\n        this._sessionNumber = v;\n    }\n    get locale() {\n        return this._locale;\n    }\n    set locale(v) {\n        this._locale = v;\n    }\n    get screenResolution() {\n        return this._screenResolution;\n    }\n    set screenResolution(v) {\n        this._screenResolution = v;\n    }\n    get userIp() {\n        return this._userIp;\n    }\n    set userIp(v) {\n        this._userIp = v;\n    }\n    get anonymousId() {\n        return this._anonymousId;\n    }\n    set anonymousId(v) {\n        this._anonymousId = v;\n    }\n    get visitorId() {\n        return this._visitorId;\n    }\n    set visitorId(v) {\n        this._visitorId = v;\n    }\n    get ds() {\n        return this._ds;\n    }\n    set ds(v) {\n        this._ds = v;\n    }\n    get type() {\n        return this._type;\n    }\n    get config() {\n        return this._config;\n    }\n    set config(v) {\n        this._config = v;\n    }\n    get createdAt() {\n        return this._createdAt;\n    }\n    set createdAt(v) {\n        this._createdAt = v;\n    }\n    get qaMode() {\n        return this._qaMode;\n    }\n    set qaMode(v) {\n        this._qaMode = v;\n    }\n    constructor(hit) {\n        const { type, userIp, screenResolution, locale, sessionNumber, visitorId, anonymousId, ds, qaMode } = hit;\n        this._type = type;\n        if (userIp) {\n            this.userIp = userIp;\n        }\n        if (screenResolution) {\n            this.screenResolution = screenResolution;\n        }\n        if (locale) {\n            this.locale = locale;\n        }\n        if (sessionNumber) {\n            this.sessionNumber = sessionNumber;\n        }\n        this.visitorId = visitorId;\n        this._anonymousId = anonymousId || null;\n        this.createdAt = Date.now();\n        this.ds = ds || SDK_APP;\n        this.qaMode = qaMode;\n    }\n    /**\n     * Return true if value is a string and not empty, otherwise return false\n     * @param value\n     * @param itemName\n     * @returns\n     */\n    isNotEmptyString(value, itemName) {\n        if (!value || typeof value !== 'string') {\n            logError(this.config, sprintf(TYPE_ERROR, itemName, 'string'), itemName);\n            return false;\n        }\n        return true;\n    }\n    isNumeric(value, itemName) {\n        if (!value || typeof value !== 'number') {\n            logError(this.config, sprintf(TYPE_ERROR, itemName, 'number'), itemName);\n            return false;\n        }\n        return true;\n    }\n    isInteger(value, itemName) {\n        if (!Number.isInteger(value)) {\n            logError(this.config, sprintf(TYPE_ERROR, itemName, 'integer'), itemName);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Return an object with Api parameters as keys\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toApiKeys() {\n        const apiKeys = {\n            [VISITOR_ID_API_ITEM]: this.visitorId,\n            [DS_API_ITEM]: this.ds,\n            [CUSTOMER_ENV_ID_API_ITEM]: `${this.config?.envId}`,\n            [T_API_ITEM]: this.type,\n            [CUSTOMER_UID]: null,\n            [QT_API_ITEM]: Date.now() - this._createdAt\n        };\n        if (this.qaMode) {\n            apiKeys[QA_MODE_API_ITEM] = true;\n        }\n        if (this.userIp) {\n            apiKeys[USER_IP_API_ITEM] = this.userIp;\n        }\n        if (this.screenResolution) {\n            apiKeys[SCREEN_RESOLUTION_API_ITEM] = this.screenResolution;\n        }\n        if (this.locale) {\n            apiKeys[USER_LANGUAGE] = this.locale;\n        }\n        if (this.sessionNumber) {\n            apiKeys[SESSION_NUMBER] = this.sessionNumber;\n        }\n        if (this.visitorId && this.anonymousId) {\n            apiKeys[VISITOR_ID_API_ITEM] = this.anonymousId;\n            apiKeys[CUSTOMER_UID] = this.visitorId;\n        }\n        return apiKeys;\n    }\n    toObject() {\n        return {\n            key: this.key,\n            visitorId: this.visitorId,\n            ds: this.ds,\n            type: this.type,\n            userIp: this.userIp,\n            screenResolution: this.screenResolution,\n            locale: this.locale,\n            sessionNumber: this.sessionNumber,\n            anonymousId: this.anonymousId,\n            createdAt: this.createdAt,\n            qaMode: this.qaMode\n        };\n    }\n    /**\n     * Return true if all required attributes are given, otherwise return false\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isReady(_checkParent = true) {\n        return !!(this.visitorId &&\n            this.ds &&\n            this.config &&\n            this.config.envId &&\n            this.type);\n    }\n}\n","import { CacheStrategy, FSSdkStatus, LogLevel } from '../enum/index';\nimport { CUSTOMER_ENV_ID_API_ITEM, DS_API_ITEM, SDK_APP, SDK_INFO, T_API_ITEM, VISITOR_ID_API_ITEM } from '../enum/FlagshipConstant';\nimport { HitAbstract } from './HitAbstract';\nimport { BatchTriggeredBy } from '../enum/BatchTriggeredBy';\nexport const ERROR_MESSAGE = 'event category and event action are required';\n/**\n * Represents a diagnostic hit.\n */\nexport class Diagnostic extends HitAbstract {\n    _logVersion;\n    _logLevel;\n    _accountId;\n    _envId;\n    _timestamp;\n    _label;\n    _stackType;\n    _stackName;\n    _stackVersion;\n    _stackOriginName;\n    _stackOriginVersion;\n    _sdkStatus;\n    _sdkConfigMode;\n    _sdkConfigCustomLogManager;\n    _sdkConfigCustomCacheManager;\n    _sdkConfigStatusListener;\n    _sdkConfigTimeout;\n    _sdkConfigPollingTime;\n    _sdkConfigTrackingManagerConfigStrategy;\n    _sdkConfigTrackingManagerConfigBatchIntervals;\n    _sdkConfigTrackingManagerConfigBatchLength;\n    _httpRequestUrl;\n    _httpRequestMethod;\n    _httpRequestHeaders;\n    _httpRequestBody;\n    _httpResponseUrl;\n    _httpResponseMethod;\n    _httpResponseHeaders;\n    _httpResponseBody;\n    _visitorStatus;\n    _visitorInstanceType;\n    _visitorContext;\n    _visitorConsent;\n    _visitorAssignmentHistory;\n    _visitorFlags;\n    _visitorIsAuthenticated;\n    _flagKey;\n    _flagValue;\n    _flagDefault;\n    _flagMetadataCampaignId;\n    _flagMetadataVariationGroupId;\n    _flagMetadataVariationId;\n    _flagMetadataCampaignSlug;\n    _flagMetadataCampaignType;\n    _sdkConfigFetchNow;\n    _sdkConfigReuseVisitorIds;\n    _sdkConfigInitialBucketing;\n    _sdkConfigDecisionApiUrl;\n    _sdkConfigHitDeduplicationTime;\n    _visitorInitialCampaigns;\n    _visitorInitialFlagsData;\n    _visitorCampaign;\n    _httRequestTime;\n    _hitContent;\n    _httpInstanceId;\n    _lastInitializationTimestamp;\n    _lastBucketingTimestamp;\n    _batchTriggeredBy;\n    _visitorCampaignFromCache;\n    _timeZone;\n    _flagMetadataCampaignIsReference;\n    _contextKey;\n    _contextValue;\n    _sdkBucketingFile;\n    _flagMetadataCampaignName;\n    _flagMetadataVariationGroupName;\n    _flagMetadataVariationName;\n    _sdkConfigUsingCustomHitCache;\n    _sdkConfigUsingCustomVisitorCache;\n    _sdkConfigUsingOnVisitorExposed;\n    _sdkConfigFetchThirdPartyData;\n    _sdkConfigFetchFlagsBufferingTime;\n    _sdkConfigNextFetchConfig;\n    _sdkConfigDisableDeveloperUsageTracking;\n    _sdkConfigDisableCache;\n    _sdkConfigLogLevel;\n    get sdkConfigLogLevel() {\n        return this._sdkConfigLogLevel;\n    }\n    set sdkConfigLogLevel(v) {\n        this._sdkConfigLogLevel = v;\n    }\n    _visitorSessionId;\n    _traffic;\n    _flagshipInstanceId;\n    get traffic() {\n        return this._traffic;\n    }\n    set traffic(v) {\n        this._traffic = v;\n    }\n    get flagshipInstanceId() {\n        return this._flagshipInstanceId;\n    }\n    set flagshipInstanceId(v) {\n        this._flagshipInstanceId = v;\n    }\n    get visitorSessionId() {\n        return this._visitorSessionId;\n    }\n    set visitorSessionId(v) {\n        this._visitorSessionId = v;\n    }\n    get sdkConfigDisableCache() {\n        return this._sdkConfigDisableCache;\n    }\n    set sdkConfigDisableCache(v) {\n        this._sdkConfigDisableCache = v;\n    }\n    get sdkConfigDisableDeveloperUsageTracking() {\n        return this._sdkConfigDisableDeveloperUsageTracking;\n    }\n    set sdkConfigDisableDeveloperUsageTracking(v) {\n        this._sdkConfigDisableDeveloperUsageTracking = v;\n    }\n    get sdkConfigNextFetchConfig() {\n        return this._sdkConfigNextFetchConfig;\n    }\n    set sdkConfigNextFetchConfig(v) {\n        this._sdkConfigNextFetchConfig = v;\n    }\n    get sdkConfigFetchFlagsBufferingTime() {\n        return this._sdkConfigFetchFlagsBufferingTime;\n    }\n    set sdkConfigFetchFlagsBufferingTime(v) {\n        this._sdkConfigFetchFlagsBufferingTime = v;\n    }\n    get sdkConfigFetchThirdPartyData() {\n        return this._sdkConfigFetchThirdPartyData;\n    }\n    set sdkConfigFetchThirdPartyData(v) {\n        this._sdkConfigFetchThirdPartyData = v;\n    }\n    get sdkConfigUsingOnVisitorExposed() {\n        return this._sdkConfigUsingOnVisitorExposed;\n    }\n    set sdkConfigUsingOnVisitorExposed(v) {\n        this._sdkConfigUsingOnVisitorExposed = v;\n    }\n    get sdkConfigUsingCustomVisitorCache() {\n        return this._sdkConfigUsingCustomVisitorCache;\n    }\n    set sdkConfigUsingCustomVisitorCache(v) {\n        this._sdkConfigUsingCustomVisitorCache = v;\n    }\n    get sdkConfigUsingCustomHitCache() {\n        return this._sdkConfigUsingCustomHitCache;\n    }\n    set sdkConfigUsingCustomHitCache(v) {\n        this._sdkConfigUsingCustomHitCache = v;\n    }\n    get flagMetadataVariationName() {\n        return this._flagMetadataVariationName;\n    }\n    set flagMetadataVariationName(v) {\n        this._flagMetadataVariationName = v;\n    }\n    get flagMetadataVariationGroupName() {\n        return this._flagMetadataVariationGroupName;\n    }\n    set flagMetadataVariationGroupName(v) {\n        this._flagMetadataVariationGroupName = v;\n    }\n    get flagMetadataCampaignName() {\n        return this._flagMetadataCampaignName;\n    }\n    set flagMetadataCampaignName(v) {\n        this._flagMetadataCampaignName = v;\n    }\n    get sdkBucketingFile() {\n        return this._sdkBucketingFile;\n    }\n    set sdkBucketingFile(v) {\n        this._sdkBucketingFile = v;\n    }\n    get contextValue() {\n        return this._contextValue;\n    }\n    set contextValue(v) {\n        this._contextValue = v;\n    }\n    get contextKey() {\n        return this._contextKey;\n    }\n    set contextKey(v) {\n        this._contextKey = v;\n    }\n    get flagMetadataCampaignIsReference() {\n        return this._flagMetadataCampaignIsReference;\n    }\n    set flagMetadataCampaignIsReference(v) {\n        this._flagMetadataCampaignIsReference = v;\n    }\n    get timeZone() {\n        return this._timeZone;\n    }\n    set timeZone(v) {\n        this._timeZone = v;\n    }\n    get visitorCampaignFromCache() {\n        return this._visitorCampaignFromCache;\n    }\n    set visitorCampaignFromCache(v) {\n        this._visitorCampaignFromCache = v;\n    }\n    get batchTriggeredBy() {\n        return this._batchTriggeredBy;\n    }\n    set batchTriggeredBy(v) {\n        this._batchTriggeredBy = v;\n    }\n    get lastBucketingTimestamp() {\n        return this._lastBucketingTimestamp;\n    }\n    set lastBucketingTimestamp(v) {\n        this._lastBucketingTimestamp = v;\n    }\n    get lastInitializationTimestamp() {\n        return this._lastInitializationTimestamp;\n    }\n    set lastInitializationTimestamp(v) {\n        this._lastInitializationTimestamp = v;\n    }\n    get hitContent() {\n        return this._hitContent;\n    }\n    set hitContent(v) {\n        this._hitContent = v;\n    }\n    get httpResponseTime() {\n        return this._httRequestTime;\n    }\n    set httpResponseTime(v) {\n        this._httRequestTime = v;\n    }\n    get visitorCampaigns() {\n        return this._visitorCampaign;\n    }\n    set visitorCampaigns(v) {\n        this._visitorCampaign = v;\n    }\n    get visitorInitialFlagsData() {\n        return this._visitorInitialFlagsData;\n    }\n    set visitorInitialFlagsData(v) {\n        this._visitorInitialFlagsData = v;\n    }\n    get visitorInitialCampaigns() {\n        return this._visitorInitialCampaigns;\n    }\n    set visitorInitialCampaigns(v) {\n        this._visitorInitialCampaigns = v;\n    }\n    get sdkConfigHitDeduplicationTime() {\n        return this._sdkConfigHitDeduplicationTime;\n    }\n    set sdkConfigHitDeduplicationTime(v) {\n        this._sdkConfigHitDeduplicationTime = v;\n    }\n    get sdkConfigDecisionApiUrl() {\n        return this._sdkConfigDecisionApiUrl;\n    }\n    set sdkConfigDecisionApiUrl(v) {\n        this._sdkConfigDecisionApiUrl = v;\n    }\n    get sdkConfigInitialBucketing() {\n        return this._sdkConfigInitialBucketing;\n    }\n    set sdkConfigInitialBucketing(v) {\n        this._sdkConfigInitialBucketing = v;\n    }\n    get sdkConfigReuseVisitorIds() {\n        return this._sdkConfigReuseVisitorIds;\n    }\n    set sdkConfigReuseVisitorIds(v) {\n        this._sdkConfigReuseVisitorIds = v;\n    }\n    get sdkConfigFetchNow() {\n        return this._sdkConfigFetchNow;\n    }\n    set sdkConfigFetchNow(v) {\n        this._sdkConfigFetchNow = v;\n    }\n    get flagMetadataCampaignType() {\n        return this._flagMetadataCampaignType;\n    }\n    set flagMetadataCampaignType(v) {\n        this._flagMetadataCampaignType = v;\n    }\n    get flagMetadataCampaignSlug() {\n        return this._flagMetadataCampaignSlug;\n    }\n    set flagMetadataCampaignSlug(v) {\n        this._flagMetadataCampaignSlug = v;\n    }\n    get flagMetadataVariationId() {\n        return this._flagMetadataVariationId;\n    }\n    set flagMetadataVariationId(v) {\n        this._flagMetadataVariationId = v;\n    }\n    get flagMetadataVariationGroupId() {\n        return this._flagMetadataVariationGroupId;\n    }\n    set flagMetadataVariationGroupId(v) {\n        this._flagMetadataVariationGroupId = v;\n    }\n    get flagMetadataCampaignId() {\n        return this._flagMetadataCampaignId;\n    }\n    set flagMetadataCampaignId(v) {\n        this._flagMetadataCampaignId = v;\n    }\n    get flagDefault() {\n        return this._flagDefault;\n    }\n    set flagDefault(v) {\n        this._flagDefault = v;\n    }\n    get flagValue() {\n        return this._flagValue;\n    }\n    set flagValue(v) {\n        this._flagValue = v;\n    }\n    get flagKey() {\n        return this._flagKey;\n    }\n    set flagKey(v) {\n        this._flagKey = v;\n    }\n    get visitorIsAuthenticated() {\n        return this._visitorIsAuthenticated;\n    }\n    set visitorIsAuthenticated(v) {\n        this._visitorIsAuthenticated = v;\n    }\n    get visitorFlags() {\n        return this._visitorFlags;\n    }\n    set visitorFlags(v) {\n        this._visitorFlags = v;\n    }\n    get visitorAssignmentHistory() {\n        return this._visitorAssignmentHistory;\n    }\n    set visitorAssignmentHistory(v) {\n        this._visitorAssignmentHistory = v;\n    }\n    get visitorConsent() {\n        return this._visitorConsent;\n    }\n    set visitorConsent(v) {\n        this._visitorConsent = v;\n    }\n    get visitorContext() {\n        return this._visitorContext;\n    }\n    set visitorContext(v) {\n        this._visitorContext = v;\n    }\n    get visitorInstanceType() {\n        return this._visitorInstanceType;\n    }\n    set visitorInstanceType(v) {\n        this._visitorInstanceType = v;\n    }\n    get visitorStatus() {\n        return this._visitorStatus;\n    }\n    set visitorStatus(v) {\n        this._visitorStatus = v;\n    }\n    get httpResponseBody() {\n        return this._httpResponseBody;\n    }\n    set httpResponseBody(v) {\n        this._httpResponseBody = v;\n    }\n    _httpResponseCode;\n    get httpResponseCode() {\n        return this._httpResponseCode;\n    }\n    set httpResponseCode(v) {\n        this._httpResponseCode = v;\n    }\n    get httpResponseHeaders() {\n        return this._httpResponseHeaders;\n    }\n    set httpResponseHeaders(v) {\n        this._httpResponseHeaders = v;\n    }\n    get httpResponseMethod() {\n        return this._httpResponseMethod;\n    }\n    set httpResponseMethod(v) {\n        this._httpResponseMethod = v;\n    }\n    get httpResponseUrl() {\n        return this._httpResponseUrl;\n    }\n    set httpResponseUrl(v) {\n        this._httpResponseUrl = v;\n    }\n    get httpRequestBody() {\n        return this._httpRequestBody;\n    }\n    set httpRequestBody(v) {\n        this._httpRequestBody = v;\n    }\n    get httpRequestHeaders() {\n        return this._httpRequestHeaders;\n    }\n    set httpRequestHeaders(v) {\n        this._httpRequestHeaders = v;\n    }\n    get httpRequestMethod() {\n        return this._httpRequestMethod;\n    }\n    set httpRequestMethod(v) {\n        this._httpRequestMethod = v;\n    }\n    get httpRequestUrl() {\n        return this._httpRequestUrl;\n    }\n    set httpRequestUrl(v) {\n        this._httpRequestUrl = v;\n    }\n    get sdkConfigTrackingManagerPoolMaxSize() {\n        return this._sdkConfigTrackingManagerConfigBatchLength;\n    }\n    set sdkConfigTrackingManagerPoolMaxSize(v) {\n        this._sdkConfigTrackingManagerConfigBatchLength = v;\n    }\n    get sdkConfigTrackingManagerBatchIntervals() {\n        return this._sdkConfigTrackingManagerConfigBatchIntervals;\n    }\n    set sdkConfigTrackingManagerBatchIntervals(v) {\n        this._sdkConfigTrackingManagerConfigBatchIntervals = v;\n    }\n    get sdkConfigTrackingManagerStrategy() {\n        return this._sdkConfigTrackingManagerConfigStrategy;\n    }\n    set sdkConfigTrackingManagerStrategy(v) {\n        this._sdkConfigTrackingManagerConfigStrategy = v;\n    }\n    get sdkConfigPollingInterval() {\n        return this._sdkConfigPollingTime;\n    }\n    set sdkConfigPollingInterval(v) {\n        this._sdkConfigPollingTime = v;\n    }\n    get sdkConfigTimeout() {\n        return this._sdkConfigTimeout;\n    }\n    set sdkConfigTimeout(v) {\n        this._sdkConfigTimeout = v;\n    }\n    get sdkConfigStatusListener() {\n        return this._sdkConfigStatusListener;\n    }\n    set sdkConfigStatusListener(v) {\n        this._sdkConfigStatusListener = v;\n    }\n    get sdkConfigCustomCacheManager() {\n        return this._sdkConfigCustomCacheManager;\n    }\n    set sdkConfigCustomCacheManager(v) {\n        this._sdkConfigCustomCacheManager = v;\n    }\n    get sdkConfigCustomLogManager() {\n        return this._sdkConfigCustomLogManager;\n    }\n    set sdkConfigCustomLogManager(v) {\n        this._sdkConfigCustomLogManager = v;\n    }\n    get sdkConfigMode() {\n        return this._sdkConfigMode;\n    }\n    set sdkConfigMode(v) {\n        this._sdkConfigMode = v;\n    }\n    get sdkStatus() {\n        return this._sdkStatus;\n    }\n    set sdkStatus(v) {\n        this._sdkStatus = v;\n    }\n    get stackOriginVersion() {\n        return this._stackOriginVersion;\n    }\n    set stackOriginVersion(v) {\n        this._stackOriginVersion = v;\n    }\n    get stackOriginName() {\n        return this._stackOriginName;\n    }\n    set stackOriginName(v) {\n        this._stackOriginName = v;\n    }\n    get stackVersion() {\n        return this._stackVersion;\n    }\n    set stackVersion(v) {\n        this._stackVersion = v;\n    }\n    get stackName() {\n        return this._stackName;\n    }\n    set stackName(v) {\n        this._stackName = v;\n    }\n    get stackType() {\n        return this._stackType;\n    }\n    set stackType(v) {\n        this._stackType = v;\n    }\n    get label() {\n        return this._label;\n    }\n    set label(v) {\n        this._label = v;\n    }\n    get timestamp() {\n        return this._timestamp;\n    }\n    set timestamp(v) {\n        this._timestamp = v;\n    }\n    get envId() {\n        return this._envId;\n    }\n    set envId(v) {\n        this._envId = v;\n    }\n    get accountId() {\n        return this._accountId;\n    }\n    set accountId(v) {\n        this._accountId = v;\n    }\n    get logLevel() {\n        return this._logLevel;\n    }\n    set logLevel(v) {\n        this._logLevel = v;\n    }\n    get version() {\n        return this._logVersion;\n    }\n    set version(v) {\n        this._logVersion = v;\n    }\n    constructor(param) {\n        super({\n            type: param.type,\n            userIp: param.userIp,\n            screenResolution: param.screenResolution,\n            locale: param.locale,\n            sessionNumber: param.sessionNumber,\n            visitorId: param.visitorId,\n            anonymousId: param.anonymousId\n        });\n        const { version: logVersion, logLevel, accountId, envId, timestamp, label, stackType, stackName, stackVersion, stackOriginName, stackOriginVersion, sdkStatus, sdkConfigMode, sdkConfigCustomLogManager, sdkConfigCustomCacheManager, sdkConfigStatusListener, sdkConfigTimeout, sdkConfigPollingInterval, sdkConfigTrackingManagerStrategy: sdkConfigTrackingManagerConfigStrategy, sdkConfigTrackingManagerBatchIntervals: sdkConfigTrackingManagerConfigBatchIntervals, sdkConfigTrackingManagerPoolMaxSize: sdkConfigTrackingManagerConfigPoolMaxSize, httpRequestUrl, httpRequestMethod, httpRequestHeaders, httpRequestBody, httpResponseTime, httpResponseUrl, httpResponseMethod, httpResponseHeaders, httpResponseCode, httpResponseBody, visitorStatus, visitorInstanceType, visitorContext, visitorConsent, visitorAssignmentHistory, visitorFlags, visitorIsAuthenticated, config, flagKey, flagValue, flagDefault, flagMetadataCampaignId, flagMetadataVariationGroupId, flagMetadataVariationId, flagMetadataCampaignSlug, flagMetadataCampaignType, sdkConfigFetchNow, sdkConfigReuseVisitorIds, sdkConfigInitialBucketing, sdkConfigDecisionApiUrl, sdkConfigHitDeduplicationTime, flagshipInstanceId, hitContent, traffic, lastInitializationTimestamp, lastBucketingTimestamp, batchTriggeredBy, visitorCampaigns, visitorCampaignFromCache, visitorInitialCampaigns, visitorInitialFlagsData, flagMetadataCampaignIsReference, contextKey, contextValue, sdkBucketingFile, flagMetadataCampaignName, flagMetadataVariationGroupName, flagMetadataVariationName, sdkConfigUsingCustomHitCache, sdkConfigUsingCustomVisitorCache, sdkConfigUsingOnVisitorExposed, sdkConfigFetchThirdPartyData, sdkConfigFetchFlagsBufferingTime, sdkConfigDisableDeveloperUsageTracking, sdkConfigNextFetchConfig, sdkConfigDisableCache, visitorSessionId, sdkConfigLogLevel } = param;\n        this.visitorSessionId = visitorSessionId;\n        this.sdkConfigDisableCache = sdkConfigDisableCache;\n        this.sdkConfigDisableDeveloperUsageTracking = sdkConfigDisableDeveloperUsageTracking;\n        this.sdkConfigNextFetchConfig = sdkConfigNextFetchConfig;\n        this.sdkConfigFetchFlagsBufferingTime = sdkConfigFetchFlagsBufferingTime;\n        this.sdkConfigFetchThirdPartyData = sdkConfigFetchThirdPartyData;\n        this.sdkConfigUsingCustomHitCache = sdkConfigUsingCustomHitCache;\n        this.sdkConfigUsingCustomVisitorCache = sdkConfigUsingCustomVisitorCache;\n        this.sdkConfigUsingOnVisitorExposed = sdkConfigUsingOnVisitorExposed;\n        this.flagMetadataCampaignName = flagMetadataCampaignName;\n        this.flagMetadataVariationGroupName = flagMetadataVariationGroupName;\n        this.flagMetadataVariationName = flagMetadataVariationName;\n        this.traffic = traffic;\n        this.sdkBucketingFile = sdkBucketingFile;\n        this.contextKey = contextKey;\n        this.contextValue = contextValue;\n        this.lastBucketingTimestamp = lastBucketingTimestamp;\n        this.lastInitializationTimestamp = lastInitializationTimestamp;\n        this.batchTriggeredBy = batchTriggeredBy;\n        this.visitorCampaigns = visitorCampaigns;\n        this.visitorAssignmentHistory = visitorAssignmentHistory;\n        this.visitorInitialCampaigns = visitorInitialCampaigns;\n        this.visitorInitialFlagsData = visitorInitialFlagsData;\n        this.visitorCampaignFromCache = visitorCampaignFromCache;\n        this.flagMetadataCampaignIsReference = flagMetadataCampaignIsReference;\n        this.config = config;\n        this.version = logVersion || '1';\n        this.logLevel = logLevel;\n        this.flagshipInstanceId = flagshipInstanceId;\n        this.accountId = accountId;\n        this.envId = envId || config.envId;\n        this.timestamp = timestamp || new Date(Date.now()).toISOString();\n        this.timeZone = this.getTimezone();\n        this.label = label;\n        this.stackType = stackType || 'SDK';\n        this.stackName = stackName || SDK_INFO.name;\n        this.stackVersion = stackVersion || SDK_INFO.version;\n        this.stackOriginName = stackOriginName;\n        this.stackOriginVersion = stackOriginVersion;\n        this.sdkStatus = sdkStatus;\n        this.sdkConfigMode = sdkConfigMode;\n        this.sdkConfigCustomLogManager = sdkConfigCustomLogManager;\n        this.sdkConfigCustomCacheManager = sdkConfigCustomCacheManager;\n        this.sdkConfigStatusListener = sdkConfigStatusListener;\n        this.sdkConfigTimeout = sdkConfigTimeout;\n        this.sdkConfigPollingInterval = sdkConfigPollingInterval;\n        this.sdkConfigTrackingManagerStrategy = sdkConfigTrackingManagerConfigStrategy;\n        this.sdkConfigTrackingManagerBatchIntervals = sdkConfigTrackingManagerConfigBatchIntervals;\n        this.sdkConfigTrackingManagerPoolMaxSize = sdkConfigTrackingManagerConfigPoolMaxSize;\n        this.sdkConfigFetchNow = sdkConfigFetchNow;\n        this.sdkConfigReuseVisitorIds = sdkConfigReuseVisitorIds;\n        this.sdkConfigInitialBucketing = sdkConfigInitialBucketing;\n        this.sdkConfigDecisionApiUrl = sdkConfigDecisionApiUrl;\n        this.sdkConfigHitDeduplicationTime = sdkConfigHitDeduplicationTime;\n        this.httpRequestUrl = httpRequestUrl;\n        this.httpRequestMethod = httpRequestMethod;\n        this.httpRequestHeaders = httpRequestHeaders;\n        this.httpRequestBody = httpRequestBody;\n        this.httpResponseUrl = httpResponseUrl;\n        this.httpResponseMethod = httpResponseMethod;\n        this.httpResponseHeaders = httpResponseHeaders;\n        this.httpResponseCode = httpResponseCode;\n        this.httpResponseBody = httpResponseBody;\n        this.httpResponseTime = httpResponseTime;\n        this.visitorStatus = visitorStatus;\n        this.visitorInstanceType = visitorInstanceType;\n        this.visitorContext = visitorContext;\n        this.visitorConsent = visitorConsent;\n        this.visitorAssignmentHistory = visitorAssignmentHistory;\n        this.visitorFlags = visitorFlags;\n        this.visitorIsAuthenticated = visitorIsAuthenticated;\n        this.flagKey = flagKey;\n        this.flagValue = flagValue;\n        this.flagDefault = flagDefault;\n        this.flagMetadataCampaignId = flagMetadataCampaignId;\n        this.flagMetadataVariationGroupId = flagMetadataVariationGroupId;\n        this.flagMetadataVariationId = flagMetadataVariationId;\n        this.flagMetadataCampaignSlug = flagMetadataCampaignSlug;\n        this.flagMetadataCampaignType = flagMetadataCampaignType;\n        this.hitContent = hitContent;\n        this.ds = SDK_APP;\n        this.sdkConfigLogLevel = sdkConfigLogLevel;\n    }\n    /**\n     * Gets the timezone of the user.\n     * @returns The timezone as a string. If the timezone cannot be determined, it returns the offset from UTC in hours.\n     */\n    getTimezone() {\n        const timezone = typeof Intl === 'object' ? Intl.DateTimeFormat()?.resolvedOptions()?.timeZone : undefined;\n        return timezone || `${new Date().getTimezoneOffset() / 60}`;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, complexity\n    toApiKeys() {\n        const apiKeys = {\n            [VISITOR_ID_API_ITEM]: this.visitorId,\n            [DS_API_ITEM]: this.ds,\n            [CUSTOMER_ENV_ID_API_ITEM]: `${this.config?.envId}`,\n            [T_API_ITEM]: this.type,\n            cv: {}\n        };\n        const customVariable = {\n            version: `${this.version}`,\n            logLevel: `${LogLevel[this.logLevel]}`,\n            timestamp: `${this.timestamp}`,\n            timeZone: `${this.timeZone}`,\n            label: `${this.label}`,\n            'stack.type': `${this.stackType}`,\n            'stack.name': `${this.stackName}`,\n            'stack.version': `${this.stackVersion}`\n        };\n        if (this.lastBucketingTimestamp !== undefined) {\n            customVariable.lastBucketingTimestamp = `${this.lastBucketingTimestamp}`;\n        }\n        if (this.lastInitializationTimestamp !== undefined) {\n            customVariable.lastInitializationTimestamp = `${this.lastInitializationTimestamp}`;\n        }\n        if (this.flagshipInstanceId !== undefined) {\n            customVariable.flagshipInstanceId = `${this.flagshipInstanceId}`;\n        }\n        if (this.accountId) {\n            customVariable.accountId = `${this.accountId}`;\n        }\n        if (this.envId) {\n            customVariable.envId = `${this.envId}`;\n        }\n        if (this.sdkBucketingFile !== undefined) {\n            customVariable.sdkBucketingFile = JSON.stringify(this.sdkBucketingFile);\n        }\n        if (this.stackOriginName !== undefined) {\n            customVariable['stack.origin.name'] = `${this.stackOriginName}`;\n        }\n        if (this.stackOriginVersion !== undefined) {\n            customVariable['stack.origin.version'] = `${this.stackOriginVersion}`;\n        }\n        if (this.sdkStatus !== undefined) {\n            customVariable['sdk.status'] = `${FSSdkStatus[this.sdkStatus]}`;\n        }\n        if (this.sdkConfigLogLevel !== undefined) {\n            customVariable['sdk.config.logLevel'] = `${LogLevel[this.sdkConfigLogLevel]}`;\n        }\n        if (this.sdkConfigMode !== undefined) {\n            customVariable['sdk.config.mode'] = `${this.sdkConfigMode}`;\n        }\n        if (this.sdkConfigCustomLogManager !== undefined) {\n            customVariable['sdk.config.customLogManager'] = `${this.sdkConfigCustomLogManager}`;\n        }\n        if (this.sdkConfigCustomCacheManager !== undefined) {\n            customVariable['sdk.config.customCacheManager'] = `${this.sdkConfigCustomCacheManager}`;\n        }\n        if (this.sdkConfigStatusListener !== undefined) {\n            customVariable['sdk.config.custom.StatusListener'] = `${this.sdkConfigStatusListener}`;\n        }\n        if (this.sdkConfigTimeout !== undefined) {\n            customVariable['sdk.config.timeout'] = `${this.sdkConfigTimeout * 1000}`;\n        }\n        if (this.sdkConfigPollingInterval !== undefined) {\n            customVariable['sdk.config.pollingTime'] = `${this.sdkConfigPollingInterval * 1000}`;\n        }\n        if (this.sdkConfigTrackingManagerStrategy !== undefined) {\n            customVariable['sdk.config.trackingManager.strategy'] = `${CacheStrategy[this.sdkConfigTrackingManagerStrategy]}`;\n        }\n        if (this.sdkConfigTrackingManagerBatchIntervals !== undefined) {\n            customVariable['sdk.config.trackingManager.batchIntervals'] = `${this.sdkConfigTrackingManagerBatchIntervals * 1000}`;\n        }\n        if (this.sdkConfigTrackingManagerPoolMaxSize !== undefined) {\n            customVariable['sdk.config.trackingManager.poolMaxSize'] = `${this.sdkConfigTrackingManagerPoolMaxSize}`;\n        }\n        if (this.sdkConfigFetchNow !== undefined) {\n            customVariable['sdk.config.fetchNow'] = `${this.sdkConfigFetchNow}`;\n        }\n        if (this.sdkConfigReuseVisitorIds !== undefined) {\n            customVariable['sdk.config.reuseVisitorIds'] = `${this.sdkConfigReuseVisitorIds}`;\n        }\n        if (this.sdkConfigInitialBucketing !== undefined) {\n            customVariable['sdk.config.initialBucketing'] = JSON.stringify(this.sdkConfigInitialBucketing);\n        }\n        if (this.sdkConfigDecisionApiUrl !== undefined) {\n            customVariable['sdk.config.decisionApiUrl'] = `${this.sdkConfigDecisionApiUrl}`;\n        }\n        if (this.sdkConfigHitDeduplicationTime !== undefined) {\n            customVariable['sdk.config.hitDeduplicationTime'] = `${this.sdkConfigHitDeduplicationTime * 1000}`;\n        }\n        if (this.sdkConfigUsingCustomHitCache !== undefined) {\n            customVariable['sdk.config.usingCustomHitCache'] = JSON.stringify(this.sdkConfigUsingCustomHitCache);\n        }\n        if (this.sdkConfigUsingCustomVisitorCache !== undefined) {\n            customVariable['sdk.config.usingCustomVisitorCache'] = JSON.stringify(this.sdkConfigUsingCustomVisitorCache);\n        }\n        if (this.sdkConfigUsingOnVisitorExposed !== undefined) {\n            customVariable['sdk.config.usingOnVisitorExposed'] = JSON.stringify(this.sdkConfigUsingOnVisitorExposed);\n        }\n        if (this.sdkConfigFetchThirdPartyData !== undefined) {\n            customVariable['sdk.config.fetchThirdPartyData'] = JSON.stringify(this.sdkConfigFetchThirdPartyData);\n        }\n        if (this.sdkConfigFetchFlagsBufferingTime !== undefined) {\n            customVariable['sdk.config.fetchFlagsBufferingTime'] = JSON.stringify(this.sdkConfigFetchFlagsBufferingTime * 1000);\n        }\n        if (this.sdkConfigNextFetchConfig !== undefined) {\n            customVariable['sdk.config.nextFetchConfig'] = JSON.stringify(this.sdkConfigNextFetchConfig);\n        }\n        if (this.sdkConfigDisableDeveloperUsageTracking !== undefined) {\n            customVariable['sdk.config.disableDeveloperUsageTracking'] = JSON.stringify(this.sdkConfigDisableDeveloperUsageTracking);\n        }\n        if (this.sdkConfigDisableCache !== undefined) {\n            customVariable['sdk.config.disableCache'] = JSON.stringify(this.sdkConfigDisableCache);\n        }\n        if (this.httpRequestUrl !== undefined) {\n            customVariable['http.request.url'] = `${this.httpRequestUrl}`;\n        }\n        if (this.httpRequestMethod !== undefined) {\n            customVariable['http.request.method'] = `${this.httpRequestMethod}`;\n        }\n        if (this.httpRequestHeaders !== undefined) {\n            customVariable['http.request.headers'] = JSON.stringify(this.httpRequestHeaders);\n        }\n        if (this.httpRequestBody !== undefined) {\n            customVariable['http.request.body'] = JSON.stringify(this.httpRequestBody);\n        }\n        if (this.httpResponseUrl !== undefined) {\n            customVariable['http.response.url'] = `${this.httpResponseUrl}`;\n        }\n        if (this.httpResponseMethod !== undefined) {\n            customVariable['http.response.method'] = `${this.httpResponseMethod}`;\n        }\n        if (this.httpResponseHeaders !== undefined) {\n            customVariable['http.response.headers'] = JSON.stringify(this.httpResponseHeaders);\n        }\n        if (this.httpResponseCode !== undefined) {\n            customVariable['http.response.code'] = `${this.httpResponseCode}`;\n        }\n        if (this.httpResponseBody !== undefined) {\n            customVariable['http.response.body'] = JSON.stringify(this.httpResponseBody);\n        }\n        if (this.httpResponseTime !== undefined) {\n            customVariable['http.response.time'] = `${this.httpResponseTime}`;\n        }\n        if (this.visitorId !== undefined) {\n            customVariable['visitor.visitorId'] = `${this.visitorId}`;\n        }\n        if (this.anonymousId !== undefined) {\n            customVariable['visitor.anonymousId'] = `${this.anonymousId}`;\n        }\n        if (this.visitorSessionId !== undefined) {\n            customVariable['visitor.sessionId'] = `${this.visitorSessionId}`;\n        }\n        if (this.visitorStatus !== undefined) {\n            customVariable['visitor.status'] = `${this.visitorStatus}`;\n        }\n        if (this.visitorInstanceType !== undefined) {\n            customVariable['visitor.instanceType'] = `${this.visitorInstanceType}`;\n        }\n        if (this.visitorContext !== undefined) {\n            for (const key in this.visitorContext) {\n                const element = this.visitorContext[key];\n                customVariable[`visitor.context.[${key}]`] = `${element}`;\n            }\n        }\n        if (this.visitorConsent !== undefined) {\n            customVariable['visitor.consent'] = `${this.visitorConsent}`;\n        }\n        if (this.visitorAssignmentHistory !== undefined) {\n            for (const key in this.visitorAssignmentHistory) {\n                const element = this.visitorAssignmentHistory[key];\n                customVariable[`visitor.assignments.[${key}]`] = element;\n            }\n        }\n        if (this.visitorFlags !== undefined) {\n            this.visitorFlags.forEach((item, flagKey) => {\n                for (const itemKey in item) {\n                    const itemValue = item[itemKey];\n                    const hasMetadataKey = itemKey === 'value' || itemKey === 'key';\n                    const value = typeof itemValue === 'string' ? itemValue : JSON.stringify(itemValue);\n                    customVariable[`visitor.flags.[${flagKey}]${hasMetadataKey ? '' : '.metadata'}.${itemKey}`] = value;\n                }\n            });\n        }\n        if (this.visitorIsAuthenticated !== undefined) {\n            customVariable['visitor.isAuthenticated'] = `${this.visitorIsAuthenticated}`;\n        }\n        if (this.visitorInitialCampaigns !== undefined) {\n            customVariable['visitor.initialCampaigns'] = JSON.stringify(this.visitorInitialCampaigns);\n        }\n        if (this.visitorInitialFlagsData !== undefined) {\n            customVariable['visitor.initialFlagsData'] = JSON.stringify(Array.isArray(this.visitorInitialFlagsData) ? this.visitorInitialFlagsData : Array.from(this.visitorInitialFlagsData));\n        }\n        if (this.visitorCampaigns !== undefined) {\n            customVariable['visitor.campaigns'] = JSON.stringify(this.visitorCampaigns);\n        }\n        if (this.visitorCampaignFromCache !== undefined) {\n            customVariable['visitor.campaignFromCache'] = JSON.stringify(this.visitorCampaignFromCache);\n        }\n        if (this.contextKey !== undefined) {\n            customVariable.contextKey = `${this.contextKey}`;\n        }\n        if (this.contextValue !== undefined) {\n            customVariable.contextValue = `${this.contextValue}`;\n        }\n        if (this.flagKey !== undefined) {\n            customVariable['flag.key'] = `${this.flagKey}`;\n        }\n        if (this.flagValue !== undefined) {\n            customVariable['flag.value'] = `${this.flagValue}`;\n        }\n        if (this.flagDefault !== undefined) {\n            customVariable['flag.default'] = JSON.stringify(this.flagDefault);\n        }\n        if (this.flagMetadataCampaignId !== undefined) {\n            customVariable['flag.metadata.campaignId'] = `${this.flagMetadataCampaignId}`;\n        }\n        if (this.flagMetadataCampaignName !== undefined) {\n            customVariable['flag.metadata.campaignName'] = `${this.flagMetadataCampaignName}`;\n        }\n        if (this.flagMetadataVariationGroupId !== undefined) {\n            customVariable['flag.metadata.variationGroupId'] = `${this.flagMetadataVariationGroupId}`;\n        }\n        if (this.flagMetadataVariationGroupName !== undefined) {\n            customVariable['flag.metadata.variationGroupName'] = `${this.flagMetadataVariationGroupName}`;\n        }\n        if (this.flagMetadataVariationId !== undefined) {\n            customVariable['flag.metadata.variationId'] = `${this.flagMetadataVariationId}`;\n        }\n        if (this.flagMetadataVariationName !== undefined) {\n            customVariable['flag.metadata.variationName'] = `${this.flagMetadataVariationName}`;\n        }\n        if (this.flagMetadataCampaignSlug !== undefined) {\n            customVariable['flag.metadata.campaignSlug'] = `${this.flagMetadataCampaignSlug}`;\n        }\n        if (this.flagMetadataCampaignType !== undefined) {\n            customVariable['flag.metadata.campaignType'] = `${this.flagMetadataCampaignType}`;\n        }\n        if (this.flagMetadataCampaignIsReference !== undefined) {\n            customVariable['flag.metadata.isReference'] = `${this.flagMetadataCampaignIsReference}`;\n        }\n        if (this.hitContent !== undefined) {\n            for (const key in this.hitContent) {\n                const element = this.hitContent[key];\n                customVariable[`hit.${key}`] = typeof element === 'string' ? element : JSON.stringify(element);\n            }\n        }\n        if (this.batchTriggeredBy !== undefined) {\n            customVariable.batchTriggeredBy = `${BatchTriggeredBy[this.batchTriggeredBy]}`;\n        }\n        apiKeys.cv = customVariable;\n        return apiKeys;\n    }\n    isReady(checkParent = true) {\n        return !!((!checkParent || super.isReady()));\n    }\n    getErrorMessage() {\n        return ERROR_MESSAGE;\n    }\n}\n","import { Diagnostic } from './Diagnostic';\nexport class Troubleshooting extends Diagnostic {\n    constructor(param) {\n        super({ ...param, type: 'TROUBLESHOOTING' });\n    }\n}\n","import { BASE_API_URL, EXPOSE_ALL_KEYS, FETCH_FLAGS_PANIC_MODE, FSSdkStatus, HEADER_APPLICATION_JSON, HEADER_CONTENT_TYPE, HEADER_X_API_KEY, HEADER_X_SDK_CLIENT, HEADER_X_SDK_VERSION, LogLevel, PROCESS_FETCHING_FLAGS, SDK_INFO, URL_CAMPAIGNS } from '../enum/index';\nimport { TroubleshootingLabel } from '../types';\nimport { errorFormat, logDebug } from '../utils/utils';\nimport { Troubleshooting } from '../hit/Troubleshooting';\nexport class DecisionManager {\n    _bucketingContent;\n    _config;\n    _panic = false;\n    _httpClient;\n    _statusChangedCallback;\n    _troubleshooting;\n    _lastBucketingTimestamp;\n    _trackingManager;\n    _flagshipInstanceId;\n    get trackingManager() {\n        return this._trackingManager;\n    }\n    set trackingManager(v) {\n        this._trackingManager = v;\n    }\n    get flagshipInstanceId() {\n        return this._flagshipInstanceId;\n    }\n    set flagshipInstanceId(v) {\n        this._flagshipInstanceId = v;\n    }\n    get lastBucketingTimestamp() {\n        return this._lastBucketingTimestamp;\n    }\n    get troubleshooting() {\n        return this._troubleshooting;\n    }\n    set troubleshooting(v) {\n        this._troubleshooting = v;\n    }\n    get config() {\n        return this._config;\n    }\n    // eslint-disable-next-line accessor-pairs\n    set panic(v) {\n        this.updateFlagshipStatus(v ? FSSdkStatus.SDK_PANIC : FSSdkStatus.SDK_INITIALIZED);\n        this._panic = v;\n        if (v) {\n            logDebug(this.config, FETCH_FLAGS_PANIC_MODE, PROCESS_FETCHING_FLAGS);\n        }\n    }\n    statusChangedCallback(v) {\n        this._statusChangedCallback = v;\n    }\n    constructor(httpClient, config) {\n        this._config = config;\n        this._httpClient = httpClient;\n    }\n    updateFlagshipStatus(v) {\n        if (typeof this._statusChangedCallback === 'function' && this._statusChangedCallback) {\n            this._statusChangedCallback(v);\n        }\n    }\n    getModifications(campaigns) {\n        const modifications = new Map();\n        campaigns.forEach((campaign) => {\n            const object = campaign.variation.modifications.value;\n            for (const key in object) {\n                const value = object[key];\n                modifications.set(key, {\n                    key,\n                    campaignId: campaign.id,\n                    campaignName: campaign.name || '',\n                    variationGroupId: campaign.variationGroupId,\n                    variationGroupName: campaign.variationGroupName || '',\n                    variationId: campaign.variation.id,\n                    variationName: campaign.variation.name || '',\n                    isReference: !!campaign.variation.reference,\n                    campaignType: campaign.type,\n                    slug: campaign.slug,\n                    value\n                });\n            }\n        });\n        return modifications;\n    }\n    isPanic() {\n        return this._panic;\n    }\n    async getDecisionApiCampaignsAsync(visitor) {\n        const headers = {\n            [HEADER_X_API_KEY]: `${this.config.apiKey}`,\n            [HEADER_X_SDK_CLIENT]: SDK_INFO.name,\n            [HEADER_X_SDK_VERSION]: SDK_INFO.version,\n            [HEADER_CONTENT_TYPE]: HEADER_APPLICATION_JSON\n        };\n        const requestBody = {\n            visitorId: visitor.visitorId,\n            anonymousId: visitor.anonymousId,\n            trigger_hit: false,\n            context: visitor.context,\n            visitor_consent: visitor.hasConsented\n        };\n        const url = `${this.config.decisionApiUrl || BASE_API_URL}${this.config.envId}${URL_CAMPAIGNS}?${EXPOSE_ALL_KEYS}=true&extras[]=accountSettings`;\n        const now = Date.now();\n        try {\n            const response = await this._httpClient.postAsync(url, {\n                headers,\n                timeout: this.config.timeout,\n                body: requestBody,\n                nextFetchConfig: this.config.nextFetchConfig\n            });\n            this.panic = !!response?.body?.panic;\n            let campaigns = null;\n            if (response?.body?.campaigns) {\n                campaigns = response.body.campaigns;\n            }\n            const troubleshooting = response?.body?.extras?.accountSettings?.troubleshooting;\n            if (troubleshooting) {\n                this.troubleshooting = {\n                    startDate: new Date(troubleshooting.startDate),\n                    endDate: new Date(troubleshooting.endDate),\n                    timezone: troubleshooting.timezone,\n                    traffic: troubleshooting.traffic\n                };\n            }\n            return campaigns;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            const troubleshooting = new Troubleshooting({\n                label: TroubleshootingLabel.GET_CAMPAIGNS_ROUTE_RESPONSE_ERROR,\n                logLevel: LogLevel.ERROR,\n                visitorId: visitor.visitorId,\n                anonymousId: visitor.anonymousId,\n                visitorSessionId: visitor.instanceId,\n                traffic: 100,\n                config: this.config,\n                visitorContext: visitor.context,\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                httpResponseTime: Date.now() - now\n            });\n            await this.trackingManager.addTroubleshootingHit(troubleshooting);\n            const errorMessage = errorFormat(error.message || error, {\n                url,\n                headers,\n                body: requestBody,\n                duration: Date.now() - now\n            });\n            throw new Error(errorMessage);\n        }\n    }\n}\n","import { DecisionManager } from './DecisionManager';\nexport class ApiManager extends DecisionManager {\n    async getCampaignsAsync(visitor) {\n        return this.getDecisionApiCampaignsAsync(visitor);\n    }\n}\n","import { IC_API_ITEM, IN_API_ITEM, IP_API_ITEM, IQ_API_ITEM, IV_API_ITEM, TID_API_ITEM } from '../enum/FlagshipConstant';\nimport { HitType } from '../enum/HitType';\nimport { HitAbstract } from './HitAbstract';\nexport const ERROR_MESSAGE = 'Transaction Id, Item name and item code are required';\nexport class Item extends HitAbstract {\n    _transactionId;\n    _productName;\n    _productSku;\n    _itemPrice;\n    _itemQuantity;\n    _itemCategory;\n    get transactionId() {\n        return this._transactionId;\n    }\n    /**\n     * Specify transaction unique identifier.\n     */\n    set transactionId(v) {\n        if (!this.isNotEmptyString(v, 'transactionId')) {\n            return;\n        }\n        this._transactionId = v;\n    }\n    get productName() {\n        return this._productName;\n    }\n    /**\n     * Specify name of the item product.\n     */\n    set productName(v) {\n        if (!this.isNotEmptyString(v, 'productName')) {\n            return;\n        }\n        this._productName = v;\n    }\n    get productSku() {\n        return this._productSku;\n    }\n    /**\n     * Specify the SKU or item code.\n     */\n    set productSku(v) {\n        if (!this.isNotEmptyString(v, 'productSku')) {\n            return;\n        }\n        this._productSku = v;\n    }\n    get itemPrice() {\n        return this._itemPrice;\n    }\n    /**\n     * Specify the price for a single item\n     */\n    set itemPrice(v) {\n        if (!this.isNumeric(v, 'itemPrice')) {\n            return;\n        }\n        this._itemPrice = v;\n    }\n    get itemQuantity() {\n        return this._itemQuantity;\n    }\n    /**\n     * Specify the number of items purchased.\n     */\n    set itemQuantity(v) {\n        if (!this.isInteger(v, 'itemQuantity')) {\n            return;\n        }\n        this._itemQuantity = Math.trunc(v);\n    }\n    get itemCategory() {\n        return this._itemCategory;\n    }\n    /**\n     * Specify the category that the item belongs to\n     */\n    set itemCategory(v) {\n        if (!this.isNotEmptyString(v, 'itemCategory')) {\n            return;\n        }\n        this._itemCategory = v;\n    }\n    /**\n     *Item constructor.\n     * @param transactionId : Transaction unique identifier.\n     * @param productName : Name of the item product.\n     * @param productSku : The SKU or item code.\n     */\n    constructor(param) {\n        super({\n            type: HitType.ITEM,\n            userIp: param.userIp,\n            screenResolution: param.screenResolution,\n            locale: param.locale,\n            sessionNumber: param.sessionNumber,\n            visitorId: param.visitorId,\n            anonymousId: param.anonymousId,\n            qaMode: param.qaMode\n        });\n        const { transactionId, productName, productSku, itemCategory, itemPrice, itemQuantity } = param;\n        this.transactionId = transactionId;\n        this.productName = productName;\n        this.productSku = productSku;\n        if (itemCategory) {\n            this.itemCategory = itemCategory;\n        }\n        if (itemPrice) {\n            this.itemPrice = itemPrice;\n        }\n        if (itemQuantity) {\n            this.itemQuantity = itemQuantity;\n        }\n    }\n    isReady(checkParent = true) {\n        return !!((!checkParent || super.isReady()) &&\n            this.transactionId &&\n            this.productName &&\n            this.productSku);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toApiKeys() {\n        const apiKeys = super.toApiKeys();\n        apiKeys[TID_API_ITEM] = this.transactionId;\n        apiKeys[IN_API_ITEM] = this.productName;\n        apiKeys[IC_API_ITEM] = this.productSku;\n        if (this.itemPrice) {\n            apiKeys[IP_API_ITEM] = this.itemPrice;\n        }\n        if (this.itemQuantity) {\n            apiKeys[IQ_API_ITEM] = this.itemQuantity;\n        }\n        if (this.itemCategory) {\n            apiKeys[IV_API_ITEM] = this.itemCategory;\n        }\n        return apiKeys;\n    }\n    toObject() {\n        return {\n            ...super.toObject(),\n            transactionId: this.transactionId,\n            productName: this.productName,\n            productSku: this.productSku,\n            itemPrice: this.itemPrice,\n            itemQuantity: this.itemQuantity,\n            itemCategory: this.itemCategory\n        };\n    }\n    getErrorMessage() {\n        return ERROR_MESSAGE;\n    }\n}\n","import { DL_API_ITEM } from '../enum/FlagshipConstant';\nimport { HitType } from '../enum/HitType';\nimport { HitAbstract } from './HitAbstract';\nexport const ERROR_MESSAGE = 'documentLocation url is required';\nexport class Page extends HitAbstract {\n    _documentLocation;\n    get documentLocation() {\n        return this._documentLocation;\n    }\n    set documentLocation(v) {\n        if (!this.isNotEmptyString(v, 'documentLocation')) {\n            return;\n        }\n        this._documentLocation = v;\n    }\n    constructor(page) {\n        super({\n            type: HitType.PAGE_VIEW,\n            userIp: page.userIp,\n            screenResolution: page.screenResolution,\n            locale: page.locale,\n            sessionNumber: page.sessionNumber,\n            visitorId: page.visitorId,\n            anonymousId: page.anonymousId,\n            qaMode: page.qaMode\n        });\n        this.documentLocation = page.documentLocation;\n    }\n    isReady(checkParent = true) {\n        return !!((!checkParent || super.isReady()) && this.documentLocation);\n    }\n    toApiKeys() {\n        const apiKeys = super.toApiKeys();\n        apiKeys[DL_API_ITEM] = this.documentLocation;\n        return apiKeys;\n    }\n    toObject() {\n        return {\n            ...super.toObject(),\n            documentLocation: this.documentLocation\n        };\n    }\n    getErrorMessage() {\n        return ERROR_MESSAGE;\n    }\n}\n","import { DL_API_ITEM } from '../enum/FlagshipConstant';\nimport { HitType } from '../enum/HitType';\nimport { HitAbstract } from './HitAbstract';\nexport const ERROR_MESSAGE = 'Screen name is required';\nexport class Screen extends HitAbstract {\n    _documentLocation;\n    get documentLocation() {\n        return this._documentLocation;\n    }\n    set documentLocation(v) {\n        if (!this.isNotEmptyString(v, 'documentLocation')) {\n            return;\n        }\n        this._documentLocation = v;\n    }\n    constructor(param) {\n        super({\n            type: HitType.SCREEN_VIEW,\n            userIp: param.userIp,\n            screenResolution: param.screenResolution,\n            locale: param.locale,\n            sessionNumber: param.sessionNumber,\n            visitorId: param.visitorId,\n            anonymousId: param.anonymousId,\n            qaMode: param.qaMode\n        });\n        this.documentLocation = param.documentLocation;\n    }\n    isReady(checkParent = true) {\n        return !!((!checkParent || super.isReady()) && this.documentLocation);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toApiKeys() {\n        const apiKeys = super.toApiKeys();\n        apiKeys[DL_API_ITEM] = this.documentLocation;\n        return apiKeys;\n    }\n    toObject() {\n        return {\n            ...super.toObject(),\n            documentLocation: this.documentLocation\n        };\n    }\n    getErrorMessage() {\n        return ERROR_MESSAGE;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ICN_API_ITEM, PM_API_ITEM, SM_API_ITEM, TA_API_ITEM, TC_API_ITEM, TCC_API_ITEM, TID_API_ITEM, TR_API_ITEM, TS_API_ITEM, TT_API_ITEM } from '../enum/FlagshipConstant';\nimport { HitType } from '../enum/HitType';\nimport { logError, sprintf } from '../utils/utils';\nimport { HitAbstract } from './HitAbstract';\nexport const CURRENCY_ERROR = '{0} must be a string and have exactly 3 letters';\nexport const ERROR_MESSAGE = 'Transaction Id and Transaction affiliation are required';\nexport class Transaction extends HitAbstract {\n    _transactionId;\n    _affiliation;\n    _taxes;\n    _currency;\n    _couponCode;\n    _itemCount;\n    _shippingMethod;\n    _paymentMethod;\n    _totalRevenue;\n    _shippingCosts;\n    get transactionId() {\n        return this._transactionId;\n    }\n    set transactionId(v) {\n        if (!this.isNotEmptyString(v, 'transactionId')) {\n            return;\n        }\n        this._transactionId = v;\n    }\n    get affiliation() {\n        return this._affiliation;\n    }\n    set affiliation(v) {\n        if (!this.isNotEmptyString(v, 'affiliation')) {\n            return;\n        }\n        this._affiliation = v;\n    }\n    get taxes() {\n        return this._taxes;\n    }\n    set taxes(v) {\n        if (!this.isNumeric(v, 'taxes')) {\n            return;\n        }\n        this._taxes = v;\n    }\n    get currency() {\n        return this._currency;\n    }\n    set currency(v) {\n        if (!v || typeof v !== 'string' || v.length !== 3) {\n            logError(this.config, sprintf(CURRENCY_ERROR, 'currency'), 'currency');\n            return;\n        }\n        this._currency = v;\n    }\n    get couponCode() {\n        return this._couponCode;\n    }\n    set couponCode(v) {\n        if (!this.isNotEmptyString(v, 'couponCode')) {\n            return;\n        }\n        this._couponCode = v;\n    }\n    get itemCount() {\n        return this._itemCount;\n    }\n    set itemCount(v) {\n        if (!this.isInteger(v, 'itemCount')) {\n            return;\n        }\n        this._itemCount = Math.trunc(v);\n    }\n    get shippingMethod() {\n        return this._shippingMethod;\n    }\n    set shippingMethod(v) {\n        if (!this.isNotEmptyString(v, 'shippingMethod')) {\n            return;\n        }\n        this._shippingMethod = v;\n    }\n    get paymentMethod() {\n        return this._paymentMethod;\n    }\n    set paymentMethod(v) {\n        if (!this.isNotEmptyString(v, 'paymentMethod')) {\n            return;\n        }\n        this._paymentMethod = v;\n    }\n    get totalRevenue() {\n        return this._totalRevenue;\n    }\n    set totalRevenue(v) {\n        if (!this.isNumeric(v, 'totalRevenue')) {\n            return;\n        }\n        this._totalRevenue = v;\n    }\n    get shippingCosts() {\n        return this._shippingCosts;\n    }\n    set shippingCosts(v) {\n        if (!this.isNumeric(v, 'shippingCosts')) {\n            return;\n        }\n        this._shippingCosts = v;\n    }\n    constructor(param) {\n        super({\n            type: HitType.TRANSACTION,\n            userIp: param.userIp,\n            screenResolution: param.screenResolution,\n            locale: param.locale,\n            sessionNumber: param.sessionNumber,\n            visitorId: param.visitorId,\n            anonymousId: param.anonymousId,\n            qaMode: param.qaMode\n        });\n        const { transactionId, affiliation, taxes, currency, couponCode, itemCount, shippingMethod, paymentMethod, totalRevenue, shippingCosts } = param;\n        this.transactionId = transactionId;\n        this.affiliation = affiliation;\n        if (taxes) {\n            this.taxes = taxes;\n        }\n        if (currency) {\n            this.currency = currency;\n        }\n        if (couponCode) {\n            this.couponCode = couponCode;\n        }\n        if (itemCount) {\n            this.itemCount = itemCount;\n        }\n        if (shippingMethod) {\n            this.shippingMethod = shippingMethod;\n        }\n        if (paymentMethod) {\n            this.paymentMethod = paymentMethod;\n        }\n        if (totalRevenue) {\n            this.totalRevenue = totalRevenue;\n        }\n        if (shippingCosts) {\n            this.shippingCosts = shippingCosts;\n        }\n    }\n    isReady(checkParent = true) {\n        return !!((!checkParent || super.isReady()) && this.transactionId && this.affiliation);\n    }\n    toApiKeys() {\n        const apiKeys = super.toApiKeys();\n        apiKeys[TID_API_ITEM] = this.transactionId;\n        apiKeys[TA_API_ITEM] = this.affiliation;\n        if (this.taxes) {\n            apiKeys[TT_API_ITEM] = this.taxes;\n        }\n        if (this.currency) {\n            apiKeys[TC_API_ITEM] = this.currency;\n        }\n        if (this.couponCode) {\n            apiKeys[TCC_API_ITEM] = this.couponCode;\n        }\n        if (this.itemCount) {\n            apiKeys[ICN_API_ITEM] = this.itemCount;\n        }\n        if (this.shippingMethod) {\n            apiKeys[SM_API_ITEM] = this.shippingMethod;\n        }\n        if (this.paymentMethod) {\n            apiKeys[PM_API_ITEM] = this.paymentMethod;\n        }\n        if (this.totalRevenue) {\n            apiKeys[TR_API_ITEM] = this.totalRevenue;\n        }\n        if (this.shippingCosts) {\n            apiKeys[TS_API_ITEM] = this.shippingCosts;\n        }\n        return apiKeys;\n    }\n    toObject() {\n        return {\n            ...super.toObject(),\n            transactionId: this.transactionId,\n            affiliation: this.affiliation,\n            taxes: this.taxes,\n            currency: this.currency,\n            couponCode: this.couponCode,\n            itemCount: this.itemCount,\n            shippingMethod: this.shippingMethod,\n            paymentMethod: this.paymentMethod,\n            totalRevenue: this.totalRevenue,\n            shippingCosts: this.shippingCosts\n        };\n    }\n    getErrorMessage() {\n        return ERROR_MESSAGE;\n    }\n}\n","import { S_API_ITEM } from '../enum/index';\nimport { HitAbstract } from './HitAbstract';\nexport const ERROR_MESSAGE = 'data property is required';\nexport class Segment extends HitAbstract {\n    _context;\n    get context() {\n        return this._context;\n    }\n    set context(v) {\n        this._context = v;\n    }\n    constructor(param) {\n        super({\n            type: 'SEGMENT',\n            userIp: param.userIp,\n            screenResolution: param.screenResolution,\n            locale: param.locale,\n            sessionNumber: param.sessionNumber,\n            visitorId: param.visitorId,\n            anonymousId: param.anonymousId,\n            qaMode: param.qaMode\n        });\n        this.context = param.context;\n    }\n    isReady(checkParent = true) {\n        return !!((!checkParent || super.isReady()) && this.context);\n    }\n    toApiKeys() {\n        const apiKeys = super.toApiKeys();\n        apiKeys[S_API_ITEM] = this.context;\n        return apiKeys;\n    }\n    toObject() {\n        return {\n            ...super.toObject(),\n            context: this.context\n        };\n    }\n    getErrorMessage() {\n        return ERROR_MESSAGE;\n    }\n}\n","import { BATCH, CUSTOMER_ENV_ID_API_ITEM } from '../enum/index';\nexport class ActivateBatch {\n    _hits;\n    _config;\n    get hits() {\n        return this._hits;\n    }\n    get config() {\n        return this._config;\n    }\n    constructor(hits, config) {\n        this._config = config;\n        this._hits = hits;\n    }\n    toApiKeys() {\n        return {\n            [CUSTOMER_ENV_ID_API_ITEM]: `${this.config?.envId}`,\n            [BATCH]: this.hits.map(x => {\n                const apiKeys = x.toApiKeys();\n                delete apiKeys[CUSTOMER_ENV_ID_API_ITEM];\n                return apiKeys;\n            })\n        };\n    }\n}\n","import { CUSTOMER_ENV_ID_API_ITEM, DS_API_ITEM, QT_API_ITEM, T_API_ITEM } from '../enum/FlagshipConstant';\nimport { HitAbstract } from './HitAbstract';\nexport const BATCH = 'BATCH';\nexport const ERROR_MESSAGE = 'Please check required fields';\nexport class Batch extends HitAbstract {\n    _hits;\n    get hits() {\n        return this._hits;\n    }\n    set hits(v) {\n        this._hits = v;\n    }\n    constructor(params) {\n        super({ ...params, visitorId: '', anonymousId: '', type: BATCH });\n        this.hits = params.hits;\n    }\n    isReady() {\n        return !!(super.isReady() &&\n            this.hits &&\n            this.hits.length > 0 &&\n            this.hits.every(hit => hit.isReady(false)));\n    }\n    toApiKeys() {\n        const apiKeys = {\n            [DS_API_ITEM]: this.ds,\n            [CUSTOMER_ENV_ID_API_ITEM]: `${this.config?.envId}`,\n            [T_API_ITEM]: this.type,\n            [QT_API_ITEM]: Date.now() - this.createdAt\n        };\n        apiKeys.h = this.hits.map(hit => {\n            const hitKeys = hit.toApiKeys();\n            delete hitKeys[DS_API_ITEM];\n            delete hitKeys[CUSTOMER_ENV_ID_API_ITEM];\n            return hitKeys;\n        });\n        return apiKeys;\n    }\n    getErrorMessage() {\n        return ERROR_MESSAGE;\n    }\n}\n","import { isBrowser } from '../../utils/utils';\nimport { MSG_NAME_TO_IFRAME } from '../type';\nexport function sendMessageToIframe(data) {\n    if (!window?.frames?.ABTastyQaAssistant || !isBrowser()) {\n        return;\n    }\n    window.frames.ABTastyQaAssistant.postMessage(data, '*');\n}\nexport function sendVisitorAllocatedVariations(visitorVariations) {\n    if (!isBrowser()) {\n        return;\n    }\n    window.flagship = {\n        ...window.flagship,\n        visitorVariations\n    };\n    sendMessageToIframe({ name: MSG_NAME_TO_IFRAME.FsUpdateVisitorAllocatedVariation, value: visitorVariations });\n}\nexport function sendVisitorExposedVariations(visitorVariations) {\n    sendMessageToIframe({ name: MSG_NAME_TO_IFRAME.FsVisitorExposedVariation, value: visitorVariations });\n}\nexport function sendFsHitToQA(hit) {\n    sendMessageToIframe({\n        name: MSG_NAME_TO_IFRAME.FsHIT,\n        value: hit.map(item => {\n            return { ...item, timestamp: Date.now() - item.qt };\n        })\n    });\n}\n","import { DecisionMode } from '../config/index';\nimport { BatchTriggeredBy } from '../enum/BatchTriggeredBy';\nimport { ACTIVATE_ADDED_IN_QUEUE, ADD_ACTIVATE, BATCH_MAX_SIZE, DEFAULT_HIT_CACHE_TIME_MS, FS_CONSENT, HEADER_APPLICATION_JSON, HEADER_CONTENT_TYPE, HitType, HIT_ADDED_IN_QUEUE, HIT_CACHE_VERSION, HIT_DATA_FLUSHED, HIT_EVENT_URL, LogLevel, PROCESS_CACHE_HIT, PROCESS_FLUSH_HIT, SDK_APP, SDK_INFO, SEND_BATCH, TROUBLESHOOTING_HIT_URL, TROUBLESHOOTING_HIT_ADDED_IN_QUEUE, ADD_TROUBLESHOOTING_HIT, TROUBLESHOOTING_SENT_SUCCESS, SEND_TROUBLESHOOTING, ALL_HITS_FLUSHED, HIT_CACHE_ERROR, HIT_CACHE_SAVED, PROCESS_CACHE, TRACKING_MANAGER, HIT_SENT_SUCCESS, BATCH_HIT, TRACKING_MANAGER_ERROR, USAGE_HIT_URL, ANALYTICS_HIT_SENT_SUCCESS as USAGE_HIT_SENT_SUCCESS, SEND_USAGE_HIT, ANALYTICS_HIT_ADDED_IN_QUEUE as USAGE_HIT_ADDED_IN_QUEUE, ADD_USAGE_HIT } from '../enum/index';\nimport { Batch } from '../hit/Batch';\nimport { Troubleshooting } from '../hit/Troubleshooting';\nimport { TroubleshootingLabel } from '../types';\nimport { errorFormat, isBrowser, logDebug, logDebugSprintf, logError, logErrorSprintf, sprintf, uuidV4 } from '../utils/utils';\nimport { sendFsHitToQA } from '../qaAssistant/messages/index';\nexport class BatchingCachingStrategyAbstract {\n    _config;\n    _hitsPoolQueue;\n    _activatePoolQueue;\n    _httpClient;\n    _troubleshootingQueue;\n    _usageHitQueue;\n    _flagshipInstanceId;\n    _isUsageHitQueueSending;\n    _isTroubleshootingQueueSending;\n    _HitsToFsQa;\n    _sendFsHitToQATimeoutId;\n    _troubleshootingData;\n    get flagshipInstanceId() {\n        return this._flagshipInstanceId;\n    }\n    get troubleshootingData() {\n        return this._troubleshootingData;\n    }\n    set troubleshootingData(v) {\n        this._troubleshootingData = v;\n    }\n    get config() {\n        return this._config;\n    }\n    constructor(param) {\n        const { config, hitsPoolQueue, httpClient, activatePoolQueue, troubleshootingQueue, flagshipInstanceId, analyticHitQueue } = param;\n        this._HitsToFsQa = [];\n        this._config = config;\n        this._hitsPoolQueue = hitsPoolQueue;\n        this._httpClient = httpClient;\n        this._activatePoolQueue = activatePoolQueue;\n        this._troubleshootingQueue = troubleshootingQueue;\n        this._flagshipInstanceId = flagshipInstanceId;\n        this._usageHitQueue = analyticHitQueue;\n        this._isUsageHitQueueSending = false;\n        this._isTroubleshootingQueueSending = false;\n    }\n    sendHitsToFsQa(hits) {\n        if (!isBrowser() || !this.config.isQAModeEnabled) {\n            return;\n        }\n        this._HitsToFsQa.push(...hits);\n        const BATCH_SIZE = 10;\n        const DELAY = 3000;\n        if (this._HitsToFsQa.length >= BATCH_SIZE) {\n            sendFsHitToQA(this._HitsToFsQa.map(item => item.toApiKeys()));\n            this._HitsToFsQa = [];\n        }\n        if (this._sendFsHitToQATimeoutId) {\n            clearTimeout(this._sendFsHitToQATimeoutId);\n        }\n        if (!this._HitsToFsQa.length) {\n            return;\n        }\n        this._sendFsHitToQATimeoutId = setTimeout(() => {\n            sendFsHitToQA(this._HitsToFsQa.map(item => item.toApiKeys()));\n            this._HitsToFsQa = [];\n        }, DELAY);\n    }\n    async addHit(hit) {\n        const hitKey = `${hit.visitorId}:${uuidV4()}`;\n        hit.key = hitKey;\n        await this.addHitInPoolQueue(hit);\n        if (hit.type === HitType.EVENT && hit.action === FS_CONSENT && hit.label === `${SDK_INFO.name}:false`) {\n            await this.notConsent(hit.visitorId);\n        }\n        logDebugSprintf(this.config, TRACKING_MANAGER, HIT_ADDED_IN_QUEUE, hit.toApiKeys());\n        if (this.config.trackingManagerConfig?.poolMaxSize &&\n            this._hitsPoolQueue.size >= this.config.trackingManagerConfig.poolMaxSize &&\n            this.config.decisionMode !== DecisionMode.BUCKETING_EDGE) {\n            this.sendBatch();\n        }\n    }\n    async activateFlag(hit) {\n        const hitKey = `${hit.visitorId}:${uuidV4()}`;\n        hit.key = hitKey;\n        if (this.config.decisionMode === DecisionMode.BUCKETING_EDGE) {\n            await this.activateFlagEdgeMode(hit);\n            logDebug(this.config, sprintf(ACTIVATE_ADDED_IN_QUEUE, JSON.stringify(hit.toApiKeys())), ADD_ACTIVATE);\n            return;\n        }\n        let activateHitsPool = [];\n        if (this._activatePoolQueue.size) {\n            activateHitsPool = Array.from(this._activatePoolQueue.values());\n        }\n        this._activatePoolQueue.clear();\n        await this.sendActivate({ activateHitsPool, currentActivate: hit, batchTriggeredBy: BatchTriggeredBy.ActivateLength });\n    }\n    async activateFlagEdgeMode(hit) {\n        this._activatePoolQueue.set(hit.key, hit);\n        await this.cacheHit(new Map([[hit.key, hit]]));\n    }\n    onVisitorExposed(activate) {\n        const onVisitorExposed = this.config.onVisitorExposed;\n        if (typeof onVisitorExposed !== 'function') {\n            return;\n        }\n        const fromFlag = {\n            key: activate.flagKey,\n            value: activate.flagValue,\n            defaultValue: activate.flagDefaultValue,\n            metadata: activate.flagMetadata\n        };\n        const exposedVisitor = {\n            id: activate.visitorId,\n            anonymousId: activate.anonymousId,\n            context: activate.visitorContext\n        };\n        onVisitorExposed({ exposedVisitor, fromFlag });\n    }\n    async sendBatch(batchTriggeredBy = BatchTriggeredBy.BatchLength) {\n        if (this._activatePoolQueue.size) {\n            const activateHits = Array.from(this._activatePoolQueue.values());\n            this._activatePoolQueue.clear();\n            await this.sendActivate({ activateHitsPool: activateHits, batchTriggeredBy });\n        }\n        const batch = new Batch({ hits: [], ds: SDK_APP });\n        batch.config = this.config;\n        const hitKeysToRemove = [];\n        for (const [key, item] of this._hitsPoolQueue) {\n            if ((Date.now() - item.createdAt) >= DEFAULT_HIT_CACHE_TIME_MS) {\n                hitKeysToRemove.push(key);\n                continue;\n            }\n            const batchSize = JSON.stringify(batch).length;\n            if (batchSize > BATCH_MAX_SIZE) {\n                break;\n            }\n            batch.hits.push(item);\n            hitKeysToRemove.push(key);\n        }\n        hitKeysToRemove.forEach(key => {\n            this._hitsPoolQueue.delete(key);\n        });\n        if (!batch.hits.length) {\n            return;\n        }\n        const headers = {\n            [HEADER_CONTENT_TYPE]: HEADER_APPLICATION_JSON\n        };\n        const requestBody = batch.toApiKeys();\n        const now = Date.now();\n        try {\n            await this._httpClient.postAsync(HIT_EVENT_URL, {\n                headers,\n                body: requestBody,\n                timeout: this.config.timeout,\n                nextFetchConfig: this.config.nextFetchConfig\n            });\n            logDebugSprintf(this.config, TRACKING_MANAGER, HIT_SENT_SUCCESS, BATCH_HIT, {\n                url: HIT_EVENT_URL,\n                body: requestBody,\n                headers,\n                nextFetchConfig: this.config.nextFetchConfig,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[batchTriggeredBy]\n            });\n            await this.flushHits(hitKeysToRemove);\n            this.sendHitsToFsQa(batch.hits);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            batch.hits.forEach((hit) => {\n                this._hitsPoolQueue.set(hit.key, hit);\n            });\n            logErrorSprintf(this.config, TRACKING_MANAGER, TRACKING_MANAGER_ERROR, BATCH_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: HIT_EVENT_URL,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[batchTriggeredBy]\n            });\n            const monitoringHttpResponse = new Troubleshooting({\n                label: TroubleshootingLabel.SEND_BATCH_HIT_ROUTE_RESPONSE_ERROR,\n                logLevel: LogLevel.ERROR,\n                visitorId: `${this._flagshipInstanceId}`,\n                flagshipInstanceId: this._flagshipInstanceId,\n                traffic: 0,\n                config: this.config,\n                httpRequestBody: batch.hits,\n                httpRequestHeaders: headers,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseMethod: 'POST',\n                httpResponseUrl: HIT_EVENT_URL,\n                httpResponseCode: error?.statusCode,\n                httpResponseTime: Date.now() - now,\n                batchTriggeredBy\n            });\n            await this.sendTroubleshootingHit(monitoringHttpResponse);\n        }\n    }\n    async notConsent(visitorId) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const hitKeys = Array.from(this._hitsPoolQueue).filter(([_, item]) => {\n            return (item?.type !== HitType.EVENT || item?.action !== FS_CONSENT) && (item.visitorId === visitorId || item.anonymousId === visitorId);\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const activateKeys = Array.from(this._activatePoolQueue).filter(([_, item]) => {\n            return item.visitorId === visitorId || item.anonymousId === visitorId;\n        });\n        const keysToFlush = [];\n        hitKeys.forEach(([key]) => {\n            this._hitsPoolQueue.delete(key);\n            keysToFlush.push(key);\n        });\n        activateKeys.forEach(([key]) => {\n            this._activatePoolQueue.delete(key);\n            keysToFlush.push(key);\n        });\n        if (!keysToFlush.length) {\n            return;\n        }\n        await this.flushHits(keysToFlush);\n    }\n    async cacheHit(hits) {\n        try {\n            const hitCacheImplementation = this.config.hitCacheImplementation;\n            if (this.config.disableCache || !hitCacheImplementation || typeof hitCacheImplementation.cacheHit !== 'function') {\n                return;\n            }\n            const data = {};\n            hits.forEach((item, key) => {\n                const hitData = {\n                    version: HIT_CACHE_VERSION,\n                    data: {\n                        visitorId: item.visitorId,\n                        anonymousId: item.anonymousId,\n                        type: item.type,\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        content: item.toObject(),\n                        time: Date.now()\n                    }\n                };\n                data[key] = hitData;\n            });\n            await hitCacheImplementation.cacheHit(data);\n            logDebugSprintf(this.config, PROCESS_CACHE_HIT, HIT_CACHE_SAVED, data);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logErrorSprintf(this.config, PROCESS_CACHE, HIT_CACHE_ERROR, 'cacheHit', error.message || error);\n        }\n    }\n    async flushHits(hitKeys) {\n        try {\n            const hitCacheImplementation = this.config.hitCacheImplementation;\n            if (this.config.disableCache || !hitCacheImplementation || typeof hitCacheImplementation.flushHits !== 'function') {\n                return;\n            }\n            await hitCacheImplementation.flushHits(hitKeys);\n            logDebugSprintf(this.config, PROCESS_CACHE, HIT_DATA_FLUSHED, hitKeys);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logErrorSprintf(this.config, PROCESS_CACHE, HIT_CACHE_ERROR, 'flushHits', error.message || error);\n        }\n    }\n    async flushAllHits() {\n        try {\n            const hitCacheImplementation = this.config.hitCacheImplementation;\n            if (this.config.disableCache || !hitCacheImplementation || typeof hitCacheImplementation.flushAllHits !== 'function') {\n                return;\n            }\n            await hitCacheImplementation.flushAllHits();\n            logDebug(this.config, ALL_HITS_FLUSHED, PROCESS_FLUSH_HIT);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logErrorSprintf(this.config, PROCESS_CACHE, HIT_CACHE_ERROR, 'flushAllHits', error.message || error);\n        }\n    }\n    // #region Troubleshooting\n    isTroubleshootingActivated() {\n        if (!this.troubleshootingData) {\n            return false;\n        }\n        const now = new Date();\n        const isStarted = now >= this.troubleshootingData.startDate;\n        if (!isStarted) {\n            return false;\n        }\n        const isFinished = now > this.troubleshootingData.endDate;\n        if (isFinished) {\n            return false;\n        }\n        return true;\n    }\n    async addTroubleshootingHit(hit) {\n        if (!hit.key) {\n            const hitKey = `${hit.visitorId}:${uuidV4()}`;\n            hit.key = hitKey;\n        }\n        this._troubleshootingQueue.set(hit.key, hit);\n        logDebug(this.config, sprintf(TROUBLESHOOTING_HIT_ADDED_IN_QUEUE, JSON.stringify(hit.toApiKeys())), ADD_TROUBLESHOOTING_HIT);\n    }\n    async sendTroubleshootingHit(hit) {\n        if (!this.isTroubleshootingActivated() || hit.traffic === undefined || this.troubleshootingData.traffic < hit.traffic) {\n            return;\n        }\n        const requestBody = hit.toApiKeys();\n        const now = Date.now();\n        try {\n            await this._httpClient.postAsync(TROUBLESHOOTING_HIT_URL, {\n                body: requestBody\n            });\n            logDebug(this.config, sprintf(TROUBLESHOOTING_SENT_SUCCESS, JSON.stringify({\n                ...requestBody,\n                duration: Date.now() - now\n            })), SEND_TROUBLESHOOTING);\n            if (hit.key) {\n                this._troubleshootingQueue.delete(hit.key);\n                await this.flushHits([hit.key]);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            if (this.isTroubleshootingActivated()) {\n                await this.addTroubleshootingHit(hit);\n            }\n            logError(this.config, errorFormat(error.message || error, {\n                url: TROUBLESHOOTING_HIT_URL,\n                headers: {},\n                body: requestBody,\n                duration: Date.now() - now\n            }), SEND_BATCH);\n        }\n    }\n    async sendTroubleshootingQueue() {\n        if (!this.isTroubleshootingActivated() || this._isTroubleshootingQueueSending || this._troubleshootingQueue.size === 0) {\n            return;\n        }\n        this._isTroubleshootingQueueSending = true;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const [_, item] of Array.from(this._troubleshootingQueue)) {\n            await this.sendTroubleshootingHit(item);\n        }\n        this._isTroubleshootingQueueSending = false;\n    }\n    // #endregion\n    // #region Analytic hit\n    async addUsageHit(hit) {\n        if (!hit.key) {\n            const hitKey = `${hit.visitorId}:${uuidV4()}`;\n            hit.key = hitKey;\n        }\n        this._usageHitQueue.set(hit.key, hit);\n        logDebug(this.config, sprintf(USAGE_HIT_ADDED_IN_QUEUE, JSON.stringify(hit.toApiKeys())), ADD_USAGE_HIT);\n    }\n    async sendUsageHit(hit) {\n        const requestBody = hit.toApiKeys();\n        const now = Date.now();\n        try {\n            await this._httpClient.postAsync(USAGE_HIT_URL, {\n                body: requestBody\n            });\n            logDebug(this.config, sprintf(USAGE_HIT_SENT_SUCCESS, JSON.stringify({\n                ...requestBody,\n                duration: Date.now() - now\n            })), SEND_USAGE_HIT);\n            if (hit.key) {\n                this._usageHitQueue.delete(hit.key);\n                await this.flushHits([hit.key]);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            await this.addUsageHit(hit);\n            logError(this.config, errorFormat(error.message || error, {\n                url: USAGE_HIT_URL,\n                headers: {},\n                body: requestBody,\n                duration: Date.now() - now\n            }), SEND_BATCH);\n        }\n    }\n    async sendUsageHitQueue() {\n        if (this._isUsageHitQueueSending || this._usageHitQueue.size === 0) {\n            return;\n        }\n        this._isUsageHitQueueSending = true;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const [_, item] of Array.from(this._usageHitQueue)) {\n            await this.sendUsageHit(item);\n        }\n        this._isUsageHitQueueSending = false;\n    }\n}\n","import { ACTIVATE_HIT, DEFAULT_HIT_CACHE_TIME_MS, HIT_SENT_SUCCESS, TRACKING_MANAGER, TRACKING_MANAGER_ERROR } from '../enum/FlagshipConstant';\nimport { BatchTriggeredBy } from '../enum/BatchTriggeredBy';\nimport { BASE_API_URL, HEADER_APPLICATION_JSON, HEADER_CONTENT_TYPE, HEADER_X_API_KEY, HEADER_X_SDK_CLIENT, HEADER_X_SDK_VERSION, LogLevel, SDK_INFO, URL_ACTIVATE_MODIFICATION } from '../enum/index';\nimport { ActivateBatch } from '../hit/ActivateBatch';\nimport { Troubleshooting } from '../hit/Troubleshooting';\nimport { logDebugSprintf, logErrorSprintf } from '../utils/utils';\nimport { BatchingCachingStrategyAbstract } from './BatchingCachingStrategyAbstract';\nimport { TroubleshootingLabel } from '../types';\nexport class BatchingContinuousCachingStrategy extends BatchingCachingStrategyAbstract {\n    async addHitInPoolQueue(hit) {\n        this._hitsPoolQueue.set(hit.key, hit);\n        await this.cacheHit(new Map([[hit.key, hit]]));\n    }\n    async sendActivate({ activateHitsPool, currentActivate, batchTriggeredBy }) {\n        const headers = {\n            [HEADER_X_API_KEY]: this.config.apiKey,\n            [HEADER_X_SDK_CLIENT]: SDK_INFO.name,\n            [HEADER_X_SDK_VERSION]: SDK_INFO.version,\n            [HEADER_CONTENT_TYPE]: HEADER_APPLICATION_JSON\n        };\n        const activateBatch = new ActivateBatch(Array.from(activateHitsPool.filter(item => (Date.now() - item.createdAt) < DEFAULT_HIT_CACHE_TIME_MS)), this.config);\n        if (currentActivate) {\n            activateBatch.hits.push(currentActivate);\n        }\n        const requestBody = activateBatch.toApiKeys();\n        const url = BASE_API_URL + URL_ACTIVATE_MODIFICATION;\n        const now = Date.now();\n        try {\n            await this._httpClient.postAsync(url, {\n                headers,\n                body: requestBody,\n                timeout: this.config.timeout,\n                nextFetchConfig: this.config.nextFetchConfig\n            });\n            logDebugSprintf(this.config, TRACKING_MANAGER, HIT_SENT_SUCCESS, ACTIVATE_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[batchTriggeredBy]\n            });\n            const hitKeysToRemove = activateHitsPool.map(item => item.key);\n            activateBatch.hits.forEach(item => {\n                this.onVisitorExposed(item);\n            });\n            if (hitKeysToRemove.length) {\n                await this.flushHits(hitKeysToRemove);\n            }\n            this.sendHitsToFsQa(activateBatch.hits);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            activateBatch.hits.forEach(item => {\n                this._activatePoolQueue.set(item.key, item);\n            });\n            if (currentActivate) {\n                await this.cacheHit(new Map([[currentActivate.key, currentActivate]]));\n            }\n            logErrorSprintf(this.config, TRACKING_MANAGER, TRACKING_MANAGER_ERROR, ACTIVATE_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[batchTriggeredBy]\n            });\n            const monitoringHttpResponse = new Troubleshooting({\n                label: TroubleshootingLabel.SEND_ACTIVATE_HIT_ROUTE_ERROR,\n                logLevel: LogLevel.ERROR,\n                visitorId: `${this._flagshipInstanceId}`,\n                traffic: 0,\n                config: this.config,\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                httpResponseTime: Date.now() - now,\n                batchTriggeredBy\n            });\n            await this.sendTroubleshootingHit(monitoringHttpResponse);\n        }\n    }\n}\n","import { BatchTriggeredBy } from '../enum/BatchTriggeredBy';\nimport { BASE_API_URL, BATCH_MAX_SIZE, DEFAULT_HIT_CACHE_TIME_MS, HEADER_APPLICATION_JSON, HEADER_CONTENT_TYPE, HEADER_X_API_KEY, HEADER_X_SDK_CLIENT, HEADER_X_SDK_VERSION, HIT_EVENT_URL, HIT_SENT_SUCCESS, LogLevel, SDK_INFO, URL_ACTIVATE_MODIFICATION, BATCH_HIT, TRACKING_MANAGER, TRACKING_MANAGER_ERROR, ACTIVATE_HIT } from '../enum/index';\nimport { ActivateBatch } from '../hit/ActivateBatch';\nimport { Batch } from '../hit/Batch';\nimport { Troubleshooting } from '../hit/Troubleshooting';\nimport { TroubleshootingLabel } from '../types';\nimport { logDebugSprintf, logErrorSprintf } from '../utils/utils';\nimport { BatchingCachingStrategyAbstract } from './BatchingCachingStrategyAbstract';\nexport class BatchingPeriodicCachingStrategy extends BatchingCachingStrategyAbstract {\n    async addHitInPoolQueue(hit) {\n        this._hitsPoolQueue.set(hit.key, hit);\n    }\n    async sendActivate({ activateHitsPool, currentActivate, batchTriggeredBy }) {\n        const headers = {\n            [HEADER_X_API_KEY]: this.config.apiKey,\n            [HEADER_X_SDK_CLIENT]: SDK_INFO.name,\n            [HEADER_X_SDK_VERSION]: SDK_INFO.version,\n            [HEADER_CONTENT_TYPE]: HEADER_APPLICATION_JSON\n        };\n        const activateBatch = new ActivateBatch(Array.from(activateHitsPool.filter(item => (Date.now() - item.createdAt) < DEFAULT_HIT_CACHE_TIME_MS)), this.config);\n        if (currentActivate) {\n            activateBatch.hits.push(currentActivate);\n        }\n        const requestBody = activateBatch.toApiKeys();\n        const url = BASE_API_URL + URL_ACTIVATE_MODIFICATION;\n        const now = Date.now();\n        try {\n            await this._httpClient.postAsync(url, {\n                headers,\n                body: requestBody,\n                timeout: this.config.timeout,\n                nextFetchConfig: this.config.nextFetchConfig\n            });\n            logDebugSprintf(this.config, TRACKING_MANAGER, HIT_SENT_SUCCESS, ACTIVATE_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[batchTriggeredBy]\n            });\n            activateBatch.hits.forEach(item => {\n                this.onVisitorExposed(item);\n            });\n            this.sendHitsToFsQa(activateBatch.hits);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            activateBatch.hits.forEach(item => {\n                this._activatePoolQueue.set(item.key, item);\n            });\n            logErrorSprintf(this.config, TRACKING_MANAGER, TRACKING_MANAGER_ERROR, ACTIVATE_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[batchTriggeredBy]\n            });\n            const monitoringHttpResponse = new Troubleshooting({\n                label: TroubleshootingLabel.SEND_ACTIVATE_HIT_ROUTE_ERROR,\n                logLevel: LogLevel.ERROR,\n                visitorId: `${this._flagshipInstanceId}`,\n                traffic: 0,\n                config: this.config,\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                httpResponseTime: Date.now() - now,\n                batchTriggeredBy\n            });\n            await this.sendTroubleshootingHit(monitoringHttpResponse);\n        }\n    }\n    async sendBatch(batchTriggeredBy = BatchTriggeredBy.BatchLength) {\n        let hasActivateHit = false;\n        if (this._activatePoolQueue.size) {\n            const activateHits = Array.from(this._activatePoolQueue.values());\n            this._activatePoolQueue.clear();\n            await this.sendActivate({ activateHitsPool: activateHits, batchTriggeredBy });\n            hasActivateHit = true;\n        }\n        const headers = {\n            [HEADER_CONTENT_TYPE]: HEADER_APPLICATION_JSON\n        };\n        const batch = new Batch({ hits: [] });\n        batch.config = this.config;\n        let batchSize = 0;\n        const hitKeysToRemove = [];\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const [key, item] of this._hitsPoolQueue) {\n            if ((Date.now() - item.createdAt) >= DEFAULT_HIT_CACHE_TIME_MS) {\n                hitKeysToRemove.push(key);\n                continue;\n            }\n            batchSize = JSON.stringify(batch).length;\n            if (batchSize > BATCH_MAX_SIZE) {\n                break;\n            }\n            batch.hits.push(item);\n            hitKeysToRemove.push(key);\n        }\n        hitKeysToRemove.forEach(key => {\n            this._hitsPoolQueue.delete(key);\n        });\n        if (!batch.hits.length) {\n            if (hasActivateHit) {\n                await this.cacheHit(this._activatePoolQueue);\n            }\n            return;\n        }\n        const requestBody = batch.toApiKeys();\n        const now = Date.now();\n        try {\n            await this._httpClient.postAsync(HIT_EVENT_URL, {\n                headers,\n                body: requestBody,\n                timeout: this.config.timeout,\n                nextFetchConfig: this.config.nextFetchConfig\n            });\n            logDebugSprintf(this.config, TRACKING_MANAGER, HIT_SENT_SUCCESS, BATCH_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: HIT_EVENT_URL,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[batchTriggeredBy]\n            });\n            this.sendHitsToFsQa(batch.hits);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            batch.hits.forEach((hit) => {\n                this._hitsPoolQueue.set(hit.key, hit);\n            });\n            logErrorSprintf(this.config, TRACKING_MANAGER, TRACKING_MANAGER_ERROR, BATCH_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: HIT_EVENT_URL,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[batchTriggeredBy]\n            });\n            const monitoringHttpResponse = new Troubleshooting({\n                label: TroubleshootingLabel.SEND_BATCH_HIT_ROUTE_RESPONSE_ERROR,\n                logLevel: LogLevel.ERROR,\n                visitorId: `${this._flagshipInstanceId}`,\n                traffic: 0,\n                config: this.config,\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseMethod: 'POST',\n                httpResponseUrl: HIT_EVENT_URL,\n                httpResponseCode: error?.statusCode,\n                httpResponseTime: Date.now() - now\n            });\n            this.addTroubleshootingHit(monitoringHttpResponse);\n        }\n        const mergedQueue = new Map([...this._hitsPoolQueue, ...this._activatePoolQueue]);\n        await this.flushAllHits();\n        await this.cacheHit(mergedQueue);\n    }\n}\n","import { BatchTriggeredBy } from '../enum/BatchTriggeredBy';\nimport { HEADER_CONTENT_TYPE, HEADER_APPLICATION_JSON, HIT_EVENT_URL, HitType, HIT_SENT_SUCCESS, FS_CONSENT, SDK_INFO, BASE_API_URL, HEADER_X_API_KEY, HEADER_X_SDK_CLIENT, HEADER_X_SDK_VERSION, URL_ACTIVATE_MODIFICATION, LogLevel, ACTIVATE_HIT, DIRECT_HIT, TRACKING_MANAGER, TRACKING_MANAGER_ERROR, DEFAULT_HIT_CACHE_TIME_MS } from '../enum/index';\nimport { ActivateBatch } from '../hit/ActivateBatch';\nimport { Troubleshooting } from '../hit/Troubleshooting';\nimport { TroubleshootingLabel } from '../types';\nimport { logDebugSprintf, logErrorSprintf, uuidV4 } from '../utils/utils';\nimport { BatchingCachingStrategyAbstract } from './BatchingCachingStrategyAbstract';\nexport class NoBatchingContinuousCachingStrategy extends BatchingCachingStrategyAbstract {\n    cacheHitKeys;\n    constructor(param) {\n        super(param);\n        this.cacheHitKeys = {};\n    }\n    async activateFlag(hit) {\n        const hitKey = `${hit.visitorId}:${uuidV4()}`;\n        hit.key = hitKey;\n        await this.sendActivate({ activateHitsPool: [], currentActivate: hit, batchTriggeredBy: BatchTriggeredBy.ActivateLength });\n    }\n    async addHit(hit) {\n        const hitKey = `${hit.visitorId}:${uuidV4()}`;\n        hit.key = hitKey;\n        if (hit.type === HitType.EVENT && hit.action === FS_CONSENT && hit.label === `${SDK_INFO.name}:false`) {\n            await this.notConsent(hit.visitorId);\n        }\n        await this.sendHit(hit);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addHitInPoolQueue(_hit) {\n        return Promise.resolve();\n    }\n    async sendHit(hit) {\n        const headers = {\n            [HEADER_CONTENT_TYPE]: HEADER_APPLICATION_JSON\n        };\n        const requestBody = hit.toApiKeys();\n        const now = Date.now();\n        try {\n            await this._httpClient.postAsync(HIT_EVENT_URL, {\n                headers,\n                body: requestBody,\n                timeout: this.config.timeout,\n                nextFetchConfig: this.config.nextFetchConfig\n            });\n            logDebugSprintf(this.config, TRACKING_MANAGER, HIT_SENT_SUCCESS, DIRECT_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: HIT_EVENT_URL,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[BatchTriggeredBy.DirectHit]\n            });\n            this.sendHitsToFsQa([hit]);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            if (hit.type !== HitType.EVENT || hit.action !== FS_CONSENT) {\n                this.cacheHitKeys[hit.key] = hit.visitorId;\n            }\n            await this.cacheHit(new Map().set(hit.key, hit));\n            logErrorSprintf(this.config, TRACKING_MANAGER, TRACKING_MANAGER_ERROR, DIRECT_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: HIT_EVENT_URL,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[BatchTriggeredBy.DirectHit]\n            });\n            const monitoringHttpResponse = new Troubleshooting({\n                label: TroubleshootingLabel.SEND_HIT_ROUTE_ERROR,\n                logLevel: LogLevel.ERROR,\n                visitorId: `${this._flagshipInstanceId}`,\n                traffic: 0,\n                config: this.config,\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: HIT_EVENT_URL,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                httpResponseTime: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy.DirectHit\n            });\n            await this.sendTroubleshootingHit(monitoringHttpResponse);\n        }\n    }\n    async notConsent(visitorId) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const cacheHitKeysEntries = Object.entries(this.cacheHitKeys).filter(([_, value]) => value === visitorId);\n        const keys = [];\n        for (const [key] of cacheHitKeysEntries) {\n            keys.push(key);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const hitsKeys = Array.from(this._hitsPoolQueue).filter(([_, item]) => {\n            return (item?.type !== HitType.EVENT || item?.action !== FS_CONSENT) && (item.visitorId === visitorId || item.anonymousId === visitorId);\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const activateKeys = Array.from(this._activatePoolQueue).filter(([_, item]) => {\n            return item.visitorId === visitorId || item.anonymousId === visitorId;\n        });\n        const keysToFlush = [];\n        hitsKeys.forEach(([key]) => {\n            this._hitsPoolQueue.delete(key);\n            keysToFlush.push(key);\n        });\n        activateKeys.forEach(([key]) => {\n            this._activatePoolQueue.delete(key);\n            keysToFlush.push(key);\n        });\n        const mergedKeys = [...keys, ...keysToFlush];\n        if (!mergedKeys.length) {\n            return;\n        }\n        await this.flushHits(mergedKeys);\n        this.cacheHitKeys = {};\n    }\n    async sendActivate({ activateHitsPool, currentActivate, batchTriggeredBy }) {\n        const headers = {\n            [HEADER_X_API_KEY]: this.config.apiKey,\n            [HEADER_X_SDK_CLIENT]: SDK_INFO.name,\n            [HEADER_X_SDK_VERSION]: SDK_INFO.version,\n            [HEADER_CONTENT_TYPE]: HEADER_APPLICATION_JSON\n        };\n        const activateBatch = new ActivateBatch(Array.from(activateHitsPool.filter(item => (Date.now() - item.createdAt) < DEFAULT_HIT_CACHE_TIME_MS)), this.config);\n        if (currentActivate) {\n            activateBatch.hits.push(currentActivate);\n        }\n        const requestBody = activateBatch.toApiKeys();\n        const url = BASE_API_URL + URL_ACTIVATE_MODIFICATION;\n        const now = Date.now();\n        try {\n            await this._httpClient.postAsync(url, {\n                headers,\n                body: requestBody,\n                timeout: this.config.timeout,\n                nextFetchConfig: this.config.nextFetchConfig\n            });\n            logDebugSprintf(this.config, TRACKING_MANAGER, HIT_SENT_SUCCESS, ACTIVATE_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[batchTriggeredBy]\n            });\n            const hitKeysToRemove = activateHitsPool.map(item => item.key);\n            activateBatch.hits.forEach(item => {\n                this.onVisitorExposed(item);\n            });\n            if (hitKeysToRemove.length) {\n                await this.flushHits(hitKeysToRemove);\n            }\n            this.sendHitsToFsQa(activateBatch.hits);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            activateBatch.hits.forEach((item) => {\n                this.cacheHitKeys[item.key] = item.visitorId;\n            });\n            if (currentActivate) {\n                await this.cacheHit(new Map([[currentActivate.key, currentActivate]]));\n            }\n            logErrorSprintf(this.config, TRACKING_MANAGER, TRACKING_MANAGER_ERROR, ACTIVATE_HIT, {\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                duration: Date.now() - now,\n                batchTriggeredBy: BatchTriggeredBy[batchTriggeredBy]\n            });\n            const monitoringHttpResponse = new Troubleshooting({\n                label: TroubleshootingLabel.SEND_ACTIVATE_HIT_ROUTE_ERROR,\n                logLevel: LogLevel.ERROR,\n                visitorId: `${this._flagshipInstanceId}`,\n                traffic: 0,\n                config: this.config,\n                httpRequestBody: requestBody,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseMethod: 'POST',\n                httpResponseUrl: url,\n                httpResponseCode: error?.statusCode,\n                httpResponseTime: Date.now() - now,\n                batchTriggeredBy\n            });\n            await this.sendTroubleshootingHit(monitoringHttpResponse);\n        }\n    }\n}\n","import { ANONYMOUS_ID, CUSTOMER_ENV_ID_API_ACTIVATE, QA_MODE_API_ITEM, QT_API_ITEM, VARIATION_GROUP_ID_API_ITEM_ACTIVATE, VARIATION_ID_API_ITEM, VISITOR_ID_API_ITEM } from '../enum/index';\nimport { HitAbstract } from './HitAbstract';\nexport const ERROR_MESSAGE = 'variationGroupId and variationId are required';\nexport class Activate extends HitAbstract {\n    _variationGroupId;\n    _variationId;\n    _flagKey;\n    _flagValue;\n    _flagDefaultValue;\n    _flagMetadata;\n    _visitorContext;\n    constructor(param) {\n        super({\n            type: 'ACTIVATE',\n            userIp: param.userIp,\n            screenResolution: param.screenResolution,\n            locale: param.locale,\n            sessionNumber: param.sessionNumber,\n            visitorId: param.visitorId,\n            anonymousId: param.anonymousId,\n            qaMode: param.qaMode\n        });\n        const { variationGroupId, variationId, flagKey, flagValue, flagDefaultValue, flagMetadata, visitorContext } = param;\n        this.variationGroupId = variationGroupId;\n        this.variationId = variationId;\n        this.flagKey = flagKey;\n        this.flagValue = flagValue;\n        this.flagDefaultValue = flagDefaultValue;\n        this.flagMetadata = flagMetadata;\n        this.visitorContext = visitorContext;\n    }\n    get variationGroupId() {\n        return this._variationGroupId;\n    }\n    set variationGroupId(v) {\n        this._variationGroupId = v;\n    }\n    get variationId() {\n        return this._variationId;\n    }\n    set variationId(v) {\n        this._variationId = v;\n    }\n    get flagKey() {\n        return this._flagKey;\n    }\n    set flagKey(v) {\n        this._flagKey = v;\n    }\n    get flagValue() {\n        return this._flagValue;\n    }\n    set flagValue(v) {\n        this._flagValue = v;\n    }\n    get flagDefaultValue() {\n        return this._flagDefaultValue;\n    }\n    set flagDefaultValue(v) {\n        this._flagDefaultValue = v;\n    }\n    get flagMetadata() {\n        return this._flagMetadata;\n    }\n    set flagMetadata(v) {\n        this._flagMetadata = v;\n    }\n    get visitorContext() {\n        return this._visitorContext;\n    }\n    set visitorContext(v) {\n        this._visitorContext = v;\n    }\n    isReady(checkParent = true) {\n        return !!((!checkParent || super.isReady()) && this.variationGroupId && this.variationId);\n    }\n    toApiKeys() {\n        const apiKeys = {\n            [VISITOR_ID_API_ITEM]: this.anonymousId || this.visitorId,\n            [VARIATION_ID_API_ITEM]: this.variationId,\n            [VARIATION_GROUP_ID_API_ITEM_ACTIVATE]: this.variationGroupId,\n            [CUSTOMER_ENV_ID_API_ACTIVATE]: this.config.envId,\n            [ANONYMOUS_ID]: null,\n            [QT_API_ITEM]: Date.now() - this.createdAt\n        };\n        if (this.visitorId && this.anonymousId) {\n            apiKeys[VISITOR_ID_API_ITEM] = this.visitorId;\n            apiKeys[ANONYMOUS_ID] = this.anonymousId;\n        }\n        if (this.qaMode) {\n            apiKeys[QA_MODE_API_ITEM] = this.qaMode;\n        }\n        return apiKeys;\n    }\n    toObject() {\n        return {\n            ...super.toObject(),\n            variationGroupId: this.variationGroupId,\n            variationId: this.variationId\n        };\n    }\n    getErrorMessage() {\n        return ERROR_MESSAGE;\n    }\n}\n","import { BATCH_LOOP_STARTED, BATCH_LOOP_STOPPED, DEFAULT_HIT_CACHE_TIME_MS, HitType, HIT_CACHE_ERROR, HIT_CACHE_LOADED, PROCESS_CACHE, PROCESS_LOOKUP_HIT, TRACKING_MANAGER } from '../enum/index';\nimport { CacheStrategy } from '../enum/CacheStrategy';\nimport { Transaction, Event, Item, Page, Screen } from '../hit/index';\nimport { Segment } from '../hit/Segment';\nimport { logDebugSprintf, logError, logErrorSprintf, logInfo, logInfoSprintf } from '../utils/utils';\nimport { BatchingContinuousCachingStrategy } from './BatchingContinuousCachingStrategy';\nimport { BatchingPeriodicCachingStrategy } from './BatchingPeriodicCachingStrategy';\nimport { NoBatchingContinuousCachingStrategy } from './NoBatchingContinuousCachingStrategy';\nimport { Activate } from '../hit/Activate';\nimport { BatchTriggeredBy } from '../enum/BatchTriggeredBy';\nexport const LOOKUP_HITS_JSON_ERROR = 'JSON DATA must be an array of object';\nexport const LOOKUP_HITS_JSON_OBJECT_ERROR = 'JSON DATA must fit the type HitCacheDTO';\nexport class TrackingManagerAbstract {\n    _httpClient;\n    _config;\n    _hitsPoolQueue;\n    _activatePoolQueue;\n    _troubleshootingQueue;\n    _analyticHitQueue;\n    strategy;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _intervalID;\n    _isPooling = false;\n    _flagshipInstanceId;\n    get flagshipInstanceId() {\n        return this._flagshipInstanceId;\n    }\n    get troubleshootingData() {\n        return this.strategy.troubleshootingData;\n    }\n    set troubleshootingData(v) {\n        this.strategy.troubleshootingData = v;\n    }\n    constructor(httpClient, config, flagshipInstanceId) {\n        this._flagshipInstanceId = flagshipInstanceId;\n        this._hitsPoolQueue = new Map();\n        this._activatePoolQueue = new Map();\n        this._troubleshootingQueue = new Map();\n        this._analyticHitQueue = new Map();\n        this._httpClient = httpClient;\n        this._config = config;\n        this.strategy = this.initStrategy();\n        this.lookupHits();\n    }\n    initStrategy() {\n        let strategy;\n        const argument = {\n            config: this.config,\n            httpClient: this.httpClient,\n            hitsPoolQueue: this._hitsPoolQueue,\n            activatePoolQueue: this._activatePoolQueue,\n            troubleshootingQueue: this._troubleshootingQueue,\n            analyticHitQueue: this._analyticHitQueue,\n            flagshipInstanceId: this.flagshipInstanceId\n        };\n        switch (this.config.trackingManagerConfig?.cacheStrategy) {\n            case CacheStrategy.PERIODIC_CACHING:\n                strategy = new BatchingPeriodicCachingStrategy(argument);\n                break;\n            case CacheStrategy.CONTINUOUS_CACHING:\n                strategy = new BatchingContinuousCachingStrategy(argument);\n                break;\n            default:\n                strategy = new NoBatchingContinuousCachingStrategy(argument);\n                break;\n        }\n        return strategy;\n    }\n    get httpClient() {\n        return this._httpClient;\n    }\n    get config() {\n        return this._config;\n    }\n    async sendTroubleshootingHit(hit) {\n        await this.strategy.sendTroubleshootingHit(hit);\n    }\n    startBatchingLoop() {\n        const timeInterval = (this.config.trackingManagerConfig?.batchIntervals) * 1000;\n        logInfoSprintf(this.config, TRACKING_MANAGER, BATCH_LOOP_STARTED, timeInterval);\n        this._intervalID = setInterval(() => {\n            this.batchingLoop();\n        }, timeInterval);\n    }\n    stopBatchingLoop() {\n        clearInterval(this._intervalID);\n        this._isPooling = false;\n        logInfo(this.config, BATCH_LOOP_STOPPED, TRACKING_MANAGER);\n    }\n    async batchingLoop() {\n        if (this._isPooling) {\n            return;\n        }\n        this._isPooling = true;\n        await this.strategy.sendBatch(BatchTriggeredBy.Timer);\n        await this.strategy.sendTroubleshootingQueue();\n        await this.strategy.sendUsageHitQueue();\n        this._isPooling = false;\n    }\n    checkLookupHitData(item) {\n        if (item?.version === 1 && item?.data?.type && item?.data?.content) {\n            return true;\n        }\n        logError(this.config, LOOKUP_HITS_JSON_OBJECT_ERROR, PROCESS_LOOKUP_HIT);\n        return false;\n    }\n    async lookupHits() {\n        try {\n            const hitCacheImplementation = this.config.hitCacheImplementation;\n            if (this.config.disableCache || !hitCacheImplementation || typeof hitCacheImplementation.lookupHits !== 'function') {\n                return;\n            }\n            const hitsCache = await hitCacheImplementation.lookupHits();\n            logDebugSprintf(this.config, PROCESS_CACHE, HIT_CACHE_LOADED, hitsCache);\n            if (!hitsCache || !Object.keys(hitsCache).length) {\n                return;\n            }\n            const checkHitTime = (time) => (((Date.now() - time)) <= DEFAULT_HIT_CACHE_TIME_MS);\n            const wrongHitKeys = [];\n            Object.entries(hitsCache).forEach(([key, item]) => {\n                if (!this.checkLookupHitData(item) || !checkHitTime(item.data.time)) {\n                    wrongHitKeys.push(key);\n                    return;\n                }\n                let hit;\n                switch (item.data.type) {\n                    case HitType.EVENT:\n                        hit = new Event(item.data.content);\n                        break;\n                    case HitType.ITEM:\n                        hit = new Item(item.data.content);\n                        break;\n                    case HitType.PAGE:\n                        hit = new Page(item.data.content);\n                        break;\n                    case HitType.SCREEN:\n                        hit = new Screen(item.data.content);\n                        break;\n                    case 'SEGMENT':\n                        hit = new Segment(item.data.content);\n                        break;\n                    case 'ACTIVATE':\n                        hit = new Activate(item.data.content);\n                        hit.key = key;\n                        hit.createdAt = item.data.content.createdAt;\n                        hit.config = this.config;\n                        this._activatePoolQueue.set(key, hit);\n                        return;\n                    case HitType.TRANSACTION:\n                        hit = new Transaction(item.data.content);\n                        break;\n                    default:\n                        return;\n                }\n                hit.key = key;\n                hit.createdAt = item.data.content.createdAt;\n                hit.config = this.config;\n                this._hitsPoolQueue.set(key, hit);\n            });\n            if (wrongHitKeys.length) {\n                await this.strategy.flushHits(wrongHitKeys);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logErrorSprintf(this.config, PROCESS_CACHE, HIT_CACHE_ERROR, 'lookupHits', error.message || error);\n        }\n    }\n    async sendUsageHit(hit) {\n        await this.strategy.sendUsageHit(hit);\n    }\n    async addTroubleshootingHit(hit) {\n        await this.strategy.addTroubleshootingHit(hit);\n    }\n}\n","import { BatchTriggeredBy } from '../enum/BatchTriggeredBy';\nimport { TrackingManagerAbstract } from './TrackingManagerAbstract';\nexport class TrackingManager extends TrackingManagerAbstract {\n    async activateFlag(hit) {\n        await this.strategy.activateFlag(hit);\n    }\n    async addHit(hit) {\n        await this.strategy.addHit(hit);\n    }\n    async sendBatch() {\n        await this.strategy.sendBatch(BatchTriggeredBy.Flush);\n    }\n}\n","/* eslint-disable no-console */\nimport { FLAGSHIP_SDK, LogLevel } from '../enum/index';\nexport class FlagshipLogManager {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    consoleError;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    consoleWarn;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    consoleDebug;\n    constructor() {\n        this.consoleError = console.error ?? console.log;\n        this.consoleWarn = console.warn ?? console.log;\n        this.consoleDebug = console.debug ?? console.log;\n    }\n    emergency(message, tag) {\n        this.consoleError(this.formatOutput(LogLevel.EMERGENCY, message, tag));\n    }\n    alert(message, tag) {\n        this.consoleError(this.formatOutput(LogLevel.ALERT, message, tag));\n    }\n    critical(message, tag) {\n        this.consoleError(this.formatOutput(LogLevel.CRITICAL, message, tag));\n    }\n    error(message, tag) {\n        this.consoleError(this.formatOutput(LogLevel.ERROR, message, tag));\n    }\n    warning(message, tag) {\n        this.consoleWarn(this.formatOutput(LogLevel.WARNING, message, tag));\n    }\n    notice(message, tag) {\n        this.log(LogLevel.NOTICE, message, tag);\n    }\n    info(message, tag) {\n        console.info(this.formatOutput(LogLevel.INFO, message, tag));\n    }\n    debug(message, tag) {\n        this.consoleDebug(this.formatOutput(LogLevel.DEBUG, message, tag));\n    }\n    log(level, message, tag) {\n        console.log(this.formatOutput(level, message, tag));\n    }\n    formatOutput(level, message, tag) {\n        const now = new Date(Date.now());\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const getTwoDigit = (value) => {\n            return value.toString().length === 1 ? `0${value}` : value;\n        };\n        return `[${getTwoDigit(now.getFullYear())}-${getTwoDigit(now.getMonth() + 1)}-${getTwoDigit(now.getDate())} ${getTwoDigit(now.getHours())}:${getTwoDigit(now.getMinutes())}:${getTwoDigit(now.getSeconds())}.${getTwoDigit(now.getMilliseconds())}] [${FLAGSHIP_SDK}] [${LogLevel[level]}] [${tag}] : ${message}`;\n    }\n}\n","import { Diagnostic } from './Diagnostic';\nexport class UsageHit extends Diagnostic {\n    constructor(param) {\n        super({ ...param, type: 'USAGE' });\n    }\n}\n","export const FS_HIT_PREFIX = 'FS_DEFAULT_HIT_CACHE';\nexport class DefaultHitCache {\n    cacheHit(hits) {\n        const localDatabaseJson = localStorage.getItem(FS_HIT_PREFIX) || '{}';\n        const localDatabase = JSON.parse(localDatabaseJson);\n        const newLocalDatabase = {\n            ...localDatabase,\n            ...hits\n        };\n        localStorage.setItem(FS_HIT_PREFIX, JSON.stringify(newLocalDatabase));\n        return Promise.resolve();\n    }\n    lookupHits() {\n        const localDatabaseJson = localStorage.getItem(FS_HIT_PREFIX) || '{}';\n        const localDatabase = JSON.parse(localDatabaseJson);\n        return Promise.resolve(localDatabase);\n    }\n    flushHits(hitKeys) {\n        const localDatabaseJson = localStorage.getItem(FS_HIT_PREFIX) || '{}';\n        const localDatabase = JSON.parse(localDatabaseJson);\n        hitKeys.forEach(key => {\n            delete localDatabase[key];\n        });\n        localStorage.setItem(FS_HIT_PREFIX, JSON.stringify(localDatabase));\n        return Promise.resolve();\n    }\n    flushAllHits() {\n        localStorage.removeItem(FS_HIT_PREFIX);\n        return Promise.resolve();\n    }\n}\n","export const VISITOR_PREFIX = 'FS_VISITOR_CACHE_';\nexport class DefaultVisitorCache {\n    cacheVisitor(visitorId, data) {\n        localStorage.setItem(VISITOR_PREFIX + visitorId, JSON.stringify(data));\n        return Promise.resolve();\n    }\n    lookupVisitor(visitorId) {\n        const data = localStorage.getItem(VISITOR_PREFIX + visitorId);\n        return Promise.resolve(data ? JSON.parse(data) : null);\n    }\n    flushVisitor(visitorId) {\n        localStorage.removeItem(VISITOR_PREFIX + visitorId);\n        return Promise.resolve();\n    }\n}\n","import { Event, EventCategory } from '../hit/index';\nimport { TroubleshootingLabel, VisitorCacheStatus } from '../types';\nimport { DecisionMode } from '../config/index';\nimport { logDebugSprintf, logError, logErrorSprintf, logInfoSprintf, sprintf } from '../utils/utils';\nimport { VISITOR_CACHE_ERROR, CONSENT_CHANGED, FS_CONSENT, LOOKUP_VISITOR_JSON_OBJECT_ERROR, PROCESS_CACHE, PROCESS_SET_CONSENT, SDK_APP, SDK_INFO, TRACKER_MANAGER_MISSING_ERROR, VISITOR_CACHE_VERSION, VISITOR_CACHE_FLUSHED, VISITOR_CACHE_LOADED, VISITOR_CACHE_SAVED, LogLevel, ANALYTIC_HIT_ALLOCATION } from '../enum/index';\nimport { Troubleshooting } from '../hit/Troubleshooting';\nimport { UsageHit } from '../hit/UsageHit';\nimport { DefaultHitCache } from '../cache/DefaultHitCache';\nimport { DefaultVisitorCache } from '../cache/DefaultVisitorCache';\nexport const LOOKUP_HITS_JSON_ERROR = 'JSON DATA must be an array of object';\nexport const LOOKUP_HITS_JSON_OBJECT_ERROR = 'JSON DATA must fit the type HitCacheDTO';\nexport const VISITOR_ID_MISMATCH_ERROR = 'Visitor ID mismatch: {0} vs {1}';\nexport class StrategyAbstract {\n    visitor;\n    get configManager() {\n        return this.visitor.configManager;\n    }\n    get trackingManager() {\n        return this.configManager.trackingManager;\n    }\n    get decisionManager() {\n        return this.configManager.decisionManager;\n    }\n    get config() {\n        return this.visitor.config;\n    }\n    _murmurHash;\n    constructor(param) {\n        const { visitor, murmurHash } = param;\n        this.visitor = visitor;\n        this._murmurHash = murmurHash;\n    }\n    updateCampaigns(campaigns) {\n        try {\n            this.visitor.campaigns = campaigns;\n            this.visitor.flagsData = this.decisionManager.getModifications(campaigns);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logError(this.config, error.message || error, 'updateCampaigns');\n        }\n    }\n    hasTrackingManager(process) {\n        const check = this.trackingManager;\n        if (!check) {\n            logError(this.config, sprintf(TRACKER_MANAGER_MISSING_ERROR), process);\n        }\n        return !!check;\n    }\n    setConsent(hasConsented) {\n        const method = 'setConsent';\n        this.visitor.hasConsented = hasConsented;\n        if (!hasConsented) {\n            this.flushVisitor();\n        }\n        if (!this.hasTrackingManager(method)) {\n            return;\n        }\n        const consentHit = new Event({\n            visitorId: this.visitor.visitorId,\n            anonymousId: this.visitor.anonymousId,\n            label: `${SDK_INFO.name}:${this.visitor.hasConsented}`,\n            action: FS_CONSENT,\n            category: EventCategory.USER_ENGAGEMENT\n        });\n        consentHit.qaMode = this.config.isQAModeEnabled;\n        consentHit.ds = SDK_APP;\n        consentHit.config = this.config;\n        const hitTroubleshooting = new Troubleshooting({\n            label: TroubleshootingLabel.VISITOR_SEND_HIT,\n            logLevel: LogLevel.INFO,\n            traffic: this.visitor.traffic || 0,\n            visitorId: this.visitor.visitorId,\n            visitorSessionId: this.visitor.instanceId,\n            flagshipInstanceId: this.visitor.sdkInitialData?.instanceId,\n            anonymousId: this.visitor.anonymousId,\n            config: this.config,\n            hitContent: consentHit.toApiKeys()\n        });\n        this.trackingManager.addHit(consentHit);\n        logDebugSprintf(this.config, PROCESS_SET_CONSENT, CONSENT_CHANGED, this.visitor.visitorId, hasConsented);\n        if (this.decisionManager.troubleshooting) {\n            this.trackingManager.sendTroubleshootingHit(hitTroubleshooting);\n            return;\n        }\n        this.visitor.consentHitTroubleshooting = hitTroubleshooting;\n    }\n    checKLookupVisitorDataV1(item) {\n        if (!item || !item.data || !item.data.visitorId) {\n            return false;\n        }\n        const campaigns = item.data.campaigns;\n        if (!campaigns) {\n            return true;\n        }\n        if (!Array.isArray(campaigns)) {\n            return false;\n        }\n        if ((this.visitor.visitorCacheStatus === VisitorCacheStatus.VISITOR_ID_CACHE || this.visitor.visitorCacheStatus === VisitorCacheStatus.VISITOR_ID_CACHE_NOT_ANONYMOUS_ID_CACHE) && item.data.visitorId !== this.visitor.visitorId) {\n            logInfoSprintf(this.config, PROCESS_CACHE, VISITOR_ID_MISMATCH_ERROR, item.data.visitorId, this.visitor.visitorId);\n            return false;\n        }\n        if (this.visitor.visitorCacheStatus === VisitorCacheStatus.ANONYMOUS_ID_CACHE && item.data.visitorId !== this.visitor.anonymousId) {\n            logInfoSprintf(this.config, PROCESS_CACHE, VISITOR_ID_MISMATCH_ERROR, item.data.visitorId, this.visitor.anonymousId);\n            return false;\n        }\n        return campaigns.every(x => x.campaignId && x.type && x.variationGroupId && x.variationId);\n    }\n    checKLookupVisitorData(item) {\n        if (item.version === 1) {\n            return this.checKLookupVisitorDataV1(item);\n        }\n        return false;\n    }\n    async lookupVisitor() {\n        try {\n            const visitorCacheInstance = this.config.visitorCacheImplementation;\n            if (this.config.disableCache || !visitorCacheInstance || !visitorCacheInstance.lookupVisitor || typeof visitorCacheInstance.lookupVisitor !== 'function') {\n                return;\n            }\n            this.visitor.visitorCacheStatus = VisitorCacheStatus.NONE;\n            let visitorCache = await visitorCacheInstance.lookupVisitor(this.visitor.visitorId);\n            if (visitorCache) {\n                this.visitor.visitorCacheStatus = VisitorCacheStatus.VISITOR_ID_CACHE;\n            }\n            if (this.visitor.anonymousId) {\n                const anonymousVisitorCache = await visitorCacheInstance.lookupVisitor(this.visitor.anonymousId);\n                if (anonymousVisitorCache && !visitorCache) {\n                    visitorCache = anonymousVisitorCache;\n                    this.visitor.visitorCacheStatus = VisitorCacheStatus.ANONYMOUS_ID_CACHE;\n                }\n                else if (!anonymousVisitorCache && visitorCache) {\n                    this.visitor.visitorCacheStatus = VisitorCacheStatus.VISITOR_ID_CACHE_NOT_ANONYMOUS_ID_CACHE;\n                }\n            }\n            logDebugSprintf(this.config, PROCESS_CACHE, VISITOR_CACHE_LOADED, this.visitor.visitorId, visitorCache);\n            if (!visitorCache) {\n                return;\n            }\n            if (!this.checKLookupVisitorData(visitorCache)) {\n                logErrorSprintf(this.config, PROCESS_CACHE, LOOKUP_VISITOR_JSON_OBJECT_ERROR, VISITOR_CACHE_VERSION, this.visitor.visitorId);\n                return;\n            }\n            this.visitor.visitorCache = visitorCache;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logErrorSprintf(this.config, PROCESS_CACHE, VISITOR_CACHE_ERROR, this.visitor.visitorId, 'lookupVisitor', error.message || error);\n        }\n    }\n    async cacheVisitor() {\n        try {\n            const visitorCacheInstance = this.config.visitorCacheImplementation;\n            if (this.config.disableCache || !visitorCacheInstance || typeof visitorCacheInstance.cacheVisitor !== 'function') {\n                return;\n            }\n            const assignmentsHistory = {};\n            const visitorCacheDTO = {\n                version: VISITOR_CACHE_VERSION,\n                data: {\n                    visitorId: this.visitor.visitorId,\n                    anonymousId: this.visitor.anonymousId,\n                    consent: this.visitor.hasConsented,\n                    context: this.visitor.context,\n                    campaigns: this.visitor.campaigns.map(campaign => {\n                        assignmentsHistory[campaign.variationGroupId] = campaign.variation.id;\n                        return {\n                            campaignId: campaign.id,\n                            slug: campaign.slug,\n                            variationGroupId: campaign.variationGroupId,\n                            variationId: campaign.variation.id,\n                            isReference: campaign.variation.reference,\n                            type: campaign.variation.modifications.type,\n                            activated: false,\n                            flags: campaign.variation.modifications.value\n                        };\n                    })\n                }\n            };\n            visitorCacheDTO.data.assignmentsHistory = { ...this.visitor.visitorCache?.data?.assignmentsHistory, ...assignmentsHistory };\n            await visitorCacheInstance.cacheVisitor(this.visitor.visitorId, visitorCacheDTO);\n            const visitorCacheStatus = this.visitor.visitorCacheStatus;\n            if (!visitorCacheStatus || visitorCacheStatus === VisitorCacheStatus.NONE || visitorCacheStatus === VisitorCacheStatus.VISITOR_ID_CACHE_NOT_ANONYMOUS_ID_CACHE) {\n                if (this.visitor.anonymousId) {\n                    const anonymousVisitorCacheDTO = {\n                        ...visitorCacheDTO,\n                        data: {\n                            ...visitorCacheDTO.data,\n                            visitorId: this.visitor.anonymousId,\n                            anonymousId: null\n                        }\n                    };\n                    await visitorCacheInstance.cacheVisitor(this.visitor.anonymousId, anonymousVisitorCacheDTO);\n                }\n            }\n            logDebugSprintf(this.config, PROCESS_CACHE, VISITOR_CACHE_SAVED, this.visitor.visitorId, visitorCacheDTO);\n            this.visitor.visitorCache = visitorCacheDTO;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logErrorSprintf(this.config, PROCESS_CACHE, VISITOR_CACHE_ERROR, this.visitor.visitorId, 'cacheVisitor', error.message || error);\n        }\n    }\n    async flushVisitor() {\n        try {\n            const visitorCacheInstance = this.config.visitorCacheImplementation;\n            if (this.config.disableCache || !visitorCacheInstance || typeof visitorCacheInstance.flushVisitor !== 'function') {\n                return;\n            }\n            await visitorCacheInstance.flushVisitor(this.visitor.visitorId);\n            logDebugSprintf(this.config, PROCESS_CACHE, VISITOR_CACHE_FLUSHED, this.visitor.visitorId);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logErrorSprintf(this.config, PROCESS_CACHE, VISITOR_CACHE_ERROR, this.visitor.visitorId, 'flushVisitor', error.message || error);\n        }\n    }\n    async sendTroubleshootingHit(hit) {\n        await this.trackingManager.sendTroubleshootingHit(hit);\n    }\n    getCurrentDateTime() {\n        return new Date();\n    }\n    getSdkConfigDecisionMode() {\n        return this.config.decisionMode === DecisionMode.DECISION_API ? 'DECISION_API' : this.config.decisionMode;\n    }\n    async sendSdkConfigAnalyticHit() {\n        if (this.config.disableDeveloperUsageTracking) {\n            return;\n        }\n        const uniqueId = this.visitor.visitorId + this.getCurrentDateTime().toDateString();\n        const hash = this._murmurHash.murmurHash3Int32(uniqueId);\n        const traffic = hash % 1000;\n        if (traffic > ANALYTIC_HIT_ALLOCATION) {\n            return;\n        }\n        const hitCacheImplementation = this.config.hitCacheImplementation;\n        const visitorCacheImplementation = this.config.visitorCacheImplementation;\n        const sdkConfigUsingCustomHitCache = hitCacheImplementation && !(hitCacheImplementation instanceof DefaultHitCache);\n        const sdkConfigUsingCustomVisitorCache = visitorCacheImplementation && !(visitorCacheImplementation instanceof DefaultVisitorCache);\n        const analyticData = new UsageHit({\n            label: TroubleshootingLabel.SDK_CONFIG,\n            logLevel: LogLevel.INFO,\n            visitorId: this.visitor.sdkInitialData?.instanceId,\n            flagshipInstanceId: this.visitor.sdkInitialData?.instanceId,\n            config: this.config,\n            sdkStatus: this.visitor.getSdkStatus(),\n            lastBucketingTimestamp: this.configManager.decisionManager.lastBucketingTimestamp,\n            lastInitializationTimestamp: this.visitor.sdkInitialData?.lastInitializationTimestamp,\n            sdkConfigMode: this.getSdkConfigDecisionMode(),\n            sdkConfigLogLevel: this.config.logLevel,\n            sdkConfigTimeout: this.config.timeout,\n            sdkConfigPollingInterval: this.config.pollingInterval,\n            sdkConfigTrackingManagerStrategy: this.config.trackingManagerConfig?.cacheStrategy,\n            sdkConfigTrackingManagerBatchIntervals: this.config.trackingManagerConfig?.batchIntervals,\n            sdkConfigTrackingManagerPoolMaxSize: this.config.trackingManagerConfig?.poolMaxSize,\n            sdkConfigFetchNow: this.config.fetchNow,\n            sdkConfigReuseVisitorIds: this.config.reuseVisitorIds,\n            sdkConfigInitialBucketing: this.config.initialBucketing,\n            sdkConfigDecisionApiUrl: this.config.decisionApiUrl,\n            sdkConfigHitDeduplicationTime: this.config.hitDeduplicationTime,\n            sdkConfigUsingOnVisitorExposed: !!this.config.onVisitorExposed,\n            sdkConfigUsingCustomHitCache: !!sdkConfigUsingCustomHitCache,\n            sdkConfigUsingCustomVisitorCache: !!sdkConfigUsingCustomVisitorCache,\n            sdkConfigFetchThirdPartyData: this.config.fetchThirdPartyData,\n            sdkConfigFetchFlagsBufferingTime: this.config.fetchFlagsBufferingTime,\n            sdkConfigDisableDeveloperUsageTracking: this.config.disableDeveloperUsageTracking,\n            sdkConfigNextFetchConfig: this.config.nextFetchConfig,\n            sdkConfigDisableCache: this.config.disableCache\n        });\n        await this.trackingManager.sendUsageHit(analyticData);\n    }\n    sendFetchFlagsTroubleshooting({ isFromCache, campaigns, now }) {\n        const assignmentHistory = {};\n        this.visitor.flagsData.forEach(item => {\n            assignmentHistory[item.variationGroupId] = item.variationId;\n        });\n        const uniqueId = this.visitor.visitorId + this.decisionManager.troubleshooting?.endDate.toUTCString();\n        const hash = this._murmurHash.murmurHash3Int32(uniqueId);\n        const traffic = hash % 100;\n        this.visitor.traffic = traffic;\n        const hitCacheImplementation = this.config.hitCacheImplementation;\n        const visitorCacheImplementation = this.config.visitorCacheImplementation;\n        const sdkConfigUsingCustomHitCache = hitCacheImplementation && !(hitCacheImplementation instanceof DefaultHitCache);\n        const sdkConfigUsingCustomVisitorCache = visitorCacheImplementation && !(visitorCacheImplementation instanceof DefaultVisitorCache);\n        const fetchFlagTroubleshooting = new Troubleshooting({\n            label: TroubleshootingLabel.VISITOR_FETCH_CAMPAIGNS,\n            logLevel: LogLevel.INFO,\n            visitorId: this.visitor.visitorId,\n            anonymousId: this.visitor.anonymousId,\n            visitorSessionId: this.visitor.instanceId,\n            flagshipInstanceId: this.visitor.sdkInitialData?.instanceId,\n            traffic,\n            config: this.config,\n            sdkStatus: this.visitor.getSdkStatus(),\n            visitorContext: this.visitor.context,\n            visitorCampaigns: campaigns,\n            visitorCampaignFromCache: isFromCache ? campaigns : undefined,\n            visitorConsent: this.visitor.hasConsented,\n            visitorIsAuthenticated: !!this.visitor.anonymousId,\n            visitorFlags: this.visitor.flagsData,\n            visitorAssignmentHistory: assignmentHistory,\n            visitorInitialCampaigns: this.visitor.sdkInitialData?.initialCampaigns,\n            visitorInitialFlagsData: this.visitor.sdkInitialData?.initialFlagsData,\n            lastBucketingTimestamp: this.configManager.decisionManager.lastBucketingTimestamp,\n            lastInitializationTimestamp: this.visitor.sdkInitialData?.lastInitializationTimestamp,\n            httpResponseTime: Date.now() - now,\n            sdkConfigLogLevel: this.config.logLevel,\n            sdkConfigMode: this.getSdkConfigDecisionMode(),\n            sdkConfigTimeout: this.config.timeout,\n            sdkConfigPollingInterval: this.config.pollingInterval,\n            sdkConfigTrackingManagerStrategy: this.config.trackingManagerConfig?.cacheStrategy,\n            sdkConfigTrackingManagerBatchIntervals: this.config.trackingManagerConfig?.batchIntervals,\n            sdkConfigTrackingManagerPoolMaxSize: this.config.trackingManagerConfig?.poolMaxSize,\n            sdkConfigFetchNow: this.config.fetchNow,\n            sdkConfigReuseVisitorIds: this.config.reuseVisitorIds,\n            sdkConfigInitialBucketing: this.config.initialBucketing,\n            sdkConfigDecisionApiUrl: this.config.decisionApiUrl,\n            sdkConfigHitDeduplicationTime: this.config.hitDeduplicationTime,\n            sdkConfigUsingOnVisitorExposed: !!this.config.onVisitorExposed,\n            sdkConfigUsingCustomHitCache: !!sdkConfigUsingCustomHitCache,\n            sdkConfigUsingCustomVisitorCache: !!sdkConfigUsingCustomVisitorCache,\n            sdkConfigFetchThirdPartyData: this.config.fetchThirdPartyData,\n            sdkConfigFetchFlagsBufferingTime: this.config.fetchFlagsBufferingTime,\n            sdkConfigDisableDeveloperUsageTracking: this.config.disableDeveloperUsageTracking,\n            sdkConfigNextFetchConfig: this.config.nextFetchConfig,\n            sdkConfigDisableCache: this.config.disableCache\n        });\n        this.sendTroubleshootingHit(fetchFlagTroubleshooting);\n    }\n    sendConsentHitTroubleshooting() {\n        const consentHitTroubleshooting = this.visitor.consentHitTroubleshooting;\n        if (!consentHitTroubleshooting) {\n            return;\n        }\n        consentHitTroubleshooting.traffic = this.visitor.traffic;\n        this.trackingManager.sendTroubleshootingHit(consentHitTroubleshooting);\n        this.visitor.consentHitTroubleshooting = undefined;\n    }\n    sendSegmentHitTroubleshooting() {\n        const segmentHitTroubleshooting = this.visitor.segmentHitTroubleshooting;\n        if (!segmentHitTroubleshooting) {\n            return;\n        }\n        segmentHitTroubleshooting.traffic = this.visitor.traffic;\n        this.trackingManager.sendTroubleshootingHit(segmentHitTroubleshooting);\n        this.visitor.segmentHitTroubleshooting = undefined;\n    }\n}\n","/**\n     * Current device locale\n     */\nexport const DEVICE_LOCALE = 'sdk_deviceLanguage';\n/**\n  * Current device type  tablet, pc, server, iot, other\n\n  */\nexport const DEVICE_TYPE = 'sdk_deviceType';\n/**\n  * Current device model\n  */\nexport const DEVICE_MODEL = 'sdk_deviceModel';\n/**\n  * Current visitor city\n\n  */\nexport const LOCATION_CITY = 'sdk_city';\n/**\n  * Current visitor region\n\n  */\nexport const LOCATION_REGION = 'sdk_region';\n/**\n  * Current visitor country\n\n  */\nexport const LOCATION_COUNTRY = 'sdk_country';\n/**\n  * Current visitor latitude\n\n  */\nexport const LOCATION_LAT = 'sdk_lat';\n/**\n  * Current visitor longitude\n\n  */\nexport const LOCATION_LONG = 'sdk_long';\n/**\n  * Device public ip\n\n  */\nexport const IP = 'sdk_ip';\n/**\n  * OS name\n\n  */\nexport const OS_NAME = 'sdk_osName';\n/**\n  * OS version name\n\n  */\nexport const OS_VERSION_NAME = 'sdk_osVersionName';\n/**\n  * OS version code\n\n  */\nexport const OS_VERSION_CODE = 'sdk_osVersionCode';\n/**\n  * Carrier operator\n  */\nexport const CARRIER_NAME = 'sdk_carrierName';\n/**\n  * Internet connection type : 4G, 5G, Fiber\n\n  */\nexport const INTERNET_CONNECTION = 'sdk_internetConnection';\n/**\n  * Customer app version name\n\n  */\nexport const APP_VERSION_NAME = 'sdk_versionName';\n/**\n  * Customer app version code\n\n  */\nexport const APP_VERSION_CODE = 'sdk_versionCode';\n/**\n  * Current customer app interface name\n\n  */\nexport const INTERFACE_NAME = 'sdk_interfaceName';\n/**\n  * Flagship SDK client name\n\n  */\nexport const FLAGSHIP_CLIENT = 'fs_client';\n/**\n  * Flagship SDK version name\n\n  */\nexport const FLAGSHIP_VERSION = 'fs_version';\n/**\n  * Current visitor id\n\n  */\nexport const FLAGSHIP_VISITOR = 'fs_users';\nexport const FLAGSHIP_CONTEXT = {\n    [DEVICE_LOCALE]: 'string',\n    [DEVICE_TYPE]: 'string',\n    [DEVICE_MODEL]: 'string',\n    [LOCATION_CITY]: 'string',\n    [LOCATION_REGION]: 'string',\n    [LOCATION_COUNTRY]: 'string',\n    [LOCATION_LAT]: 'number',\n    [LOCATION_LONG]: 'number',\n    [IP]: 'string',\n    [OS_NAME]: 'string',\n    [OS_VERSION_NAME]: 'string',\n    [OS_VERSION_CODE]: 'string',\n    [CARRIER_NAME]: 'string',\n    [INTERNET_CONNECTION]: 'string',\n    [APP_VERSION_NAME]: 'string',\n    [APP_VERSION_CODE]: 'string',\n    [INTERFACE_NAME]: 'string',\n    [FLAGSHIP_CLIENT]: 'string',\n    [FLAGSHIP_VERSION]: 'string',\n    [FLAGSHIP_VISITOR]: 'string'\n};\n","export class FSFlagMetadata {\n    campaignId;\n    campaignName;\n    variationGroupId;\n    variationGroupName;\n    variationId;\n    variationName;\n    isReference;\n    campaignType;\n    slug;\n    constructor(flagMetadata) {\n        const { campaignId, variationGroupId, variationId, isReference, campaignType, slug, variationGroupName, variationName, campaignName } = flagMetadata;\n        this.campaignId = campaignId;\n        this.variationGroupId = variationGroupId;\n        this.variationId = variationId;\n        this.isReference = isReference;\n        this.campaignType = campaignType;\n        this.campaignName = campaignName;\n        this.variationGroupName = variationGroupName;\n        this.variationName = variationName;\n        this.slug = slug;\n    }\n    static Empty() {\n        return new FSFlagMetadata({\n            campaignId: '',\n            campaignName: '',\n            campaignType: '',\n            variationId: '',\n            variationName: '',\n            variationGroupId: '',\n            variationGroupName: '',\n            isReference: false,\n            slug: null\n        });\n    }\n}\n","/**\n * Represents the status of the flags in the Flagship SDK.\n */\nexport var FSFetchStatus;\n(function (FSFetchStatus) {\n    /**\n     * The flags have been successfully fetched from the API or re-evaluated in bucketing mode.\n     */\n    FSFetchStatus[\"FETCHED\"] = \"FETCHED\";\n    /**\n     * The flags are currently being fetched from the API or re-evaluated in bucketing mode.\n     */\n    FSFetchStatus[\"FETCHING\"] = \"FETCHING\";\n    /**\n     * The flags need to be re-fetched due to a change in context, or because the flags were loaded from cache or XPC.\n     */\n    FSFetchStatus[\"FETCH_REQUIRED\"] = \"FETCH_REQUIRED\";\n    /**\n     * The SDK is in PANIC mode: All features are disabled except for the one to fetch flags.\n     */\n    FSFetchStatus[\"PANIC\"] = \"PANIC\";\n})(FSFetchStatus || (FSFetchStatus = {}));\n","import { AUTHENTICATE, CLEAR_CONTEXT, CONTEXT_KEY_ERROR, CONTEXT_KEY_VALUE_UPDATE, CONTEXT_NULL_ERROR, CONTEXT_OBJET_PARAM_UPDATE, CONTEXT_VALUE_ERROR, EMIT_READY, FETCH_CAMPAIGNS_FROM_CACHE, FETCH_CAMPAIGNS_SUCCESS, FETCH_FLAGS_BUFFERING_MESSAGE, FETCH_FLAGS_FROM_CAMPAIGNS, FETCH_FLAGS_STARTED, FLAGSHIP_VISITOR_NOT_AUTHENTICATE, FLAG_METADATA, FLAG_VISITOR_EXPOSED, FLAG_VALUE, GET_FLAG_CAST_ERROR, GET_FLAG_MISSING_ERROR, GET_FLAG_VALUE, HitType, LogLevel, NO_FLAG_METADATA, PREDEFINED_CONTEXT_TYPE_ERROR, PROCESS_CLEAR_CONTEXT, PROCESS_FETCHING_FLAGS, PROCESS_SEND_HIT, PROCESS_UPDATE_CONTEXT, SDK_APP, UNAUTHENTICATE, USER_EXPOSED_CAST_ERROR, USER_EXPOSED_FLAG_ERROR, VISITOR_AUTHENTICATE, VISITOR_AUTHENTICATE_VISITOR_ID_ERROR, VISITOR_EXPOSED_VALUE_NOT_CALLED, VISITOR_UNAUTHENTICATE, VISITOR_ALREADY_AUTHENTICATE } from '../enum/index';\nimport { HitAbstract, Event, Screen, Item, Page, Transaction } from '../hit/index';\nimport { TroubleshootingLabel } from '../types';\nimport { errorFormat, hasSameType, logDebug, logDebugSprintf, logError, logErrorSprintf, logInfoSprintf, logWarningSprintf, sprintf } from '../utils/utils';\nimport { StrategyAbstract } from './StrategyAbstract';\nimport { FLAGSHIP_CLIENT, FLAGSHIP_CONTEXT, FLAGSHIP_VERSION, FLAGSHIP_VISITOR } from '../enum/FlagshipContext';\nimport { FSFlagMetadata } from '../flag/FSFlagMetadata';\nimport { Activate } from '../hit/Activate';\nimport { Troubleshooting } from '../hit/Troubleshooting';\nimport { FSFetchStatus } from '../enum/FSFetchStatus';\nimport { FSFetchReasons } from '../enum/FSFetchReasons';\nimport { sendVisitorAllocatedVariations } from '../qaAssistant/messages/index';\nexport const TYPE_HIT_REQUIRED_ERROR = 'property type is required and must ';\nexport const HIT_NULL_ERROR = 'Hit must not be null';\nexport class DefaultStrategy extends StrategyAbstract {\n    checkPredefinedContext(key, value) {\n        const type = FLAGSHIP_CONTEXT[key];\n        if (!type) {\n            return null;\n        }\n        let check = false;\n        if (type === 'string') {\n            check = typeof value === 'string';\n        }\n        else if (type === 'number') {\n            check = typeof value === 'number';\n        }\n        if (!check) {\n            logErrorSprintf(this.config, PROCESS_UPDATE_CONTEXT, PREDEFINED_CONTEXT_TYPE_ERROR, this.visitor.visitorId, key, type);\n        }\n        return check;\n    }\n    updateContextKeyValue(key, value) {\n        const valueType = typeof value;\n        if (typeof key !== 'string' || key === '') {\n            logErrorSprintf(this.config, PROCESS_UPDATE_CONTEXT, CONTEXT_KEY_ERROR, this.visitor.visitorId, key);\n            return;\n        }\n        if (valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean') {\n            logErrorSprintf(this.config, PROCESS_UPDATE_CONTEXT, CONTEXT_VALUE_ERROR, this.visitor.visitorId, key);\n            return;\n        }\n        if (key === FLAGSHIP_CLIENT || key === FLAGSHIP_VERSION || key === FLAGSHIP_VISITOR) {\n            return;\n        }\n        const predefinedContext = this.checkPredefinedContext(key, value);\n        if (typeof predefinedContext === 'boolean' && !predefinedContext) {\n            return;\n        }\n        this.visitor.context[key] = value;\n    }\n    updateContext(context, value) {\n        if (typeof context === 'string') {\n            this.updateContextKeyValue(context, value);\n            logDebugSprintf(this.config, PROCESS_UPDATE_CONTEXT, CONTEXT_KEY_VALUE_UPDATE, this.visitor.visitorId, context, value, this.visitor.context);\n            this.visitor.fetchStatus = {\n                status: FSFetchStatus.FETCH_REQUIRED,\n                reason: FSFetchReasons.UPDATE_CONTEXT\n            };\n            return;\n        }\n        if (!context) {\n            logError(this.visitor.config, CONTEXT_NULL_ERROR, PROCESS_UPDATE_CONTEXT);\n            return;\n        }\n        for (const key in context) {\n            const value = context[key];\n            this.updateContextKeyValue(key, value);\n        }\n        this.visitor.fetchStatus = {\n            status: FSFetchStatus.FETCH_REQUIRED,\n            reason: FSFetchReasons.UPDATE_CONTEXT\n        };\n        logDebugSprintf(this.config, PROCESS_UPDATE_CONTEXT, CONTEXT_OBJET_PARAM_UPDATE, this.visitor.visitorId, context, this.visitor.context);\n    }\n    clearContext() {\n        this.visitor.context = {};\n        this.visitor.loadPredefinedContext();\n        this.visitor.fetchStatus = {\n            status: FSFetchStatus.FETCH_REQUIRED,\n            reason: FSFetchReasons.UPDATE_CONTEXT\n        };\n        logDebugSprintf(this.config, PROCESS_CLEAR_CONTEXT, CLEAR_CONTEXT, this.visitor.visitorId, this.visitor.context);\n    }\n    fetchVisitorCampaigns(visitor) {\n        if (!Array.isArray(visitor?.visitorCache?.data.campaigns)) {\n            return null;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return visitor.visitorCache.data.campaigns.map((campaign) => {\n            return {\n                id: campaign.campaignId,\n                variationGroupId: campaign.variationGroupId,\n                slug: campaign.slug,\n                variation: {\n                    id: campaign.variationId,\n                    reference: !!campaign.isReference,\n                    modifications: {\n                        type: campaign.type,\n                        value: campaign.flags\n                    }\n                }\n            };\n        });\n    }\n    isDeDuplicated(key, deDuplicationTime) {\n        if (deDuplicationTime === 0) {\n            return false;\n        }\n        const deDuplicationCache = this.visitor.deDuplicationCache[key];\n        if (deDuplicationCache && (Date.now() - deDuplicationCache) <= (deDuplicationTime * 1000)) {\n            return true;\n        }\n        this.visitor.deDuplicationCache[key] = Date.now();\n        this.visitor.clearDeDuplicationCache(deDuplicationTime);\n        return false;\n    }\n    async sendActivate(flagDto, defaultValue) {\n        const activateHit = new Activate({\n            variationGroupId: flagDto.variationGroupId,\n            variationId: flagDto.variationId,\n            visitorId: this.visitor.visitorId,\n            anonymousId: this.visitor.anonymousId,\n            flagKey: flagDto.key,\n            flagValue: flagDto.value,\n            flagDefaultValue: defaultValue,\n            visitorContext: this.visitor.context,\n            flagMetadata: {\n                campaignName: flagDto.campaignName,\n                campaignId: flagDto.campaignId,\n                campaignType: flagDto.campaignType,\n                variationGroupId: flagDto.variationGroupId,\n                variationGroupName: flagDto.variationGroupName,\n                variationId: flagDto.variationId,\n                variationName: flagDto.variationName,\n                slug: flagDto.slug,\n                isReference: flagDto.isReference\n            }\n        });\n        activateHit.config = this.config;\n        activateHit.qaMode = this.config.isQAModeEnabled;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { createdAt, ...hitInstanceItem } = activateHit.toObject();\n        if (this.isDeDuplicated(JSON.stringify(hitInstanceItem), this.config.hitDeduplicationTime)) {\n            const logData = {\n                visitorId: this.visitor.visitorId,\n                anonymousId: this.visitor.anonymousId,\n                flag: flagDto,\n                delay: 0\n            };\n            logDebug(this.config, sprintf('Activate {0} is deduplicated', JSON.stringify(logData)), PROCESS_SEND_HIT);\n            return;\n        }\n        await this.trackingManager.activateFlag(activateHit);\n        const activateTroubleshooting = new Troubleshooting({\n            label: TroubleshootingLabel.VISITOR_SEND_ACTIVATE,\n            logLevel: LogLevel.INFO,\n            traffic: this.visitor.traffic,\n            visitorId: activateHit.visitorId,\n            flagshipInstanceId: this.visitor.sdkInitialData?.instanceId,\n            visitorSessionId: this.visitor.instanceId,\n            anonymousId: activateHit.anonymousId,\n            config: this.config,\n            hitContent: activateHit.toApiKeys()\n        });\n        this.sendTroubleshootingHit(activateTroubleshooting);\n    }\n    async sendHit(hit) {\n        if (!this.hasTrackingManager(PROCESS_SEND_HIT)) {\n            return;\n        }\n        await this.prepareAndSendHit(hit);\n    }\n    async sendHits(hits) {\n        if (!this.hasTrackingManager(PROCESS_SEND_HIT)) {\n            return;\n        }\n        for (const hit of hits) {\n            await this.prepareAndSendHit(hit);\n        }\n    }\n    getHit(hit) {\n        let newHit = null;\n        switch (hit.type.toUpperCase()) {\n            case HitType.EVENT:\n                newHit = new Event(hit);\n                break;\n            case HitType.ITEM:\n                newHit = new Item(hit);\n                break;\n            case HitType.PAGE_VIEW:\n                newHit = new Page(hit);\n                break;\n            case HitType.SCREEN_VIEW:\n                newHit = new Screen(hit);\n                break;\n            case HitType.TRANSACTION:\n                newHit = new Transaction(hit);\n                break;\n        }\n        return newHit;\n    }\n    async prepareAndSendHit(hit, functionName = PROCESS_SEND_HIT) {\n        let hitInstance;\n        if (!hit?.type) {\n            logError(this.config, HIT_NULL_ERROR, functionName);\n            return;\n        }\n        if (hit instanceof HitAbstract) {\n            hitInstance = hit;\n        }\n        else {\n            const hitFromInt = this.getHit(hit);\n            if (!hitFromInt) {\n                logError(this.config, TYPE_HIT_REQUIRED_ERROR, functionName);\n                return;\n            }\n            hitInstance = hitFromInt;\n        }\n        hitInstance.visitorId = this.visitor.visitorId;\n        hitInstance.ds = SDK_APP;\n        hitInstance.config = this.config;\n        hitInstance.anonymousId = this.visitor.anonymousId;\n        hitInstance.qaMode = this.config.isQAModeEnabled;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { createdAt, ...hitInstanceItem } = hitInstance.toObject();\n        if (this.isDeDuplicated(JSON.stringify(hitInstanceItem), this.config.hitDeduplicationTime)) {\n            return;\n        }\n        if (!hitInstance.isReady()) {\n            logError(this.config, hitInstance.getErrorMessage(), functionName);\n            return;\n        }\n        try {\n            await this.trackingManager.addHit(hitInstance);\n            if (hitInstance.type === 'SEGMENT') {\n                return;\n            }\n            const sendHitTroubleshooting = new Troubleshooting({\n                label: TroubleshootingLabel.VISITOR_SEND_HIT,\n                logLevel: LogLevel.INFO,\n                traffic: this.visitor.traffic,\n                visitorId: hitInstance.visitorId,\n                flagshipInstanceId: this.visitor.sdkInitialData?.instanceId,\n                visitorSessionId: this.visitor.instanceId,\n                anonymousId: hitInstance.anonymousId,\n                config: this.config,\n                hitContent: hitInstance.toApiKeys()\n            });\n            this.sendTroubleshootingHit(sendHitTroubleshooting);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logError(this.config, error.message || error, functionName);\n        }\n    }\n    authenticate(visitorId) {\n        if (!visitorId) {\n            logErrorSprintf(this.config, AUTHENTICATE, VISITOR_AUTHENTICATE_VISITOR_ID_ERROR, this.visitor.visitorId);\n            return;\n        }\n        if (this.visitor.anonymousId) {\n            logWarningSprintf(this.config, AUTHENTICATE, VISITOR_ALREADY_AUTHENTICATE, this.visitor.visitorId, this.visitor.anonymousId);\n            return;\n        }\n        this.visitor.anonymousId = this.visitor.visitorId;\n        this.visitor.visitorId = visitorId;\n        const monitoring = new Troubleshooting({\n            label: TroubleshootingLabel.VISITOR_AUTHENTICATE,\n            logLevel: LogLevel.INFO,\n            flagshipInstanceId: this.visitor.sdkInitialData?.instanceId,\n            visitorId: this.visitor.visitorId,\n            anonymousId: this.visitor.anonymousId,\n            visitorContext: this.visitor.context,\n            traffic: this.visitor.traffic,\n            config: this.config\n        });\n        this.sendTroubleshootingHit(monitoring);\n        this.visitor.fetchStatus = {\n            status: FSFetchStatus.FETCH_REQUIRED,\n            reason: FSFetchReasons.AUTHENTICATE\n        };\n        logDebugSprintf(this.config, AUTHENTICATE, VISITOR_AUTHENTICATE, this.visitor.visitorId, this.visitor.anonymousId);\n    }\n    unauthenticate() {\n        if (!this.visitor.anonymousId) {\n            logErrorSprintf(this.config, UNAUTHENTICATE, FLAGSHIP_VISITOR_NOT_AUTHENTICATE, this.visitor.visitorId);\n            return;\n        }\n        this.visitor.visitorId = this.visitor.anonymousId;\n        this.visitor.anonymousId = null;\n        const monitoring = new Troubleshooting({\n            label: TroubleshootingLabel.VISITOR_UNAUTHENTICATE,\n            logLevel: LogLevel.INFO,\n            visitorId: this.visitor.visitorId,\n            anonymousId: this.visitor.anonymousId,\n            flagshipInstanceId: this.visitor.sdkInitialData?.instanceId,\n            visitorContext: this.visitor.context,\n            traffic: this.visitor.traffic,\n            config: this.config\n        });\n        this.sendTroubleshootingHit(monitoring);\n        this.visitor.fetchStatus = {\n            status: FSFetchStatus.FETCH_REQUIRED,\n            reason: FSFetchReasons.UNAUTHENTICATE\n        };\n        logDebugSprintf(this.config, UNAUTHENTICATE, VISITOR_UNAUTHENTICATE, this.visitor.visitorId);\n    }\n    async fetchFlags() {\n        const functionName = PROCESS_FETCHING_FLAGS;\n        const now = Date.now();\n        const logData = {\n            visitorId: this.visitor.visitorId,\n            anonymousId: this.visitor.anonymousId,\n            context: this.visitor.context,\n            isFromCache: false,\n            duration: 0\n        };\n        let campaigns = null;\n        let fetchCampaignError;\n        try {\n            const time = Date.now() - this.visitor.lastFetchFlagsTimestamp;\n            const fetchStatus = this.visitor.fetchStatus.status;\n            if (fetchStatus === FSFetchStatus.FETCHING) {\n                await this.visitor.getCampaignsPromise;\n                return;\n            }\n            const fetchFlagBufferingTime = (this.config.fetchFlagsBufferingTime * 1000);\n            if (fetchStatus === FSFetchStatus.FETCHED && time < fetchFlagBufferingTime) {\n                logInfoSprintf(this.config, functionName, FETCH_FLAGS_BUFFERING_MESSAGE, this.visitor.visitorId, fetchFlagBufferingTime - time);\n                return;\n            }\n            logDebugSprintf(this.config, functionName, FETCH_FLAGS_STARTED, this.visitor.visitorId);\n            this.visitor.fetchStatus = {\n                status: FSFetchStatus.FETCHING,\n                reason: FSFetchReasons.NONE\n            };\n            this.visitor.getCampaignsPromise = this.decisionManager.getCampaignsAsync(this.visitor);\n            campaigns = await this.visitor.getCampaignsPromise;\n            this.visitor.lastFetchFlagsTimestamp = Date.now();\n            if (this.decisionManager.isPanic()) {\n                this.visitor.fetchStatus = {\n                    status: FSFetchStatus.PANIC,\n                    reason: FSFetchReasons.NONE\n                };\n            }\n            this.configManager.trackingManager.troubleshootingData = this.decisionManager.troubleshooting;\n            logDebugSprintf(this.config, functionName, FETCH_CAMPAIGNS_SUCCESS, this.visitor.visitorId, this.visitor.anonymousId, this.visitor.context, campaigns, (Date.now() - now));\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logError(this.config, error.message, functionName);\n            fetchCampaignError = error;\n            this.visitor.fetchStatus = {\n                status: FSFetchStatus.FETCH_REQUIRED,\n                reason: FSFetchReasons.FETCH_ERROR\n            };\n        }\n        try {\n            if (!campaigns) {\n                campaigns = this.fetchVisitorCampaigns(this.visitor);\n                logData.isFromCache = true;\n                if (campaigns) {\n                    this.visitor.fetchStatus = {\n                        status: FSFetchStatus.FETCH_REQUIRED,\n                        reason: FSFetchReasons.READ_FROM_CACHE\n                    };\n                    logDebugSprintf(this.config, functionName, FETCH_CAMPAIGNS_FROM_CACHE, this.visitor.visitorId, this.visitor.anonymousId, this.visitor.context, campaigns, (Date.now() - now));\n                }\n            }\n            campaigns = campaigns || [];\n            this.visitor.campaigns = campaigns;\n            this.visitor.flagsData = this.decisionManager.getModifications(this.visitor.campaigns);\n            this.visitor.emit(EMIT_READY, fetchCampaignError);\n            if (this.visitor.fetchStatus.status === FSFetchStatus.FETCHING) {\n                this.visitor.fetchStatus = {\n                    status: FSFetchStatus.FETCHED,\n                    reason: FSFetchReasons.NONE\n                };\n            }\n            const visitorAllocatedVariations = {};\n            this.visitor.flagsData.forEach(item => {\n                visitorAllocatedVariations[item.campaignId] = {\n                    variationId: item.variationId,\n                    variationGroupId: item.variationGroupId,\n                    campaignId: item.campaignId\n                };\n            });\n            sendVisitorAllocatedVariations(visitorAllocatedVariations);\n            logDebugSprintf(this.config, functionName, FETCH_FLAGS_FROM_CAMPAIGNS, this.visitor.visitorId, this.visitor.anonymousId, this.visitor.context, this.visitor.flagsData);\n            if (this.decisionManager.troubleshooting) {\n                this.sendFetchFlagsTroubleshooting({ campaigns, now, isFromCache: logData.isFromCache });\n                this.sendConsentHitTroubleshooting();\n                this.sendSegmentHitTroubleshooting();\n            }\n            this.sendSdkConfigAnalyticHit();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            this.visitor.emit(EMIT_READY, error);\n            logData.duration = Date.now() - now;\n            logError(this.config, errorFormat(error.message || error, logData), functionName);\n            this.visitor.fetchStatus = {\n                status: FSFetchStatus.FETCH_REQUIRED,\n                reason: FSFetchReasons.FETCH_ERROR\n            };\n            const troubleshootingHit = new Troubleshooting({\n                label: TroubleshootingLabel.VISITOR_FETCH_CAMPAIGNS_ERROR,\n                logLevel: LogLevel.INFO,\n                visitorId: this.visitor.visitorId,\n                anonymousId: this.visitor.anonymousId,\n                visitorSessionId: this.visitor.instanceId,\n                flagshipInstanceId: this.visitor.sdkInitialData?.instanceId,\n                traffic: this.visitor.traffic,\n                config: this.config,\n                visitorContext: this.visitor.context,\n                sdkStatus: this.visitor.getSdkStatus(),\n                visitorCampaigns: campaigns,\n                visitorCampaignFromCache: logData.isFromCache ? campaigns : undefined,\n                visitorConsent: this.visitor.hasConsented,\n                visitorIsAuthenticated: !!this.visitor.anonymousId,\n                visitorFlags: this.visitor.flagsData,\n                visitorInitialCampaigns: this.visitor.sdkInitialData?.initialCampaigns,\n                visitorInitialFlagsData: this.visitor.sdkInitialData?.initialFlagsData,\n                lastBucketingTimestamp: this.configManager.decisionManager.lastBucketingTimestamp,\n                lastInitializationTimestamp: this.visitor.sdkInitialData?.lastInitializationTimestamp,\n                httpResponseTime: Date.now() - now,\n                sdkConfigMode: this.getSdkConfigDecisionMode(),\n                sdkConfigTimeout: this.config.timeout,\n                sdkConfigPollingInterval: this.config.pollingInterval,\n                sdkConfigTrackingManagerStrategy: this.config.trackingManagerConfig?.cacheStrategy,\n                sdkConfigTrackingManagerBatchIntervals: this.config.trackingManagerConfig?.batchIntervals,\n                sdkConfigTrackingManagerPoolMaxSize: this.config.trackingManagerConfig?.poolMaxSize,\n                sdkConfigFetchNow: this.config.fetchNow,\n                sdkConfigReuseVisitorIds: this.config.reuseVisitorIds,\n                sdkConfigInitialBucketing: this.config.initialBucketing,\n                sdkConfigDecisionApiUrl: this.config.decisionApiUrl,\n                sdkConfigHitDeduplicationTime: this.config.hitDeduplicationTime\n            });\n            this.trackingManager.addTroubleshootingHit(troubleshootingHit);\n        }\n    }\n    async visitorExposed(param) {\n        const { key, flag, defaultValue, hasGetValueBeenCalled } = param;\n        if (!flag) {\n            logWarningSprintf(this.visitor.config, FLAG_VISITOR_EXPOSED, USER_EXPOSED_FLAG_ERROR, this.visitor.visitorId, key);\n            this.sendFlagTroubleshooting(TroubleshootingLabel.VISITOR_EXPOSED_FLAG_NOT_FOUND, key, defaultValue);\n            return;\n        }\n        if (!hasGetValueBeenCalled) {\n            logWarningSprintf(this.visitor.config, FLAG_VISITOR_EXPOSED, VISITOR_EXPOSED_VALUE_NOT_CALLED, this.visitor.visitorId, key);\n            this.sendFlagTroubleshooting(TroubleshootingLabel.FLAG_VALUE_NOT_CALLED, key, defaultValue, true);\n        }\n        if (defaultValue !== null && defaultValue !== undefined && flag.value !== null && !hasSameType(flag.value, defaultValue)) {\n            logWarningSprintf(this.visitor.config, FLAG_VISITOR_EXPOSED, USER_EXPOSED_CAST_ERROR, this.visitor.visitorId, key);\n            this.sendFlagTroubleshooting(TroubleshootingLabel.VISITOR_EXPOSED_TYPE_WARNING, key, defaultValue);\n        }\n        await this.sendActivate(flag, defaultValue);\n    }\n    sendFlagTroubleshooting(label, key, defaultValue, visitorExposed) {\n        const troubleshooting = new Troubleshooting({\n            label,\n            logLevel: LogLevel.WARNING,\n            visitorId: this.visitor.visitorId,\n            anonymousId: this.visitor.anonymousId,\n            visitorSessionId: this.visitor.instanceId,\n            flagshipInstanceId: this.visitor.sdkInitialData?.instanceId,\n            traffic: this.visitor.traffic,\n            config: this.config,\n            visitorContext: this.visitor.context,\n            flagKey: key,\n            flagDefault: defaultValue,\n            visitorExposed\n        });\n        this.sendTroubleshootingHit(troubleshooting);\n    }\n    getFlagValue(param) {\n        const { key, defaultValue, flag, visitorExposed } = param;\n        if (!flag) {\n            logWarningSprintf(this.config, FLAG_VALUE, GET_FLAG_MISSING_ERROR, this.visitor.visitorId, key, defaultValue);\n            this.sendFlagTroubleshooting(TroubleshootingLabel.GET_FLAG_VALUE_FLAG_NOT_FOUND, key, defaultValue, visitorExposed);\n            return defaultValue;\n        }\n        if (visitorExposed) {\n            this.sendActivate(flag, defaultValue);\n        }\n        if (flag.value === null) {\n            return defaultValue;\n        }\n        if (defaultValue !== null && defaultValue !== undefined && !hasSameType(flag.value, defaultValue)) {\n            logWarningSprintf(this.config, FLAG_VALUE, GET_FLAG_CAST_ERROR, this.visitor.visitorId, key, defaultValue);\n            this.sendFlagTroubleshooting(TroubleshootingLabel.GET_FLAG_VALUE_TYPE_WARNING, key, defaultValue, visitorExposed);\n            return defaultValue;\n        }\n        logDebugSprintf(this.config, FLAG_VALUE, GET_FLAG_VALUE, this.visitor.visitorId, key, flag.value);\n        return flag.value;\n    }\n    SendFlagMetadataTroubleshooting(key) {\n        logWarningSprintf(this.config, FLAG_METADATA, NO_FLAG_METADATA, this.visitor.visitorId, key);\n        const monitoring = new Troubleshooting({\n            label: TroubleshootingLabel.GET_FLAG_METADATA_TYPE_WARNING,\n            logLevel: LogLevel.WARNING,\n            visitorId: this.visitor.visitorId,\n            anonymousId: this.visitor.anonymousId,\n            visitorSessionId: this.visitor.instanceId,\n            flagshipInstanceId: this.visitor.sdkInitialData?.instanceId,\n            traffic: this.visitor.traffic,\n            config: this.config,\n            visitorContext: this.visitor.context,\n            flagKey: key\n        });\n        this.sendTroubleshootingHit(monitoring);\n    }\n    getFlagMetadata(param) {\n        const { key, flag } = param;\n        if (!flag) {\n            logWarningSprintf(this.config, FLAG_METADATA, NO_FLAG_METADATA, this.visitor.visitorId, key);\n            this.SendFlagMetadataTroubleshooting(key);\n            return FSFlagMetadata.Empty();\n        }\n        const metadata = new FSFlagMetadata({\n            campaignId: flag.campaignId,\n            campaignName: flag.campaignName,\n            variationGroupId: flag.variationGroupId,\n            variationGroupName: flag.variationGroupName,\n            variationId: flag.variationId,\n            variationName: flag.variationName,\n            isReference: !!flag.isReference,\n            campaignType: flag.campaignType,\n            slug: flag.slug\n        });\n        return metadata;\n    }\n}\n","import { FSSdkStatus, FLAG_VISITOR_EXPOSED, METHOD_DEACTIVATED_ERROR, FLAG_METADATA, METADATA_SDK_NOT_READY } from '../enum/index';\nimport { logErrorSprintf } from '../utils/utils';\nimport { DefaultStrategy } from './DefaultStrategy';\nimport { FSFlagMetadata } from '../flag/FSFlagMetadata';\nexport class NotReadyStrategy extends DefaultStrategy {\n    async lookupHits() {\n        //\n    }\n    async lookupVisitor() {\n        //\n    }\n    async cacheVisitor() {\n        //\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendHit(_hit) {\n        this.log('sendHit');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendHits(_hits) {\n        this.log('sendHits');\n    }\n    async fetchFlags() {\n        this.log('fetchFlags');\n    }\n    getFlagValue(param) {\n        this.log('Flag.value');\n        return param.defaultValue;\n    }\n    async visitorExposed() {\n        this.log(FLAG_VISITOR_EXPOSED);\n    }\n    getFlagMetadata(param) {\n        const emptyMetaData = FSFlagMetadata.Empty();\n        logErrorSprintf(this.config, FLAG_METADATA, METADATA_SDK_NOT_READY, this.visitor.visitorId, param.key, emptyMetaData);\n        return emptyMetaData;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendActivate(_flagDto, _defaultValue) {\n        //\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendTroubleshootingHit(_hit) {\n        //\n    }\n    async sendSdkConfigAnalyticHit() {\n        //\n    }\n    log(methodName) {\n        logErrorSprintf(this.config, methodName, METHOD_DEACTIVATED_ERROR, this.visitor.visitorId, methodName, FSSdkStatus[FSSdkStatus.SDK_NOT_INITIALIZED]);\n    }\n}\n","import { FSSdkStatus, FLAG_VISITOR_EXPOSED, METHOD_DEACTIVATED_ERROR, FLAG_METADATA, METADATA_PANIC_MODE } from '../enum/index';\nimport { logInfoSprintf } from '../utils/utils';\nimport { DefaultStrategy } from './DefaultStrategy';\nimport { FSFlagMetadata } from '../flag/FSFlagMetadata';\nexport class PanicStrategy extends DefaultStrategy {\n    setConsent(hasConsented) {\n        this.visitor.hasConsented = hasConsented;\n    }\n    updateContext() {\n        this.log('updateContext');\n    }\n    clearContext() {\n        this.log('clearContext');\n    }\n    async lookupHits() {\n        //\n    }\n    async lookupVisitor() {\n        //\n    }\n    async cacheVisitor() {\n        //\n    }\n    async cacheHit() {\n        //\n    }\n    fetchVisitorCampaigns() {\n        return [];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendHit(_hit) {\n        this.log('sendHit');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendHits(_hits) {\n        this.log('sendHits');\n    }\n    getFlagValue(param) {\n        this.log('Flag.value');\n        return param.defaultValue;\n    }\n    async visitorExposed() {\n        this.log(FLAG_VISITOR_EXPOSED);\n    }\n    getFlagMetadata(param) {\n        const emptyMetaData = FSFlagMetadata.Empty();\n        logInfoSprintf(this.config, FLAG_METADATA, METADATA_PANIC_MODE, this.visitor.visitorId, param.key, emptyMetaData);\n        return emptyMetaData;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendTroubleshootingHit(_hit) {\n        //\n    }\n    async sendSdkConfigAnalyticHit() {\n        //\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendActivate(_flagDto, _defaultValue) {\n        //\n    }\n    log(methodName) {\n        logInfoSprintf(this.config, methodName, METHOD_DEACTIVATED_ERROR, this.visitor.visitorId, methodName, FSSdkStatus[FSSdkStatus.SDK_PANIC]);\n    }\n}\n","import { FLAG_VISITOR_EXPOSED, METHOD_DEACTIVATED_CONSENT_ERROR } from '../enum/index';\nimport { logInfo, sprintf } from '../utils/utils';\nimport { DefaultStrategy } from './DefaultStrategy';\nexport class NoConsentStrategy extends DefaultStrategy {\n    async lookupHits() {\n        //\n    }\n    async lookupVisitor() {\n        //\n    }\n    async cacheVisitor() {\n        //\n    }\n    async cacheHit() {\n        //\n    }\n    fetchVisitorCampaigns() {\n        return [];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendHit(_hit) {\n        this.log('sendHit');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendHits(_hits) {\n        this.log('sendHits');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendActivate(_flagDto, _defaultValue) {\n        //\n    }\n    async visitorExposed() {\n        this.log(FLAG_VISITOR_EXPOSED);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async sendTroubleshootingHit(_hit) {\n        //\n    }\n    log(methodName) {\n        logInfo(this.config, sprintf(METHOD_DEACTIVATED_CONSENT_ERROR, methodName, this.visitor.visitorId), methodName);\n    }\n}\n","export const CLIENT_CACHE_KEY = 'FS_CLIENT_VISITOR';\nexport const cacheVisitor = {\n    saveVisitorProfile(visitorProfile) {\n        try {\n            localStorage.setItem(CLIENT_CACHE_KEY, JSON.stringify(visitorProfile));\n        }\n        catch (error) {\n        }\n    },\n    loadVisitorProfile() {\n        let data = null;\n        try {\n            data = localStorage.getItem(CLIENT_CACHE_KEY);\n        }\n        catch (error) {\n        }\n        return data ? JSON.parse(data) : null;\n    }\n};\n","/* eslint-disable no-fallthrough */\nexport class MurmurHash {\n    murmurHash3Int32(key, seed = 0) {\n        let h1, h1b, k1, i;\n        const remainder = key.length & 3; // key.length % 4\n        const bytes = key.length - remainder;\n        h1 = seed;\n        const c1 = 0xcc9e2d51;\n        const c2 = 0x1b873593;\n        i = 0;\n        while (i < bytes) {\n            k1 = (key.charCodeAt(i) & 0xff) | ((key.charCodeAt(++i) & 0xff) << 8) | ((key.charCodeAt(++i) & 0xff) << 16) | ((key.charCodeAt(++i) & 0xff) << 24);\n            ++i;\n            k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n            h1 ^= k1;\n            h1 = (h1 << 13) | (h1 >>> 19);\n            h1b = (((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16)) & 0xffffffff;\n            h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n        }\n        k1 = 0;\n        switch (remainder) {\n            case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n            case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n            case 1:\n                k1 ^= (key.charCodeAt(i) & 0xff);\n                k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n                k1 = (k1 << 15) | (k1 >>> 17);\n                k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n                h1 ^= k1;\n        }\n        h1 ^= key.length;\n        h1 ^= h1 >>> 16;\n        h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n        h1 ^= h1 >>> 13;\n        h1 = (((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16)) & 0xffffffff;\n        h1 ^= h1 >>> 16;\n        return h1 >>> 0;\n    }\n}\n","import { PREDEFINED_CONTEXT_LOADED, PROCESS_NEW_VISITOR, VISITOR_CREATED, VISITOR_ID_GENERATED, VISITOR_PROFILE_LOADED } from './../enum/FlagshipConstant';\nimport { FSSdkStatus, SDK_INFO, VISITOR_ID_ERROR } from '../enum/index';\nimport { hexToValue, isBrowser, logDebugSprintf, logError, uuidV4 } from '../utils/utils';\nimport { DefaultStrategy } from './DefaultStrategy';\nimport { EventEmitter } from '../depsNode.native';\nimport { NotReadyStrategy } from './NotReadyStrategy';\nimport { PanicStrategy } from './PanicStrategy';\nimport { NoConsentStrategy } from './NoConsentStrategy';\nimport { cacheVisitor } from './VisitorCache';\nimport { MurmurHash } from '../utils/MurmurHash';\nimport { FSFetchStatus } from '../enum/FSFetchStatus';\nimport { FSFetchReasons } from '../enum/FSFetchReasons';\nimport { sendVisitorExposedVariations } from '../qaAssistant/messages/index';\nexport class VisitorAbstract extends EventEmitter {\n    _visitorId;\n    _context;\n    _flags;\n    _configManager;\n    _campaigns;\n    _hasConsented;\n    _anonymousId;\n    deDuplicationCache;\n    _isCleaningDeDuplicationCache;\n    visitorCache;\n    _exposedVariations;\n    _sendExposedVariationTimeoutId;\n    _instanceId;\n    _traffic;\n    _sdkInitialData;\n    _consentHitTroubleshooting;\n    _segmentHitTroubleshooting;\n    _fetchStatus;\n    _onFetchFlagsStatusChanged;\n    _getCampaignsPromise;\n    get getCampaignsPromise() {\n        return this._getCampaignsPromise;\n    }\n    set getCampaignsPromise(v) {\n        this._getCampaignsPromise = v;\n    }\n    get onFetchFlagsStatusChanged() {\n        return this._onFetchFlagsStatusChanged;\n    }\n    set onFetchFlagsStatusChanged(v) {\n        this._onFetchFlagsStatusChanged = v;\n    }\n    get fetchStatus() {\n        return this._fetchStatus;\n    }\n    set fetchStatus(v) {\n        this._fetchStatus = v;\n        if (this.onFetchFlagsStatusChanged) {\n            this.onFetchFlagsStatusChanged(v);\n        }\n    }\n    get segmentHitTroubleshooting() {\n        return this._segmentHitTroubleshooting;\n    }\n    set segmentHitTroubleshooting(v) {\n        this._segmentHitTroubleshooting = v;\n    }\n    get consentHitTroubleshooting() {\n        return this._consentHitTroubleshooting;\n    }\n    set consentHitTroubleshooting(v) {\n        this._consentHitTroubleshooting = v;\n    }\n    get sdkInitialData() {\n        return this._sdkInitialData;\n    }\n    static SdkStatus;\n    getSdkStatus() {\n        return VisitorAbstract.SdkStatus;\n    }\n    lastFetchFlagsTimestamp = 0;\n    _visitorCacheStatus;\n    get visitorCacheStatus() {\n        return this._visitorCacheStatus;\n    }\n    set visitorCacheStatus(v) {\n        this._visitorCacheStatus = v;\n    }\n    constructor(param) {\n        const { visitorId, configManager, context, isAuthenticated, hasConsented, initialFlagsData, initialCampaigns, monitoringData, onFetchFlagsStatusChanged } = param;\n        super();\n        this._exposedVariations = {};\n        this._sdkInitialData = monitoringData;\n        this._instanceId = uuidV4();\n        this._isCleaningDeDuplicationCache = false;\n        this.deDuplicationCache = {};\n        this._context = {};\n        this._configManager = configManager;\n        const visitorCache = this.config.reuseVisitorIds ? cacheVisitor.loadVisitorProfile() : null;\n        if (visitorCache) {\n            logDebugSprintf(this.config, PROCESS_NEW_VISITOR, VISITOR_PROFILE_LOADED, visitorCache);\n        }\n        this.visitorId = visitorId || (!isAuthenticated && visitorCache?.anonymousId ? visitorCache?.anonymousId : visitorCache?.visitorId) || this.generateVisitorId();\n        this.campaigns = [];\n        this._anonymousId = null;\n        if (isAuthenticated) {\n            this._anonymousId = visitorCache?.anonymousId || uuidV4();\n        }\n        this.setConsent(hasConsented || false);\n        this.updateContext(context);\n        this.loadPredefinedContext();\n        logDebugSprintf(this.config, PROCESS_NEW_VISITOR, PREDEFINED_CONTEXT_LOADED, {\n            fs_client: SDK_INFO.name,\n            fs_version: SDK_INFO.version,\n            fs_users: this.visitorId\n        });\n        this.updateCache();\n        this.setInitialFlags(initialFlagsData);\n        this.setInitializeCampaigns(initialCampaigns, !!initialFlagsData);\n        this.onFetchFlagsStatusChanged = onFetchFlagsStatusChanged;\n        this.fetchStatus = {\n            status: FSFetchStatus.FETCH_REQUIRED,\n            reason: FSFetchReasons.VISITOR_CREATED\n        };\n        logDebugSprintf(this.config, PROCESS_NEW_VISITOR, VISITOR_CREATED, this.visitorId, this.context, !!isAuthenticated, !!this.hasConsented);\n    }\n    get traffic() {\n        return this._traffic;\n    }\n    set traffic(v) {\n        this._traffic = v;\n    }\n    get instanceId() {\n        return this._instanceId;\n    }\n    generateVisitorId() {\n        const visitorId = uuidV4();\n        logDebugSprintf(this.config, PROCESS_NEW_VISITOR, VISITOR_ID_GENERATED, visitorId);\n        return visitorId;\n    }\n    clearDeDuplicationCache(deDuplicationTime) {\n        if (this._isCleaningDeDuplicationCache) {\n            return;\n        }\n        this._isCleaningDeDuplicationCache = true;\n        const entries = Object.entries(this.deDuplicationCache);\n        for (const [key, value] of entries) {\n            if ((Date.now() - value) > (deDuplicationTime * 1000)) {\n                delete this.deDuplicationCache[key];\n            }\n        }\n        this._isCleaningDeDuplicationCache = false;\n    }\n    setInitialFlags(flags) {\n        this._flags = new Map();\n        if (!Array.isArray(flags)) {\n            return;\n        }\n        flags.forEach((item) => {\n            this._flags.set(item.key, {\n                key: item.key,\n                campaignId: item.campaignId,\n                campaignName: item.campaignName,\n                variationGroupId: item.variationGroupId,\n                variationGroupName: item.variationGroupName,\n                variationId: item.variationId,\n                variationName: item.variationName,\n                isReference: item.isReference,\n                value: hexToValue(item.hex, this.config)?.v,\n                slug: item.slug,\n                campaignType: item.campaignType\n            });\n        });\n    }\n    setInitializeCampaigns(campaigns, hasInitialFlags) {\n        if (campaigns && Array.isArray(campaigns) && !hasInitialFlags) {\n            this.getStrategy().updateCampaigns(campaigns);\n        }\n    }\n    updateCache() {\n        const visitorProfile = {\n            visitorId: this.visitorId,\n            anonymousId: this.anonymousId\n        };\n        cacheVisitor.saveVisitorProfile(visitorProfile);\n    }\n    loadPredefinedContext() {\n        this.context.fs_client = SDK_INFO.name;\n        this.context.fs_version = SDK_INFO.version;\n        this.context.fs_users = this.visitorId;\n    }\n    get visitorId() {\n        return this._visitorId;\n    }\n    set visitorId(v) {\n        if (!v || typeof v !== 'string') {\n            logError(this.config, VISITOR_ID_ERROR, 'VISITOR ID');\n            return;\n        }\n        this._visitorId = v;\n        this.loadPredefinedContext();\n        this.visitorCache = undefined;\n    }\n    get hasConsented() {\n        return this._hasConsented;\n    }\n    set hasConsented(v) {\n        this._hasConsented = v;\n    }\n    setConsent(hasConsented) {\n        this.hasConsented = hasConsented;\n        this.getStrategy().setConsent(hasConsented);\n    }\n    get context() {\n        return this._context;\n    }\n    set context(v) {\n        this._context = {};\n        this.updateContext(v);\n    }\n    get flagsData() {\n        return this._flags;\n    }\n    set flagsData(v) {\n        this._flags = v;\n    }\n    get configManager() {\n        return this._configManager;\n    }\n    get config() {\n        return this.configManager.config;\n    }\n    get campaigns() {\n        return this._campaigns;\n    }\n    set campaigns(v) {\n        this._campaigns = v;\n    }\n    get anonymousId() {\n        return this._anonymousId;\n    }\n    set anonymousId(v) {\n        this._anonymousId = v;\n    }\n    getStrategy() {\n        let strategy;\n        const params = {\n            visitor: this,\n            murmurHash: new MurmurHash()\n        };\n        const status = this.getSdkStatus();\n        if (status === undefined || status === FSSdkStatus.SDK_NOT_INITIALIZED) {\n            strategy = new NotReadyStrategy(params);\n        }\n        else if (status === FSSdkStatus.SDK_PANIC) {\n            strategy = new PanicStrategy(params);\n        }\n        else if (!this.hasConsented) {\n            strategy = new NoConsentStrategy(params);\n        }\n        else {\n            strategy = new DefaultStrategy(params);\n        }\n        return strategy;\n    }\n    sendExposedVariation(flag) {\n        if (!flag || !isBrowser()) {\n            return;\n        }\n        this._exposedVariations[flag.campaignId] = {\n            campaignId: flag.campaignId,\n            variationGroupId: flag.variationGroupId,\n            variationId: flag.variationId\n        };\n        window.flagship = {\n            ...window.flagship,\n            exposedVariations: this._exposedVariations\n        };\n        if (!this.config.isQAModeEnabled) {\n            return;\n        }\n        const BATCH_SIZE = 10;\n        const DELAY = 100;\n        if (Object.keys(this._exposedVariations).length >= BATCH_SIZE) {\n            sendVisitorExposedVariations(this._exposedVariations);\n            this._exposedVariations = {};\n        }\n        if (this._sendExposedVariationTimeoutId) {\n            clearTimeout(this._sendExposedVariationTimeoutId);\n        }\n        if (Object.keys(this._exposedVariations).length === 0) {\n            return;\n        }\n        this._sendExposedVariationTimeoutId = setTimeout(() => {\n            sendVisitorExposedVariations(this._exposedVariations);\n            this._exposedVariations = {};\n        }, DELAY);\n    }\n}\n","/**\n * Represents the status of the flags in the Flagship SDK.\n */\nexport var FSFlagStatus;\n(function (FSFlagStatus) {\n    /**\n     * The flags have been successfully fetched from the API or re-evaluated in bucketing mode.\n     */\n    FSFlagStatus[\"FETCHED\"] = \"FETCHED\";\n    /**\n     * The flags need to be re-fetched due to a change in context, or because the flags were loaded from cache or XPC.\n     */\n    FSFlagStatus[\"FETCH_REQUIRED\"] = \"FETCH_REQUIRED\";\n    /**\n     * The flag was not found or do not exist.\n     */\n    FSFlagStatus[\"NOT_FOUND\"] = \"NOT_FOUND\";\n    /**\n     * The SDK is in PANIC mode: All features are disabled except for the one to fetch flags.\n     */\n    FSFlagStatus[\"PANIC\"] = \"PANIC\";\n})(FSFlagStatus || (FSFlagStatus = {}));\n","import { isBrowser } from '../utils/utils';\nexport function forceVariation({ flagDTO, config }) {\n    if (!config.isQAModeEnabled || !isBrowser() || !flagDTO || !window?.flagship?.forcedVariations) {\n        return undefined;\n    }\n    const forcedVariation = window.flagship.forcedVariations[flagDTO.campaignId];\n    if (!forcedVariation) {\n        return undefined;\n    }\n    const { campaignId, campaignName, variationGroupId, variationGroupName, campaignType, CampaignSlug, variation } = forcedVariation;\n    const value = variation.modifications.value[flagDTO.key];\n    return {\n        key: flagDTO.key,\n        campaignId,\n        campaignName,\n        variationGroupId,\n        variationGroupName: variationGroupName,\n        variationId: variation.id,\n        variationName: variation.name,\n        isReference: !!variation.reference,\n        campaignType,\n        slug: CampaignSlug,\n        value\n    };\n}\n","import { FSFetchStatus } from '../enum/FSFetchStatus';\nimport { FSFlagStatus } from '../enum/FSFlagStatus';\nimport { FSFlagMetadata } from './FSFlagMetadata';\nimport { forceVariation } from './forceVariation';\nexport class FSFlag {\n    _visitor;\n    _key;\n    _defaultValue;\n    hasGetValueBeenCalled = false;\n    constructor(param) {\n        const { key, visitor } = param;\n        this._key = key;\n        this._visitor = visitor;\n    }\n    exists() {\n        if (!this._visitor) {\n            return false;\n        }\n        const flagDTO = this._visitor?.flagsData.get(this._key);\n        const forcedFlagDTO = forceVariation({ flagDTO, config: this._visitor.config });\n        const flag = forcedFlagDTO || flagDTO;\n        return !!(flag?.campaignId && flag?.variationId && flag?.variationGroupId);\n    }\n    get metadata() {\n        if (!this._visitor) {\n            return FSFlagMetadata.Empty();\n        }\n        const flagDTO = this._visitor.flagsData.get(this._key);\n        const forcedFlagDTO = forceVariation({ flagDTO, config: this._visitor.config });\n        return this._visitor.getFlagMetadata({\n            key: this._key,\n            flag: forcedFlagDTO || flagDTO\n        });\n    }\n    async visitorExposed() {\n        if (!this._visitor) {\n            return;\n        }\n        const flagDTO = this._visitor.flagsData.get(this._key);\n        const forcedFlagDTO = forceVariation({ flagDTO, config: this._visitor.config });\n        return this._visitor.visitorExposed({\n            key: this._key,\n            flag: forcedFlagDTO || flagDTO,\n            defaultValue: this._defaultValue,\n            hasGetValueBeenCalled: this.hasGetValueBeenCalled\n        });\n    }\n    getValue(defaultValue, visitorExposed = true) {\n        this._defaultValue = defaultValue;\n        this.hasGetValueBeenCalled = true;\n        if (!this._visitor) {\n            return defaultValue;\n        }\n        const flagDTO = this._visitor.flagsData.get(this._key);\n        const forcedFlagDTO = forceVariation({ flagDTO, config: this._visitor.config });\n        const flag = forcedFlagDTO || flagDTO;\n        this._visitor.sendExposedVariation(flag);\n        return this._visitor.getFlagValue({\n            key: this._key,\n            defaultValue,\n            flag,\n            visitorExposed\n        });\n    }\n    get status() {\n        if (this._visitor?.fetchStatus?.status === FSFetchStatus.PANIC) {\n            return FSFlagStatus.PANIC;\n        }\n        if (!this.exists()) {\n            return FSFlagStatus.NOT_FOUND;\n        }\n        if (this._visitor?.fetchStatus?.status === FSFetchStatus.FETCH_REQUIRED || this._visitor?.fetchStatus?.status === FSFetchStatus.FETCHING) {\n            return FSFlagStatus.FETCH_REQUIRED;\n        }\n        return FSFlagStatus.FETCHED;\n    }\n}\n","import { logWarningSprintf, valueToHex } from '../utils/utils';\nimport { FSFlag } from './FsFlags';\nimport { GET_FLAG, GET_FLAG_NOT_FOUND } from '../enum/FlagshipConstant';\n/**\n * Represents a collection of flags.\n */\nexport class FSFlagCollection {\n    _visitor;\n    _keys = new Set();\n    _flags;\n    /**\n       * Creates a new instance of FSFlagCollection.\n       * @param param - The parameter object.\n       * @param param.visitor - The visitor delegate.\n       * @param param.flags - The initial flags.\n       */\n    constructor(param) {\n        const { visitor, flags } = param;\n        this._visitor = visitor;\n        this._flags = flags || new Map();\n        if (this._flags.size === 0) {\n            this._keys = new Set(visitor?.flagsData.keys());\n            this._keys.forEach((key) => {\n                this._flags.set(key, new FSFlag({ key, visitor }));\n            });\n        }\n        else {\n            this._keys = new Set(this._flags.keys());\n        }\n    }\n    /**\n     * @inheritdoc\n     */\n    get size() {\n        return this._keys.size;\n    }\n    /**\n     * @inheritdoc\n     */\n    get(key) {\n        const flag = this._flags.get(key);\n        if (!flag) {\n            this._visitor?.config && logWarningSprintf(this._visitor?.config, GET_FLAG, GET_FLAG_NOT_FOUND, this._visitor?.visitorId, key);\n            return new FSFlag({ key });\n        }\n        return flag;\n    }\n    /**\n     * @inheritdoc\n     */\n    has(key) {\n        return this._keys.has(key);\n    }\n    /**\n     * @inheritdoc\n     */\n    keys() {\n        return this._keys;\n    }\n    /**\n     * @inheritdoc\n     */\n    [Symbol.iterator]() {\n        let index = 0;\n        const keysArray = Array.from(this._keys);\n        return {\n            next: () => {\n                if (index < keysArray.length) {\n                    const key = keysArray[index++];\n                    return { value: [key, this._flags.get(key)], done: false };\n                }\n                else {\n                    return { value: null, done: true };\n                }\n            }\n        };\n    }\n    /**\n     * @inheritdoc\n     */\n    filter(predicate) {\n        const flags = new Map();\n        this._flags.forEach((flag, key) => {\n            if (predicate(flag, key, this)) {\n                flags.set(key, flag);\n            }\n        });\n        return new FSFlagCollection({ visitor: this._visitor, flags });\n    }\n    /**\n     * @inheritdoc\n     */\n    async exposeAll() {\n        await Promise.all(Array.from(this._flags.values(), (flag) => flag.visitorExposed()));\n    }\n    /**\n     * @inheritdoc\n     */\n    getMetadata() {\n        const metadata = new Map();\n        this._flags.forEach((flag, key) => {\n            metadata.set(key, flag.metadata);\n        });\n        return metadata;\n    }\n    /**\n     * @inheritdoc\n     */\n    toJSON() {\n        const serializedData = [];\n        this._flags.forEach((flag, key) => {\n            const metadata = flag.metadata;\n            serializedData.push({\n                key,\n                campaignId: metadata.campaignId,\n                campaignName: metadata.campaignName,\n                variationGroupId: metadata.variationGroupId,\n                variationGroupName: metadata.variationGroupName,\n                variationId: metadata.variationId,\n                variationName: metadata.variationName,\n                isReference: metadata.isReference,\n                campaignType: metadata.campaignType,\n                slug: metadata.slug,\n                hex: valueToHex({ v: flag.getValue(null, false) })\n            });\n        });\n        return serializedData;\n    }\n    forEach(callbackfn) {\n        this._flags.forEach((flag, key) => {\n            callbackfn(flag, key, this);\n        });\n    }\n}\n","import { VisitorAbstract } from './VisitorAbstract';\nimport { FSFlag } from '../flag/FsFlags';\nimport { logWarningSprintf, visitorFlagSyncStatusMessage } from '../utils/utils';\nimport { GET_FLAG } from '../enum/FlagshipConstant';\nimport { FSFetchStatus } from '../enum/FSFetchStatus';\nimport { FSFlagCollection } from '../flag/FSFlagCollection';\nexport class VisitorDelegate extends VisitorAbstract {\n    updateContext(context, value) {\n        this.getStrategy().updateContext(context, value);\n        this.loadPredefinedContext();\n    }\n    clearContext() {\n        this.getStrategy().clearContext();\n    }\n    getFlag(key) {\n        if (this.fetchStatus.status !== FSFetchStatus.FETCHED && this.fetchStatus.status !== FSFetchStatus.FETCHING) {\n            logWarningSprintf(this.config, GET_FLAG, visitorFlagSyncStatusMessage(this.fetchStatus.reason), this.visitorId, key);\n        }\n        return new FSFlag({ key, visitor: this });\n    }\n    getFlags() {\n        return new FSFlagCollection({ visitor: this });\n    }\n    sendHit(hit) {\n        return this.getStrategy().sendHit(hit);\n    }\n    sendHits(hits) {\n        return this.getStrategy().sendHits(hits);\n    }\n    authenticate(visitorId) {\n        this.getStrategy().authenticate(visitorId);\n        this.updateCache();\n    }\n    unauthenticate() {\n        this.getStrategy().unauthenticate();\n        this.updateCache();\n    }\n    async fetchFlags() {\n        await this.getStrategy().lookupVisitor();\n        await this.getStrategy().fetchFlags();\n        await this.getStrategy().cacheVisitor();\n    }\n    visitorExposed(param) {\n        return this.getStrategy().visitorExposed(param);\n    }\n    getFlagValue(param) {\n        return this.getStrategy().getFlagValue(param);\n    }\n    getFlagMetadata(param) {\n        return this.getStrategy().getFlagMetadata(param);\n    }\n}\n","import { ALLOCATION, BUCKETING_NEW_ALLOCATION, BUCKETING_VARIATION_CACHE, GET_THIRD_PARTY_SEGMENT, POLLING_EVENT_300, POLLING_EVENT_FAILED, THIRD_PARTY_SEGMENT_URL } from '../enum/FlagshipConstant';\nimport { BUCKETING_API_URL, BUCKETING_POOLING_STARTED, BUCKETING_POOLING_STOPPED, FSSdkStatus, HEADER_APPLICATION_JSON, HEADER_CONTENT_TYPE, HEADER_X_API_KEY, HEADER_X_SDK_CLIENT, HEADER_X_SDK_VERSION, LogLevel, POLLING_EVENT_200, PROCESS_BUCKETING, SDK_INFO } from '../enum/index';\nimport { Segment } from '../hit/Segment';\nimport { TroubleshootingLabel } from '../types';\nimport { errorFormat, logDebug, logDebugSprintf, logError, logInfo, sprintf } from '../utils/utils';\nimport { DecisionManager } from './DecisionManager';\nimport { Troubleshooting } from '../hit/Troubleshooting';\nexport class BucketingManager extends DecisionManager {\n    _lastModified;\n    _isPooling;\n    _murmurHash;\n    _isFirstPooling;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _intervalID;\n    constructor(httpClient, config, murmurHash) {\n        super(httpClient, config);\n        this._murmurHash = murmurHash;\n        this._isFirstPooling = true;\n        if (config.initialBucketing) {\n            this._bucketingContent = config.initialBucketing;\n        }\n    }\n    finishLoop(params) {\n        const { response, headers, url, now } = params;\n        if (response.status === 200) {\n            logDebugSprintf(this.config, PROCESS_BUCKETING, POLLING_EVENT_200, response.body);\n            this._bucketingContent = response.body;\n            this._lastBucketingTimestamp = new Date().toISOString();\n            const troubleshootingHit = new Troubleshooting({\n                visitorId: this.flagshipInstanceId,\n                flagshipInstanceId: this.flagshipInstanceId,\n                label: TroubleshootingLabel.SDK_BUCKETING_FILE,\n                traffic: 0,\n                logLevel: LogLevel.INFO,\n                config: this.config,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'POST',\n                httpRequestUrl: url,\n                httpResponseBody: response?.body,\n                httpResponseHeaders: response?.headers,\n                httpResponseCode: response?.status,\n                httpResponseTime: Date.now() - now\n            });\n            this.trackingManager.sendTroubleshootingHit(troubleshootingHit);\n        }\n        else if (response.status === 304) {\n            logDebug(this.config, POLLING_EVENT_300, PROCESS_BUCKETING);\n        }\n        if (response.headers && response.headers['last-modified']) {\n            const lastModified = response.headers['last-modified'];\n            if (this._lastModified !== lastModified && this.config.onBucketingUpdated) {\n                this.config.onBucketingUpdated(new Date(lastModified));\n            }\n            this._lastModified = lastModified;\n        }\n        if (this._isFirstPooling) {\n            this._isFirstPooling = false;\n            this.updateFlagshipStatus(FSSdkStatus.SDK_INITIALIZED);\n        }\n        if (typeof this.config.onBucketingSuccess === 'function') {\n            this.config.onBucketingSuccess({ status: response.status, payload: this._bucketingContent });\n        }\n        this._isPooling = false;\n    }\n    async startPolling() {\n        const timeout = this.config.pollingInterval * 1000;\n        logInfo(this.config, BUCKETING_POOLING_STARTED, PROCESS_BUCKETING);\n        await this.polling();\n        if (timeout === 0) {\n            return;\n        }\n        this._intervalID = setInterval(() => {\n            this.polling();\n        }, timeout);\n    }\n    async polling() {\n        if (this._isPooling) {\n            return;\n        }\n        this._isPooling = true;\n        if (this._isFirstPooling) {\n            this.updateFlagshipStatus(FSSdkStatus.SDK_INITIALIZING);\n        }\n        const url = sprintf(BUCKETING_API_URL, this.config.envId);\n        const headers = {\n            [HEADER_X_API_KEY]: `${this.config.apiKey}`,\n            [HEADER_X_SDK_CLIENT]: SDK_INFO.name,\n            [HEADER_X_SDK_VERSION]: SDK_INFO.version,\n            [HEADER_CONTENT_TYPE]: HEADER_APPLICATION_JSON\n        };\n        const now = Date.now();\n        try {\n            if (this._lastModified) {\n                headers['if-modified-since'] = this._lastModified;\n            }\n            const response = await this._httpClient.getAsync(url, {\n                headers,\n                timeout: this.config.timeout,\n                nextFetchConfig: this.config.nextFetchConfig\n            });\n            this.finishLoop({ response, headers, url, now });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            this._isPooling = false;\n            logError(this.config, errorFormat(POLLING_EVENT_FAILED, {\n                url,\n                headers,\n                nextFetchConfig: this.config.nextFetchConfig,\n                method: 'GET',\n                duration: Date.now() - now\n            }), PROCESS_BUCKETING);\n            if (this._isFirstPooling) {\n                this.updateFlagshipStatus(FSSdkStatus.SDK_NOT_INITIALIZED);\n            }\n            if (typeof this.config.onBucketingFail === 'function') {\n                this.config.onBucketingFail(new Error(error));\n            }\n            const troubleshootingHit = new Troubleshooting({\n                visitorId: this.flagshipInstanceId,\n                flagshipInstanceId: this.flagshipInstanceId,\n                label: TroubleshootingLabel.SDK_BUCKETING_FILE_ERROR,\n                traffic: 0,\n                logLevel: LogLevel.INFO,\n                config: this.config,\n                httpRequestHeaders: headers,\n                httpRequestMethod: 'GET',\n                httpRequestUrl: url,\n                httpResponseBody: error?.message,\n                httpResponseHeaders: error?.headers,\n                httpResponseCode: error?.statusCode,\n                httpResponseTime: Date.now() - now\n            });\n            this.trackingManager.sendTroubleshootingHit(troubleshootingHit);\n        }\n    }\n    stopPolling() {\n        clearInterval(this._intervalID);\n        this._isPooling = false;\n        logInfo(this.config, BUCKETING_POOLING_STOPPED, PROCESS_BUCKETING);\n    }\n    async sendContext(visitor) {\n        try {\n            if (Object.keys(visitor.context).length <= 3 || !visitor.hasConsented) {\n                return;\n            }\n            const SegmentHit = new Segment({\n                context: visitor.context,\n                visitorId: visitor.visitorId,\n                anonymousId: visitor.anonymousId\n            });\n            await visitor.sendHit(SegmentHit);\n            const hitTroubleshooting = new Troubleshooting({\n                label: TroubleshootingLabel.VISITOR_SEND_HIT,\n                logLevel: LogLevel.INFO,\n                traffic: visitor.traffic || 0,\n                visitorId: visitor.visitorId,\n                visitorSessionId: visitor.instanceId,\n                flagshipInstanceId: visitor.sdkInitialData?.instanceId,\n                anonymousId: visitor.anonymousId,\n                config: this.config,\n                hitContent: SegmentHit.toApiKeys()\n            });\n            visitor.segmentHitTroubleshooting = hitTroubleshooting;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logError(this.config, error.message || error, 'sendContext');\n        }\n    }\n    async getThirdPartySegment(visitorId) {\n        const url = sprintf(THIRD_PARTY_SEGMENT_URL, this.config.envId, visitorId);\n        const now = Date.now();\n        const contexts = {};\n        try {\n            const response = await this._httpClient.getAsync(url, {\n                nextFetchConfig: this.config.nextFetchConfig\n            });\n            const content = response.body;\n            if (Array.isArray(content)) {\n                for (const item of content) {\n                    contexts[`${item.partner}::${item.segment}`] = item.value;\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            logError(this.config, errorFormat(error.message || error, {\n                url,\n                nextFetchConfig: this.config.nextFetchConfig,\n                duration: Date.now() - now\n            }), GET_THIRD_PARTY_SEGMENT);\n        }\n        return contexts;\n    }\n    async getCampaignsAsync(visitor) {\n        if (!this._bucketingContent) {\n            return null;\n        }\n        const troubleshooting = this._bucketingContent?.accountSettings?.troubleshooting;\n        this.troubleshooting = undefined;\n        if (troubleshooting) {\n            this.troubleshooting = {\n                startDate: new Date(troubleshooting.startDate),\n                endDate: new Date(troubleshooting.endDate),\n                timezone: troubleshooting.timezone,\n                traffic: troubleshooting.traffic\n            };\n        }\n        if (this._bucketingContent.panic) {\n            this.panic = true;\n            return [];\n        }\n        this.panic = false;\n        if (!this._bucketingContent.campaigns) {\n            return null;\n        }\n        if (this.config.fetchThirdPartyData) {\n            const thirdPartySegments = await this.getThirdPartySegment(visitor.visitorId);\n            visitor.updateContext(thirdPartySegments);\n        }\n        await this.sendContext(visitor);\n        const visitorCampaigns = [];\n        this._bucketingContent.campaigns.forEach(campaign => {\n            const currentCampaigns = this.getVisitorCampaigns(campaign.variationGroups, campaign.id, campaign.type, visitor);\n            if (currentCampaigns) {\n                currentCampaigns.slug = campaign.slug ?? null;\n                currentCampaigns.name = campaign.name;\n                visitorCampaigns.push(currentCampaigns);\n            }\n        });\n        return visitorCampaigns;\n    }\n    getVisitorCampaigns(variationGroups, campaignId, campaignType, visitor) {\n        for (const variationGroup of variationGroups) {\n            const check = this.isMatchTargeting(variationGroup, visitor);\n            if (check) {\n                const variation = this.getVariation(variationGroup, visitor);\n                if (!variation) {\n                    return null;\n                }\n                return {\n                    id: campaignId,\n                    variation,\n                    variationGroupId: variationGroup.id,\n                    variationGroupName: variationGroup.name,\n                    type: campaignType\n                };\n            }\n        }\n        return null;\n    }\n    getVariation(variationGroup, visitor) {\n        const hash = this._murmurHash.murmurHash3Int32(variationGroup.id + visitor.visitorId);\n        const hashAllocation = hash % 100;\n        let totalAllocation = 0;\n        for (const variation of variationGroup.variations) {\n            const assignmentsHistory = visitor.visitorCache?.data?.assignmentsHistory;\n            const cacheVariationId = assignmentsHistory ? assignmentsHistory[variationGroup.id] : null;\n            if (cacheVariationId) {\n                const newVariation = variationGroup.variations.find(x => x.id === cacheVariationId);\n                if (!newVariation) {\n                    continue;\n                }\n                logDebugSprintf(this.config, ALLOCATION, BUCKETING_VARIATION_CACHE, visitor.visitorId, newVariation.id);\n                return {\n                    id: newVariation.id,\n                    name: newVariation.name,\n                    modifications: newVariation.modifications,\n                    reference: newVariation.reference\n                };\n            }\n            if (variation.allocation === undefined) {\n                continue;\n            }\n            totalAllocation += variation.allocation;\n            if (hashAllocation <= totalAllocation) {\n                logDebugSprintf(this.config, ALLOCATION, BUCKETING_NEW_ALLOCATION, visitor.visitorId, variation.id, totalAllocation);\n                return {\n                    id: variation.id,\n                    modifications: variation.modifications,\n                    reference: variation.reference,\n                    name: variation.name\n                };\n            }\n        }\n        return null;\n    }\n    isMatchTargeting(variationGroup, visitor) {\n        if (!variationGroup || !variationGroup.targeting || !variationGroup.targeting.targetingGroups) {\n            return false;\n        }\n        return variationGroup.targeting.targetingGroups.some(targetingGroup => this.checkAndTargeting(targetingGroup.targetings, visitor));\n    }\n    isANDListOperator(operator) {\n        return ['NOT_EQUALS', 'NOT_CONTAINS'].includes(operator);\n    }\n    checkAndTargeting(targetings, visitor) {\n        let contextValue;\n        let check = false;\n        for (const { key, value, operator } of targetings) {\n            if (operator === 'EXISTS') {\n                if (key in visitor.context) {\n                    check = true;\n                    continue;\n                }\n                check = false;\n                break;\n            }\n            if (operator === 'NOT_EXISTS') {\n                if (key in visitor.context) {\n                    check = false;\n                    break;\n                }\n                check = true;\n                continue;\n            }\n            if (key === 'fs_all_users') {\n                check = true;\n                continue;\n            }\n            if (key === 'fs_users') {\n                contextValue = visitor.visitorId;\n            }\n            else {\n                if (!(key in visitor.context)) {\n                    check = false;\n                    break;\n                }\n                contextValue = visitor.context[key];\n            }\n            check = this.testOperator(operator, contextValue, value);\n            if (!check) {\n                break;\n            }\n        }\n        return check;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    testListOperatorLoop(operator, contextValue, value, initialCheck) {\n        let check = initialCheck;\n        for (const v of value) {\n            check = this.testOperator(operator, contextValue, v);\n            if (check !== initialCheck) {\n                break;\n            }\n        }\n        return check;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    testListOperator(operator, contextValue, value) {\n        const andOperator = this.isANDListOperator(operator);\n        if (andOperator) {\n            return this.testListOperatorLoop(operator, contextValue, value, true);\n        }\n        return this.testListOperatorLoop(operator, contextValue, value, false);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    testOperator(operator, contextValue, value) {\n        let check;\n        if (Array.isArray(value)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return this.testListOperator(operator, contextValue, value);\n        }\n        switch (operator) {\n            case 'EQUALS':\n                check = contextValue === value;\n                break;\n            case 'NOT_EQUALS':\n                check = contextValue !== value;\n                break;\n            case 'CONTAINS':\n                check = contextValue.toString().includes(value.toString());\n                break;\n            case 'NOT_CONTAINS':\n                check = !contextValue.toString().includes(value.toString());\n                break;\n            case 'GREATER_THAN':\n                check = contextValue > value;\n                break;\n            case 'LOWER_THAN':\n                check = contextValue < value;\n                break;\n            case 'GREATER_THAN_OR_EQUALS':\n                check = contextValue >= value;\n                break;\n            case 'LOWER_THAN_OR_EQUALS':\n                check = contextValue <= value;\n                break;\n            case 'STARTS_WITH':\n                check = contextValue.toString().startsWith(value.toString());\n                break;\n            case 'ENDS_WITH':\n                check = contextValue.toString().endsWith(value.toString());\n                break;\n            default:\n                check = false;\n                break;\n        }\n        return check;\n    }\n}\n","export class HttpError extends Error {\n    _statusCode;\n    _headers;\n    get headers() {\n        return this._headers;\n    }\n    get statusCode() {\n        return this._statusCode;\n    }\n    constructor(statusCode, message, headers) {\n        super(message);\n        this._statusCode = statusCode;\n        this._headers = headers;\n    }\n}\n","export const myFetch = (input, init) => fetch(input, init);\nexport { EventEmitter } from 'events';\nexport const LocalAbortController = AbortController;\n","import { HttpError } from './HttpError';\nimport { REQUEST_TIME_OUT } from '../enum/index';\nimport { myFetch, LocalAbortController } from '../depsNode.native';\nexport class HttpClient {\n    async getResponse(response) {\n        const applicationType = response.headers.get('Content-Type');\n        const checkJson = applicationType === 'application/json';\n        let body;\n        const headers = {};\n        response.headers.forEach((value, key) => {\n            headers[key] = value;\n        });\n        if (checkJson && response.ok && response.status !== 204) {\n            body = await response.json();\n        }\n        if (response.status >= 400) {\n            const bodyString = await response.text();\n            throw new HttpError(response.status, bodyString || response.statusText, headers);\n        }\n        return {\n            status: response.status,\n            body,\n            headers\n        };\n    }\n    async getAsync(url, options) {\n        const c = new LocalAbortController();\n        const id = setTimeout(() => c.abort(), (options?.timeout ? options.timeout : REQUEST_TIME_OUT) * 1000);\n        try {\n            const response = await myFetch(url, {\n                method: 'GET',\n                headers: options?.headers,\n                signal: c.signal,\n                keepalive: true,\n                next: options?.nextFetchConfig\n            });\n            return this.getResponse(response);\n        }\n        finally {\n            clearTimeout(id);\n        }\n    }\n    async postAsync(url, options) {\n        const c = new LocalAbortController();\n        const id = setTimeout(() => c.abort(), options.timeout ? options.timeout * 1000 : REQUEST_TIME_OUT * 1000);\n        try {\n            const response = await myFetch(url, {\n                method: 'POST',\n                headers: options.headers,\n                body: JSON.stringify(options.body),\n                signal: c.signal,\n                keepalive: true,\n                next: options?.nextFetchConfig\n            });\n            return this.getResponse(response);\n        }\n        finally {\n            clearTimeout(id);\n        }\n    }\n}\n","import { BucketingManager } from './BucketingManager';\nexport class EdgeManager extends BucketingManager {\n    getCampaignsAsync(visitor) {\n        return super.getCampaignsAsync(visitor);\n    }\n}\n","import { DecisionMode } from './DecisionMode';\nimport { FlagshipConfig } from './FlagshipConfig';\nexport class EdgeConfig extends FlagshipConfig {\n    constructor(param) {\n        super({ ...param, decisionMode: DecisionMode.BUCKETING_EDGE });\n    }\n}\n","import { FS_QA_ASSISTANT_SCRIPT_TAG_ID, FS_QA_URL, TAG_QA_URL } from '../enum/FlagshipConstant';\nconst getScriptElement = (src) => document.querySelector(`script[src*=\"${src}\"]`);\n/**\n *\n * @param bundleFileUrl\n */\nexport function appendScript(bundleFileUrl) {\n    if (getScriptElement(TAG_QA_URL) || getScriptElement(FS_QA_URL)) {\n        return;\n    }\n    const script = document.createElement('script');\n    script.src = bundleFileUrl;\n    script.id = FS_QA_ASSISTANT_SCRIPT_TAG_ID;\n    document.body.append(script);\n}\n","import { sendVisitorAllocatedVariations, sendVisitorExposedVariations } from './index';\nimport { FS_FORCED_VARIATIONS, FS_IS_QA_MODE_ENABLED, FS_QA_ASSISTANT_SCRIPT_TAG_ID, SDK_INFO } from '../../enum/FlagshipConstant';\nimport { INTERNAL_EVENTS } from '../type';\nexport function onQaAssistantReady() {\n    if (window.flagship?.visitorVariations) {\n        sendVisitorAllocatedVariations(window.flagship?.visitorVariations);\n    }\n    if (window.flagship?.exposedVariations) {\n        sendVisitorExposedVariations(window.flagship?.exposedVariations);\n    }\n}\nexport function render(forcedReFetchFlags = false) {\n    if (SDK_INFO.name === 'TypeScript') {\n        document.location.reload();\n    }\n    const triggerRenderEvent = new CustomEvent(INTERNAL_EVENTS.FsTriggerRendering, {\n        detail: {\n            forcedReFetchFlags\n        }\n    });\n    window.dispatchEvent(triggerRenderEvent);\n}\nexport function onQaAssistantClose({ config, func }) {\n    config.isQAModeEnabled = false;\n    sessionStorage.removeItem(FS_IS_QA_MODE_ENABLED);\n    if (func) {\n        window.removeEventListener('message', func);\n    }\n    document.getElementById(FS_QA_ASSISTANT_SCRIPT_TAG_ID)?.remove();\n    window.flagship = {\n        ...window.flagship,\n        forcedVariations: {}\n    };\n    render();\n}\nexport function onApplyForcedVariations({ value }) {\n    const sessionForcedVariations = sessionStorage.getItem(FS_FORCED_VARIATIONS);\n    let forcedVariations = {};\n    try {\n        forcedVariations = JSON.parse(sessionForcedVariations || '{}');\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing sessionForcedVariations', error);\n    }\n    forcedVariations = { ...forcedVariations, ...value };\n    sessionStorage.setItem(FS_FORCED_VARIATIONS, JSON.stringify(forcedVariations));\n    window.flagship = {\n        ...window.flagship,\n        forcedVariations\n    };\n    render();\n}\nexport function onResetForcedVariations() {\n    sessionStorage.removeItem(FS_FORCED_VARIATIONS);\n    window.flagship = {\n        ...window.flagship,\n        forcedVariations: {}\n    };\n    render();\n}\n","import { FS_FORCED_VARIATIONS, FS_IS_QA_MODE_ENABLED, QA_ASSISTANT_PROD_URL } from '../enum/FlagshipConstant';\nimport { logInfoSprintf } from '../utils/utils';\nimport { appendScript } from './appendScript';\nimport { handleIframeMessage } from './messages/handleIframeMessage';\n/**\n *\n * @param config\n * @returns\n */\nexport function loadQaAssistant(config, bundleUrl = null) {\n    if (window?.frames?.ABTastyQaAssistant) {\n        return;\n    }\n    let forcedVariations = {};\n    const sessionForcedVariations = sessionStorage.getItem(FS_FORCED_VARIATIONS);\n    try {\n        forcedVariations = JSON.parse(sessionForcedVariations || '{}');\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing sessionForcedVariations', error);\n    }\n    window.flagship = {\n        ...window.flagship,\n        envId: config.envId,\n        forcedVariations\n    };\n    const eventListenerMessage = (event) => {\n        handleIframeMessage({ event, config, func: eventListenerMessage });\n    };\n    window.addEventListener('message', eventListenerMessage);\n    logInfoSprintf(config, 'QA assistant', 'Loading QA Assistant');\n    appendScript(bundleUrl || QA_ASSISTANT_PROD_URL);\n    config.isQAModeEnabled = true;\n    sessionStorage.setItem(FS_IS_QA_MODE_ENABLED, 'true');\n}\n","import { isBrowser } from '../../utils/utils';\nimport { MSG_NAME_FROM_IFRAME } from '../type';\nimport { onApplyForcedVariations, onQaAssistantClose, onQaAssistantReady, onResetForcedVariations, render } from './iframeMessageActions';\nexport function handleIframeMessage({ event, config, func }) {\n    if (!config.isQAModeEnabled || !isBrowser()) {\n        return;\n    }\n    switch (event.data.name) {\n        case MSG_NAME_FROM_IFRAME.FsQaAssistantReady:\n            onQaAssistantReady();\n            break;\n        case MSG_NAME_FROM_IFRAME.MinimizeQaAssistantClose:\n        case MSG_NAME_FROM_IFRAME.QaAssistantClose:\n            onQaAssistantClose({ config, func });\n            break;\n        case MSG_NAME_FROM_IFRAME.FsApplyForcedVariations:\n            onApplyForcedVariations({ value: event.data.value });\n            break;\n        case MSG_NAME_FROM_IFRAME.FsResetForcedVariations:\n            onResetForcedVariations();\n            break;\n        case MSG_NAME_FROM_IFRAME.FsTriggerRender:\n            render(true);\n            break;\n    }\n}\n","import { Visitor } from '../visitor/Visitor';\nimport { FSSdkStatus } from '../enum/FSSdkStatus';\nimport { DecisionMode, BucketingConfig, DecisionApiConfig } from '../config/index';\nimport { ConfigManager } from '../config/ConfigManager';\nimport { ApiManager } from '../decision/ApiManager';\nimport { TrackingManager } from '../api/TrackingManager';\nimport { FlagshipLogManager } from '../utils/FlagshipLogManager';\nimport { isBrowser, logDebugSprintf, logError, logInfo, logInfoSprintf, logWarning, sprintf, uuidV4 } from '../utils/utils';\nimport { INITIALIZATION_PARAM_ERROR, INITIALIZATION_STARTING, NEW_VISITOR_NOT_READY, PROCESS_INITIALIZATION, PROCESS_NEW_VISITOR, SDK_INFO, SDK_STARTED_INFO, PROCESS_SDK_STATUS, SDK_STATUS_CHANGED, SAVE_VISITOR_INSTANCE, CONSENT_NOT_SPECIFY_WARNING } from '../enum/index';\nimport { VisitorDelegate } from '../visitor/VisitorDelegate';\nimport { BucketingManager } from '../decision/BucketingManager';\nimport { MurmurHash } from '../utils/MurmurHash';\nimport { HttpClient } from '../utils/HttpClient';\nimport { DefaultHitCache } from '../cache/DefaultHitCache';\nimport { DefaultVisitorCache } from '../cache/DefaultVisitorCache';\nimport { EdgeManager } from '../decision/EdgeManager';\nimport { EdgeConfig } from '../config/EdgeConfig';\nimport { VisitorAbstract } from '../visitor/VisitorAbstract';\nimport { launchQaAssistant } from '../qaAssistant/index';\n/**\n * The `Flagship` class represents the SDK. It facilitates the initialization process and creation of new visitors.\n */\nexport class Flagship {\n    // eslint-disable-next-line no-use-before-define\n    static _instance;\n    _configManager;\n    _config;\n    _status;\n    _visitorInstance;\n    instanceId;\n    lastInitializationTimestamp;\n    set configManager(value) {\n        this._configManager = value;\n    }\n    get configManager() {\n        return this._configManager;\n    }\n    constructor() {\n        this.instanceId = uuidV4();\n        this._status = FSSdkStatus.SDK_NOT_INITIALIZED;\n    }\n    static getInstance() {\n        if (!this._instance) {\n            this._instance = new this();\n        }\n        return this._instance;\n    }\n    setStatus(status) {\n        if (this._status === status) {\n            return;\n        }\n        this._status = status;\n        VisitorAbstract.SdkStatus = status;\n        const statusChanged = this.getConfig()?.onSdkStatusChanged;\n        logInfoSprintf(this._config, PROCESS_SDK_STATUS, SDK_STATUS_CHANGED, FSSdkStatus[status]);\n        if (this.getConfig().decisionMode !== DecisionMode.BUCKETING_EDGE) {\n            if (status === FSSdkStatus.SDK_INITIALIZED) {\n                this.configManager?.trackingManager?.startBatchingLoop();\n            }\n            if (status === FSSdkStatus.SDK_NOT_INITIALIZED) {\n                this.configManager?.trackingManager?.stopBatchingLoop();\n            }\n        }\n        if (statusChanged) {\n            statusChanged(status);\n        }\n    }\n    /**\n     * Return current status of Flagship SDK.\n     */\n    static getStatus() {\n        return this.getInstance()._status;\n    }\n    /**\n     * Return current status of Flagship SDK.\n     */\n    getStatus() {\n        return this._status;\n    }\n    /**\n     * Return the current config set by the customer and used by the SDK.\n     */\n    static getConfig() {\n        return this.getInstance()._config;\n    }\n    /**\n     * Return the current config set by the customer and used by the SDK.\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Return the last visitor created if isNewInstance key is false. Return undefined otherwise.\n     */\n    getVisitor() {\n        return this._visitorInstance;\n    }\n    /**\n     * Return the last visitor created if isNewInstance key is false. Return undefined otherwise.\n     */\n    static getVisitor() {\n        return this.getInstance().getVisitor();\n    }\n    buildConfig(config) {\n        let newConfig;\n        switch (config?.decisionMode) {\n            case DecisionMode.BUCKETING:\n                newConfig = new BucketingConfig(config);\n                break;\n            case DecisionMode.BUCKETING_EDGE:\n                newConfig = new EdgeConfig(config);\n                break;\n            default:\n                newConfig = new DecisionApiConfig(config);\n                break;\n        }\n        return newConfig;\n    }\n    buildDecisionManager(flagship, config, httpClient) {\n        let decisionManager;\n        const setStatus = (status) => {\n            flagship.setStatus(status);\n        };\n        switch (config.decisionMode) {\n            case DecisionMode.BUCKETING:\n                decisionManager = new BucketingManager(httpClient, config, new MurmurHash());\n                decisionManager.statusChangedCallback(setStatus);\n                decisionManager.startPolling();\n                break;\n            case DecisionMode.BUCKETING_EDGE:\n                decisionManager = new EdgeManager(httpClient, config, new MurmurHash());\n                decisionManager.statusChangedCallback(setStatus);\n                break;\n            default:\n                decisionManager = new ApiManager(httpClient, config);\n                decisionManager.statusChangedCallback(setStatus);\n                break;\n        }\n        return decisionManager;\n    }\n    /**\n     * Start the flagship SDK, with a custom configuration implementation\n     * @param {string} envId : Environment id provided by Flagship.\n     * @param {string} apiKey : Secure api key provided by Flagship.\n     * @param {IFlagshipConfig} config : (optional) SDK configuration.\n     */\n    static start(envId, apiKey, config) {\n        const flagship = this.getInstance();\n        const localConfig = flagship.buildConfig(config);\n        localConfig.envId = envId;\n        localConfig.apiKey = apiKey;\n        flagship._config = localConfig;\n        // check custom logger\n        if (!localConfig.onLog && !localConfig.logManager) {\n            localConfig.logManager = new FlagshipLogManager();\n        }\n        if (!envId || !apiKey) {\n            flagship.setStatus(FSSdkStatus.SDK_NOT_INITIALIZED);\n            logError(localConfig, INITIALIZATION_PARAM_ERROR, PROCESS_INITIALIZATION);\n            return flagship;\n        }\n        logDebugSprintf(localConfig, PROCESS_INITIALIZATION, INITIALIZATION_STARTING, SDK_INFO.version, localConfig.decisionMode, localConfig);\n        if (!localConfig.hitCacheImplementation && isBrowser()) {\n            localConfig.hitCacheImplementation = new DefaultHitCache();\n        }\n        if (!localConfig.visitorCacheImplementation && isBrowser()) {\n            localConfig.visitorCacheImplementation = new DefaultVisitorCache();\n        }\n        const httpClient = new HttpClient();\n        const decisionManager = flagship.configManager?.decisionManager;\n        if (decisionManager instanceof BucketingManager && localConfig.decisionMode !== DecisionMode.BUCKETING_EDGE) {\n            decisionManager.stopPolling();\n        }\n        let trackingManager = flagship.configManager?.trackingManager;\n        if (!trackingManager) {\n            trackingManager = new TrackingManager(httpClient, localConfig, flagship.instanceId);\n        }\n        flagship.configManager = new ConfigManager(localConfig, decisionManager, trackingManager);\n        flagship.configManager.decisionManager = flagship.buildDecisionManager(flagship, localConfig, httpClient);\n        flagship.configManager.decisionManager.trackingManager = trackingManager;\n        flagship.configManager.decisionManager.flagshipInstanceId = flagship.instanceId;\n        if (flagship._status !== FSSdkStatus.SDK_INITIALIZING) {\n            flagship.setStatus(FSSdkStatus.SDK_INITIALIZED);\n        }\n        logInfo(localConfig, sprintf(SDK_STARTED_INFO, SDK_INFO.version, FSSdkStatus[flagship._status]), PROCESS_INITIALIZATION);\n        launchQaAssistant(localConfig);\n        flagship.lastInitializationTimestamp = new Date().toISOString();\n        return flagship;\n    }\n    /**\n     * When called, it will batch and send all hits that are in the pool before the application is closed\n     */\n    async close() {\n        await Flagship.close();\n    }\n    /**\n     * When called, it will batch and send all hits that are in the pool before the application is closed\n     */\n    static async close() {\n        await this._instance?.configManager?.trackingManager?.sendBatch();\n    }\n    /**\n     * Creates a new Visitor instance.\n     *\n     * @param params - The parameters for creating the new Visitor.\n     * @returns A new Visitor instance.\n     */\n    newVisitor(params) {\n        return Flagship.newVisitor(params);\n    }\n    /**\n     * Creates a new Visitor instance.\n     *\n     * @param params - The parameters for creating the new Visitor.\n     * @returns A new Visitor instance.\n     */\n    static newVisitor({ visitorId, context, isAuthenticated, hasConsented, initialCampaigns, initialFlagsData, shouldSaveInstance, onFetchFlagsStatusChanged }) {\n        const saveInstance = shouldSaveInstance ?? isBrowser();\n        if (!this._instance?.configManager) {\n            const flagship = this.getInstance();\n            const config = new DecisionApiConfig();\n            config.logManager = new FlagshipLogManager();\n            flagship._config = config;\n            const httpClient = new HttpClient();\n            const trackingManager = new TrackingManager(httpClient, config);\n            const decisionManager = new ApiManager(httpClient, config);\n            flagship.configManager = new ConfigManager(config, decisionManager, trackingManager);\n            logError(this.getConfig(), NEW_VISITOR_NOT_READY, PROCESS_NEW_VISITOR);\n        }\n        if (hasConsented === undefined) {\n            logWarning(this.getConfig(), CONSENT_NOT_SPECIFY_WARNING, PROCESS_NEW_VISITOR);\n        }\n        const visitorDelegate = new VisitorDelegate({\n            visitorId,\n            context: context || {},\n            isAuthenticated: isAuthenticated ?? false,\n            hasConsented: hasConsented ?? false,\n            configManager: this.getInstance().configManager,\n            initialCampaigns,\n            initialFlagsData,\n            onFetchFlagsStatusChanged,\n            monitoringData: {\n                instanceId: this.getInstance().instanceId,\n                lastInitializationTimestamp: this.getInstance().lastInitializationTimestamp,\n                initialCampaigns,\n                initialFlagsData\n            }\n        });\n        const visitor = new Visitor(visitorDelegate);\n        this.getInstance()._visitorInstance = saveInstance ? visitor : undefined;\n        if (saveInstance) {\n            logDebugSprintf(this.getConfig(), PROCESS_NEW_VISITOR, SAVE_VISITOR_INSTANCE, visitor.visitorId);\n        }\n        if (this.getConfig().fetchNow && this.getConfig().decisionMode !== DecisionMode.BUCKETING_EDGE) {\n            visitor.fetchFlags();\n        }\n        return visitor;\n    }\n}\n","import { FS_QA_ASSISTANT, FS_QA_ASSISTANT_LOCAL, FS_QA_ASSISTANT_STAGING, QA_ASSISTANT_LOCAL_URL, QA_ASSISTANT_PROD_URL, QA_ASSISTANT_STAGING_URL, TAG_QA_ASSISTANT, TAG_QA_ASSISTANT_LOCAL, TAG_QA_ASSISTANT_STAGING } from '../enum/FlagshipConstant';\nimport { isBrowser } from '../utils/utils';\nimport { listenForKeyboardQaAssistant } from './listenForKeyboardQaAssistant';\nimport { loadQaAssistant } from './loadQaAssistant';\n/**\n *\n * @param config\n * @returns\n */\nexport function launchQaAssistant(config) {\n    if (!isBrowser()) {\n        return;\n    }\n    const urlMap = {\n        [FS_QA_ASSISTANT]: QA_ASSISTANT_PROD_URL,\n        [TAG_QA_ASSISTANT]: QA_ASSISTANT_PROD_URL,\n        [FS_QA_ASSISTANT_STAGING]: QA_ASSISTANT_STAGING_URL,\n        [TAG_QA_ASSISTANT_STAGING]: QA_ASSISTANT_STAGING_URL,\n        [FS_QA_ASSISTANT_LOCAL]: QA_ASSISTANT_LOCAL_URL,\n        [TAG_QA_ASSISTANT_LOCAL]: QA_ASSISTANT_LOCAL_URL\n    };\n    const queryParam = new URLSearchParams(window.location.search);\n    const urlKey = Object.keys(urlMap).find(key => queryParam.get(key) === 'true') || '';\n    if (config.isQAModeEnabled || urlKey) {\n        loadQaAssistant(config, urlMap[urlKey]);\n        return;\n    }\n    listenForKeyboardQaAssistant(config);\n}\n","import { FS_FORCED_VARIATIONS } from '../enum/FlagshipConstant';\nimport { logInfoSprintf } from '../utils/utils';\nimport { loadQaAssistant } from './loadQaAssistant';\n/**\n *\n * @param config\n */\nexport function listenForKeyboardQaAssistant(config) {\n    logInfoSprintf(config, 'QA assistant', 'Listening for keyboard events to launch QA Assistant');\n    const keysPressed = {};\n    const keyCombinationPressed = () => {\n        return (keysPressed.Control || keysPressed.Alt) && keysPressed.q && keysPressed.a;\n    };\n    document.addEventListener('keydown', (event) => {\n        keysPressed[event.key] = true;\n        sessionStorage.removeItem(FS_FORCED_VARIATIONS);\n        if (keyCombinationPressed()) {\n            loadQaAssistant(config);\n        }\n    });\n    document.addEventListener('keyup', (event) => {\n        delete keysPressed[event.key];\n    });\n}\n","import { Flagship } from './main/Flagship';\nexport { Flagship } from './main/Flagship';\nexport { DecisionApiConfig, DecisionMode } from './config/index';\nexport { EventCategory } from './hit/index';\nexport { FSSdkStatus, LogLevel, HitType, CacheStrategy, FSFetchReasons, FSFetchStatus, FSFlagStatus } from './enum/index';\nexport * from './enum/FlagshipContext';\nexport * from './types';\nexport { Visitor } from './visitor/index';\nexport * from './flag/index';\nexport default Flagship;\n"],"names":["root","factory","exports","module","define","amd","a","i","self","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","length","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","o","obj","prop","hasOwnProperty","r","Symbol","toStringTag","SDK_INFO","version","BATCH_MAX_SIZE","BASE_API_URL","HIT_EVENT_URL","TROUBLESHOOTING_HIT_URL","USAGE_HIT_URL","URL_ACTIVATE_MODIFICATION","QA_ASSISTANT_PROD_URL","QA_ASSISTANT_STAGING_URL","QA_ASSISTANT_LOCAL_URL","TAG_QA_URL","FS_QA_URL","FS_CONSENT","FS_IS_QA_MODE_ENABLED","FS_FORCED_VARIATIONS","FS_QA_ASSISTANT_SCRIPT_TAG_ID","DEFAULT_HIT_CACHE_TIME_MS","EMIT_READY","JS_DOC_URL","INITIALIZATION_PARAM_ERROR","TYPE_ERROR","METHOD_DEACTIVATED_ERROR","SEND_BATCH","VISITOR_SYNC_FLAGS_MESSAGE","NEW_VISITOR_NOT_READY","PROCESS_INITIALIZATION","PROCESS_UPDATE_CONTEXT","PROCESS_NEW_VISITOR","PROCESS_SEND_HIT","CUSTOMER_ENV_ID_API_ITEM","CUSTOMER_UID","VISITOR_ID_API_ITEM","DS_API_ITEM","QT_API_ITEM","SDK_APP","HEADER_X_API_KEY","HEADER_CONTENT_TYPE","HEADER_X_SDK_CLIENT","HEADER_X_SDK_VERSION","HEADER_APPLICATION_JSON","PROCESS_BUCKETING","CONTEXT_KEY_ERROR","CONTEXT_VALUE_ERROR","PREDEFINED_CONTEXT_TYPE_ERROR","PROCESS_FETCHING_FLAGS","FLAG_VALUE","GET_FLAG","FLAG_VISITOR_EXPOSED","FLAG_METADATA","NO_FLAG_METADATA","METADATA_SDK_NOT_READY","AUTHENTICATE","VISITOR_AUTHENTICATE_VISITOR_ID_ERROR","UNAUTHENTICATE","ALLOCATION","LOOKUP_VISITOR_JSON_OBJECT_ERROR","PROCESS_CACHE","VISITOR_CACHE_ERROR","HIT_CACHE_ERROR","TRACKING_MANAGER","TRACKING_MANAGER_ERROR","HIT_SENT_SUCCESS","ACTIVATE_HIT","BATCH_HIT","Visitor","visitorDelegate","constructor","super","visitorId","v","anonymousId","config","fetchStatus","hasConsented","setConsent","updateContext","clearContext","getFlag","getFlags","fetchFlags","sendHit","hit","sendHits","hits","authenticate","unauthenticate","FSSdkStatus","DecisionMode","LogLevel","FSFetchReasons","CacheStrategy","TroubleshootingLabel","VisitorCacheStatus","BatchTriggeredBy","HitType","EventCategory","MSG_NAME_FROM_IFRAME","MSG_NAME_TO_IFRAME","INTERNAL_EVENTS","sprintf","format","formatted","item","element","JSON","stringify","Map","from","values","replace","RegExp","logErrorSprintf","tag","logLevel","ERROR","logError","onLog","logManager","logWarningSprintf","WARNING","logWarning","logInfoSprintf","INFO","logInfo","info","logDebugSprintf","DEBUG","logDebug","debug","isBrowser","window","document","hasSameType","flagValue","defaultValue","isArray","uuidV4","char","rand","Math","random","toString","errorFormat","errorData","data","valueToHex","jsonString","charCodeAt","join","hexToValue","hex","hexChar","charCode","parseInt","fromCharCode","parse","TrackingManagerConfig","_batchIntervals","_poolMaxSize","_batchStrategy","param","batchIntervals","poolMaxSize","getCacheStrategy","cacheStrategy","CONTINUOUS_CACHING","PERIODIC_CACHING","FlagshipConfig","_envId","_apiKey","_decisionMode","_timeout","_logLevel","_onSdkStatusChanged","_logManager","_fetchNow","_pollingInterval","_onBucketingFail","_onBucketingSuccess","_onBucketingUpdated","_reuseVisitorIds","_initialBucketing","_decisionApiUrl","_hitDeduplicationTime","_visitorCacheImplementation","_hitCacheImplementation","_disableCache","_trackingManagerConfig","_onVisitorExposed","_fetchThirdPartyData","_nextFetchConfig","_fetchFlagsBufferingTime","_disableDeveloperUsageTracking","_onLog","_isQAModeEnabled","isQAModeEnabled","_enableAnalytics","disableDeveloperUsageTracking","fetchFlagsBufferingTime","nextFetchConfig","fetchThirdPartyData","trackingManagerConfig","onVisitorExposed","envId","apiKey","timeout","onSdkStatusChanged","fetchNow","decisionMode","reuseVisitorIds","initialBucketing","decisionApiUrl","hitDeduplicationTime","visitorCacheImplementation","hitCacheImplementation","disableCache","language","sdkVersion","initQaMode","initSDKInfo","revalidate","ALL","DECISION_API","sessionStorage","getItem","onBucketingSuccess","onBucketingFail","onBucketingUpdated","pollingInterval","fn","BucketingConfig","BUCKETING","DecisionApiConfig","ConfigManager","_config","_decisionManager","_trackingManager","decisionManager","trackingManager","HitAbstract","_visitorId","_type","_ds","_anonymousId","_userIp","_screenResolution","_locale","_sessionNumber","_key","_createdAt","_qaMode","sessionNumber","locale","screenResolution","userIp","ds","createdAt","qaMode","Date","now","isNotEmptyString","itemName","isNumeric","isInteger","toApiKeys","apiKeys","toObject","isReady","_checkParent","Diagnostic","_logVersion","_accountId","_timestamp","_label","_stackType","_stackName","_stackVersion","_stackOriginName","_stackOriginVersion","_sdkStatus","_sdkConfigMode","_sdkConfigCustomLogManager","_sdkConfigCustomCacheManager","_sdkConfigStatusListener","_sdkConfigTimeout","_sdkConfigPollingTime","_sdkConfigTrackingManagerConfigStrategy","_sdkConfigTrackingManagerConfigBatchIntervals","_sdkConfigTrackingManagerConfigBatchLength","_httpRequestUrl","_httpRequestMethod","_httpRequestHeaders","_httpRequestBody","_httpResponseUrl","_httpResponseMethod","_httpResponseHeaders","_httpResponseBody","_visitorStatus","_visitorInstanceType","_visitorContext","_visitorConsent","_visitorAssignmentHistory","_visitorFlags","_visitorIsAuthenticated","_flagKey","_flagValue","_flagDefault","_flagMetadataCampaignId","_flagMetadataVariationGroupId","_flagMetadataVariationId","_flagMetadataCampaignSlug","_flagMetadataCampaignType","_sdkConfigFetchNow","_sdkConfigReuseVisitorIds","_sdkConfigInitialBucketing","_sdkConfigDecisionApiUrl","_sdkConfigHitDeduplicationTime","_visitorInitialCampaigns","_visitorInitialFlagsData","_visitorCampaign","_httRequestTime","_hitContent","_httpInstanceId","_lastInitializationTimestamp","_lastBucketingTimestamp","_batchTriggeredBy","_visitorCampaignFromCache","_timeZone","_flagMetadataCampaignIsReference","_contextKey","_contextValue","_sdkBucketingFile","_flagMetadataCampaignName","_flagMetadataVariationGroupName","_flagMetadataVariationName","_sdkConfigUsingCustomHitCache","_sdkConfigUsingCustomVisitorCache","_sdkConfigUsingOnVisitorExposed","_sdkConfigFetchThirdPartyData","_sdkConfigFetchFlagsBufferingTime","_sdkConfigNextFetchConfig","_sdkConfigDisableDeveloperUsageTracking","_sdkConfigDisableCache","_sdkConfigLogLevel","sdkConfigLogLevel","_visitorSessionId","_traffic","_flagshipInstanceId","traffic","flagshipInstanceId","visitorSessionId","sdkConfigDisableCache","sdkConfigDisableDeveloperUsageTracking","sdkConfigNextFetchConfig","sdkConfigFetchFlagsBufferingTime","sdkConfigFetchThirdPartyData","sdkConfigUsingOnVisitorExposed","sdkConfigUsingCustomVisitorCache","sdkConfigUsingCustomHitCache","flagMetadataVariationName","flagMetadataVariationGroupName","flagMetadataCampaignName","sdkBucketingFile","contextValue","contextKey","flagMetadataCampaignIsReference","timeZone","visitorCampaignFromCache","batchTriggeredBy","lastBucketingTimestamp","lastInitializationTimestamp","hitContent","httpResponseTime","visitorCampaigns","visitorInitialFlagsData","visitorInitialCampaigns","sdkConfigHitDeduplicationTime","sdkConfigDecisionApiUrl","sdkConfigInitialBucketing","sdkConfigReuseVisitorIds","sdkConfigFetchNow","flagMetadataCampaignType","flagMetadataCampaignSlug","flagMetadataVariationId","flagMetadataVariationGroupId","flagMetadataCampaignId","flagDefault","flagKey","visitorIsAuthenticated","visitorFlags","visitorAssignmentHistory","visitorConsent","visitorContext","visitorInstanceType","visitorStatus","httpResponseBody","_httpResponseCode","httpResponseCode","httpResponseHeaders","httpResponseMethod","httpResponseUrl","httpRequestBody","httpRequestHeaders","httpRequestMethod","httpRequestUrl","sdkConfigTrackingManagerPoolMaxSize","sdkConfigTrackingManagerBatchIntervals","sdkConfigTrackingManagerStrategy","sdkConfigPollingInterval","sdkConfigTimeout","sdkConfigStatusListener","sdkConfigCustomCacheManager","sdkConfigCustomLogManager","sdkConfigMode","sdkStatus","stackOriginVersion","stackOriginName","stackVersion","stackName","stackType","label","timestamp","accountId","logVersion","sdkConfigTrackingManagerConfigStrategy","sdkConfigTrackingManagerConfigBatchIntervals","sdkConfigTrackingManagerConfigPoolMaxSize","toISOString","getTimezone","Intl","DateTimeFormat","resolvedOptions","getTimezoneOffset","cv","customVariable","forEach","itemKey","itemValue","hasMetadataKey","checkParent","getErrorMessage","Troubleshooting","DecisionManager","_bucketingContent","_panic","_httpClient","_statusChangedCallback","_troubleshooting","troubleshooting","panic","updateFlagshipStatus","SDK_PANIC","SDK_INITIALIZED","statusChangedCallback","httpClient","getModifications","campaigns","modifications","campaign","object","variation","campaignId","id","campaignName","variationGroupId","variationGroupName","variationId","variationName","isReference","reference","campaignType","slug","isPanic","async","visitor","headers","requestBody","trigger_hit","visitor_consent","url","response","postAsync","body","extras","accountSettings","startDate","endDate","timezone","GET_CAMPAIGNS_ROUTE_RESPONSE_ERROR","instanceId","statusCode","addTroubleshootingHit","errorMessage","duration","ApiManager","getDecisionApiCampaignsAsync","Event","_category","_action","_value","category","includes","action","EVENT","Item","_transactionId","_productName","_productSku","_itemPrice","_itemQuantity","_itemCategory","transactionId","productName","productSku","itemPrice","itemQuantity","trunc","itemCategory","ITEM","Page","_documentLocation","documentLocation","page","PAGE_VIEW","Screen","SCREEN_VIEW","Transaction","_affiliation","_taxes","_currency","_couponCode","_itemCount","_shippingMethod","_paymentMethod","_totalRevenue","_shippingCosts","affiliation","taxes","currency","couponCode","itemCount","shippingMethod","paymentMethod","totalRevenue","shippingCosts","TRANSACTION","Segment","_context","ActivateBatch","_hits","map","x","Batch","params","every","h","hitKeys","sendMessageToIframe","frames","ABTastyQaAssistant","postMessage","sendVisitorAllocatedVariations","visitorVariations","flagship","FsUpdateVisitorAllocatedVariation","sendVisitorExposedVariations","FsVisitorExposedVariation","sendFsHitToQA","FsHIT","qt","BatchingCachingStrategyAbstract","_hitsPoolQueue","_activatePoolQueue","_troubleshootingQueue","_usageHitQueue","_isUsageHitQueueSending","_isTroubleshootingQueueSending","_HitsToFsQa","_sendFsHitToQATimeoutId","_troubleshootingData","troubleshootingData","hitsPoolQueue","activatePoolQueue","troubleshootingQueue","analyticHitQueue","sendHitsToFsQa","clearTimeout","setTimeout","hitKey","addHitInPoolQueue","notConsent","size","BUCKETING_EDGE","sendBatch","activateFlagEdgeMode","activateHitsPool","clear","sendActivate","currentActivate","ActivateLength","cacheHit","activate","fromFlag","flagDefaultValue","metadata","flagMetadata","exposedVisitor","BatchLength","activateHits","batch","hitKeysToRemove","delete","flushHits","monitoringHttpResponse","SEND_BATCH_HIT_ROUTE_RESPONSE_ERROR","sendTroubleshootingHit","filter","_","activateKeys","keysToFlush","hitData","content","time","flushAllHits","isTroubleshootingActivated","addUsageHit","sendUsageHit","BatchingContinuousCachingStrategy","activateBatch","SEND_ACTIVATE_HIT_ROUTE_ERROR","BatchingPeriodicCachingStrategy","hasActivateHit","batchSize","mergedQueue","NoBatchingContinuousCachingStrategy","cacheHitKeys","_hit","DirectHit","SEND_HIT_ROUTE_ERROR","cacheHitKeysEntries","entries","hitsKeys","mergedKeys","Activate","_variationGroupId","_variationId","_flagDefaultValue","_flagMetadata","TrackingManagerAbstract","_analyticHitQueue","strategy","_intervalID","_isPooling","initStrategy","lookupHits","argument","startBatchingLoop","timeInterval","setInterval","batchingLoop","stopBatchingLoop","clearInterval","Timer","sendTroubleshootingQueue","sendUsageHitQueue","checkLookupHitData","hitsCache","checkHitTime","wrongHitKeys","PAGE","SCREEN","TrackingManager","activateFlag","addHit","Flush","FlagshipLogManager","consoleError","consoleWarn","consoleDebug","log","emergency","formatOutput","EMERGENCY","alert","ALERT","critical","CRITICAL","notice","NOTICE","level","getTwoDigit","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","UsageHit","FS_HIT_PREFIX","DefaultHitCache","localDatabaseJson","localStorage","newLocalDatabase","setItem","localDatabase","removeItem","VISITOR_PREFIX","DefaultVisitorCache","cacheVisitor","lookupVisitor","flushVisitor","VISITOR_ID_MISMATCH_ERROR","StrategyAbstract","configManager","_murmurHash","murmurHash","updateCampaigns","flagsData","hasTrackingManager","process","check","consentHit","USER_ENGAGEMENT","hitTroubleshooting","VISITOR_SEND_HIT","sdkInitialData","consentHitTroubleshooting","checKLookupVisitorDataV1","visitorCacheStatus","VISITOR_ID_CACHE","VISITOR_ID_CACHE_NOT_ANONYMOUS_ID_CACHE","ANONYMOUS_ID_CACHE","checKLookupVisitorData","visitorCacheInstance","NONE","visitorCache","anonymousVisitorCache","assignmentsHistory","visitorCacheDTO","consent","activated","anonymousVisitorCacheDTO","getCurrentDateTime","getSdkConfigDecisionMode","uniqueId","toDateString","murmurHash3Int32","analyticData","SDK_CONFIG","getSdkStatus","sendFetchFlagsTroubleshooting","isFromCache","assignmentHistory","toUTCString","fetchFlagTroubleshooting","VISITOR_FETCH_CAMPAIGNS","initialCampaigns","initialFlagsData","sendConsentHitTroubleshooting","sendSegmentHitTroubleshooting","segmentHitTroubleshooting","DEVICE_LOCALE","DEVICE_TYPE","DEVICE_MODEL","LOCATION_CITY","LOCATION_REGION","LOCATION_COUNTRY","LOCATION_LAT","LOCATION_LONG","IP","OS_NAME","OS_VERSION_NAME","OS_VERSION_CODE","CARRIER_NAME","INTERNET_CONNECTION","APP_VERSION_NAME","APP_VERSION_CODE","INTERFACE_NAME","FLAGSHIP_CLIENT","FLAGSHIP_VERSION","FLAGSHIP_VISITOR","FLAGSHIP_CONTEXT","FSFlagMetadata","static","FSFetchStatus","DefaultStrategy","checkPredefinedContext","updateContextKeyValue","valueType","predefinedContext","status","FETCH_REQUIRED","reason","UPDATE_CONTEXT","loadPredefinedContext","fetchVisitorCampaigns","isDeDuplicated","deDuplicationTime","deDuplicationCache","clearDeDuplicationCache","flagDto","activateHit","hitInstanceItem","logData","flag","delay","activateTroubleshooting","VISITOR_SEND_ACTIVATE","prepareAndSendHit","getHit","newHit","toUpperCase","functionName","hitInstance","hitFromInt","sendHitTroubleshooting","monitoring","VISITOR_AUTHENTICATE","VISITOR_UNAUTHENTICATE","fetchCampaignError","lastFetchFlagsTimestamp","FETCHING","getCampaignsPromise","fetchFlagBufferingTime","FETCHED","getCampaignsAsync","PANIC","FETCH_ERROR","READ_FROM_CACHE","visitorAllocatedVariations","sendSdkConfigAnalyticHit","troubleshootingHit","VISITOR_FETCH_CAMPAIGNS_ERROR","hasGetValueBeenCalled","sendFlagTroubleshooting","VISITOR_EXPOSED_FLAG_NOT_FOUND","FLAG_VALUE_NOT_CALLED","VISITOR_EXPOSED_TYPE_WARNING","visitorExposed","getFlagValue","GET_FLAG_VALUE_TYPE_WARNING","GET_FLAG_VALUE_FLAG_NOT_FOUND","SendFlagMetadataTroubleshooting","GET_FLAG_METADATA_TYPE_WARNING","getFlagMetadata","Empty","NotReadyStrategy","emptyMetaData","_flagDto","_defaultValue","methodName","SDK_NOT_INITIALIZED","PanicStrategy","NoConsentStrategy","CLIENT_CACHE_KEY","saveVisitorProfile","visitorProfile","loadVisitorProfile","MurmurHash","seed","h1","h1b","k1","remainder","bytes","c1","c2","VisitorAbstract","_flags","_configManager","_campaigns","_hasConsented","_isCleaningDeDuplicationCache","_exposedVariations","_sendExposedVariationTimeoutId","_instanceId","_sdkInitialData","_consentHitTroubleshooting","_segmentHitTroubleshooting","_fetchStatus","_onFetchFlagsStatusChanged","_getCampaignsPromise","onFetchFlagsStatusChanged","SdkStatus","_visitorCacheStatus","isAuthenticated","monitoringData","generateVisitorId","fs_client","fs_version","fs_users","updateCache","setInitialFlags","setInitializeCampaigns","VISITOR_CREATED","hasInitialFlags","getStrategy","sendExposedVariation","exposedVariations","FSFlagStatus","forceVariation","flagDTO","forcedVariations","forcedVariation","CampaignSlug","FSFlag","_visitor","exists","forcedFlagDTO","getValue","NOT_FOUND","FSFlagCollection","_keys","Set","has","iterator","keysArray","next","done","predicate","all","getMetadata","toJSON","serializedData","callbackfn","VisitorDelegate","visitorFlagSyncStatusMessage","BucketingManager","_lastModified","_isFirstPooling","finishLoop","SDK_BUCKETING_FILE","lastModified","payload","polling","SDK_INITIALIZING","getAsync","method","SDK_BUCKETING_FILE_ERROR","stopPolling","SegmentHit","contexts","partner","segment","thirdPartySegments","getThirdPartySegment","sendContext","currentCampaigns","getVisitorCampaigns","variationGroups","variationGroup","isMatchTargeting","getVariation","hashAllocation","totalAllocation","variations","cacheVariationId","newVariation","find","allocation","targeting","targetingGroups","some","targetingGroup","checkAndTargeting","targetings","isANDListOperator","operator","testOperator","testListOperatorLoop","initialCheck","testListOperator","startsWith","endsWith","HttpError","_statusCode","_headers","myFetch","input","fetch","LocalAbortController","AbortController","HttpClient","checkJson","ok","json","bodyString","text","statusText","options","c","abort","signal","keepalive","getResponse","REQUEST_TIME_OUT","EdgeManager","EdgeConfig","getScriptElement","src","querySelector","render","forcedReFetchFlags","location","reload","triggerRenderEvent","CustomEvent","FsTriggerRendering","detail","dispatchEvent","loadQaAssistant","bundleUrl","sessionForcedVariations","eventListenerMessage","event","func","FsQaAssistantReady","MinimizeQaAssistantClose","QaAssistantClose","getElementById","remove","onQaAssistantClose","FsApplyForcedVariations","onApplyForcedVariations","FsResetForcedVariations","FsTriggerRender","handleIframeMessage","bundleFileUrl","script","createElement","append","appendScript","Flagship","_status","_visitorInstance","_instance","setStatus","statusChanged","getConfig","getInstance","getStatus","getVisitor","buildConfig","newConfig","buildDecisionManager","startPolling","localConfig","urlMap","queryParam","URLSearchParams","search","urlKey","keysPressed","Control","Alt","q","listenForKeyboardQaAssistant","launchQaAssistant","close","newVisitor","shouldSaveInstance","saveInstance"],"sourceRoot":""}