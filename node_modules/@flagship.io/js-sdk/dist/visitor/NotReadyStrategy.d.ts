import { FlagDTO, IFSFlagMetadata, IHit } from '../types';
import { DefaultStrategy } from './DefaultStrategy';
import { HitAbstract } from '../hit/index';
import { BatchDTO } from '../hit/Batch';
import { Troubleshooting } from '../hit/Troubleshooting';
export declare class NotReadyStrategy extends DefaultStrategy {
    lookupHits(): Promise<void>;
    lookupVisitor(): Promise<void>;
    cacheVisitor(): Promise<void>;
    sendHit(_hit: HitAbstract | IHit | BatchDTO): Promise<void>;
    sendHits(_hits: HitAbstract[] | IHit[] | BatchDTO[]): Promise<void>;
    fetchFlags(): Promise<void>;
    getFlagValue<T>(param: {
        key: string;
        defaultValue: T;
        flag?: FlagDTO;
        visitorExposed?: boolean;
    }): T extends null ? unknown : T;
    visitorExposed(): Promise<void>;
    getFlagMetadata(param: {
        key: string;
        flag?: FlagDTO;
    }): IFSFlagMetadata;
    protected sendActivate(_flagDto: FlagDTO, _defaultValue?: unknown): Promise<void>;
    sendTroubleshootingHit(_hit: Troubleshooting): Promise<void>;
    sendSdkConfigAnalyticHit(): Promise<void>;
    private log;
}
