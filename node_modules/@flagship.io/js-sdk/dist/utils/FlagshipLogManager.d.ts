import { LogLevel } from '../enum/index';
export interface IFlagshipLogManager {
    /**
     *System is unusable.
     * @param message
     * @param tag
     */
    emergency(message: string, tag: string): void;
    alert(message: string, tag: string): void;
    critical(message: string, tag: string): void;
    error(message: string, tag: string): void;
    warning(message: string, tag: string): void;
    notice(message: string, tag: string): void;
    info(message: string, tag: string): void;
    debug(message: string, tag: string): void;
    log(level: LogLevel, message: string, tag: string): void;
}
export declare class FlagshipLogManager implements IFlagshipLogManager {
    consoleError: {
        (...data: any[]): void;
        (message?: any, ...optionalParams: any[]): void;
    };
    consoleWarn: {
        (...data: any[]): void;
        (message?: any, ...optionalParams: any[]): void;
    };
    consoleDebug: {
        (...data: any[]): void;
        (message?: any, ...optionalParams: any[]): void;
    };
    constructor();
    emergency(message: string, tag: string): void;
    alert(message: string, tag: string): void;
    critical(message: string, tag: string): void;
    error(message: string, tag: string): void;
    warning(message: string, tag: string): void;
    notice(message: string, tag: string): void;
    info(message: string, tag: string): void;
    debug(message: string, tag: string): void;
    log(level: LogLevel, message: string, tag: string): void;
    protected formatOutput(level: LogLevel, message: string, tag: string): string;
}
