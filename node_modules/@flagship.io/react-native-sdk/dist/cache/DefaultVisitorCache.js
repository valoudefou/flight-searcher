var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import AsyncStorage from "@react-native-async-storage/async-storage";
export const VISITOR_PREFIX = "FS_VISITOR_CACHE_";
export class DefaultVisitorCache {
    cacheVisitor(visitorId, data) {
        return __awaiter(this, void 0, void 0, function* () {
            yield AsyncStorage.setItem(VISITOR_PREFIX + visitorId, JSON.stringify(data));
        });
    }
    lookupVisitor(visitorId) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = yield AsyncStorage.getItem(VISITOR_PREFIX + visitorId);
            return data ? JSON.parse(data) : null;
        });
    }
    flushVisitor(visitorId) {
        return __awaiter(this, void 0, void 0, function* () {
            yield AsyncStorage.removeItem(VISITOR_PREFIX + visitorId);
        });
    }
}
